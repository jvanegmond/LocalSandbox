{"version":3,"sources":["../node_modules/fs.realpath/old.js","../node_modules/fs.realpath/index.js","../node_modules/minimatch/lib/path.js","../node_modules/balanced-match/index.js","../node_modules/brace-expansion/index.js","../node_modules/minimatch/minimatch.js","../node_modules/inherits/inherits_browser.js","../node_modules/inherits/inherits.js","../node_modules/glob/common.js","../node_modules/glob/sync.js","../node_modules/wrappy/wrappy.js","../node_modules/once/once.js","../node_modules/inflight/inflight.js","../node_modules/glob/glob.js","../node_modules/glob-promise/lib/index.js","../node_modules/mkdirp/lib/opts-arg.js","../node_modules/mkdirp/lib/path-arg.js","../node_modules/mkdirp/lib/find-made.js","../node_modules/mkdirp/lib/mkdirp-manual.js","../node_modules/mkdirp/lib/mkdirp-native.js","../node_modules/mkdirp/lib/use-native.js","../node_modules/mkdirp/index.js","../src/index.ts","../node_modules/yargs/lib/platform-shims/esm.mjs","../node_modules/cliui/build/lib/index.js","../node_modules/cliui/build/lib/string-utils.js","../node_modules/cliui/index.mjs","../node_modules/escalade/sync/index.mjs","../node_modules/yargs-parser/build/lib/index.js","../node_modules/yargs-parser/build/lib/string-utils.js","../node_modules/yargs-parser/build/lib/tokenize-arg-string.js","../node_modules/yargs-parser/build/lib/yargs-parser-types.js","../node_modules/yargs-parser/build/lib/yargs-parser.js","../node_modules/yargs/build/lib/utils/process-argv.js","../node_modules/yargs/build/lib/yerror.js","../node_modules/y18n/build/lib/platform-shims/node.js","../node_modules/y18n/build/lib/index.js","../node_modules/y18n/index.mjs","../node_modules/yargs/build/lib/typings/common-types.js","../node_modules/yargs/build/lib/utils/is-promise.js","../node_modules/yargs/build/lib/parse-command.js","../node_modules/yargs/build/lib/argsert.js","../node_modules/yargs/build/lib/middleware.js","../node_modules/yargs/build/lib/utils/maybe-async-result.js","../node_modules/yargs/build/lib/utils/which-module.js","../node_modules/yargs/build/lib/command.js","../node_modules/yargs/build/lib/utils/obj-filter.js","../node_modules/yargs/build/lib/utils/set-blocking.js","../node_modules/yargs/build/lib/usage.js","../node_modules/yargs/build/lib/completion-templates.js","../node_modules/yargs/build/lib/completion.js","../node_modules/yargs/build/lib/utils/levenshtein.js","../node_modules/yargs/build/lib/validation.js","../node_modules/yargs/build/lib/utils/apply-extends.js","../node_modules/yargs/build/lib/yargs-factory.js","../node_modules/yargs/index.mjs","../src/cli.ts"],"sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar pathModule = require('path');\nvar isWindows = process.platform === 'win32';\nvar fs = require('fs');\n\n// JavaScript implementation of realpath, ported from node pre-v6\n\nvar DEBUG = process.env.NODE_DEBUG && /fs/.test(process.env.NODE_DEBUG);\n\nfunction rethrow() {\n  // Only enable in debug mode. A backtrace uses ~1000 bytes of heap space and\n  // is fairly slow to generate.\n  var callback;\n  if (DEBUG) {\n    var backtrace = new Error;\n    callback = debugCallback;\n  } else\n    callback = missingCallback;\n\n  return callback;\n\n  function debugCallback(err) {\n    if (err) {\n      backtrace.message = err.message;\n      err = backtrace;\n      missingCallback(err);\n    }\n  }\n\n  function missingCallback(err) {\n    if (err) {\n      if (process.throwDeprecation)\n        throw err;  // Forgot a callback but don't know where? Use NODE_DEBUG=fs\n      else if (!process.noDeprecation) {\n        var msg = 'fs: missing callback ' + (err.stack || err.message);\n        if (process.traceDeprecation)\n          console.trace(msg);\n        else\n          console.error(msg);\n      }\n    }\n  }\n}\n\nfunction maybeCallback(cb) {\n  return typeof cb === 'function' ? cb : rethrow();\n}\n\nvar normalize = pathModule.normalize;\n\n// Regexp that finds the next partion of a (partial) path\n// result is [base_with_slash, base], e.g. ['somedir/', 'somedir']\nif (isWindows) {\n  var nextPartRe = /(.*?)(?:[\\/\\\\]+|$)/g;\n} else {\n  var nextPartRe = /(.*?)(?:[\\/]+|$)/g;\n}\n\n// Regex to find the device root, including trailing slash. E.g. 'c:\\\\'.\nif (isWindows) {\n  var splitRootRe = /^(?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/][^\\\\\\/]+)?[\\\\\\/]*/;\n} else {\n  var splitRootRe = /^[\\/]*/;\n}\n\nexports.realpathSync = function realpathSync(p, cache) {\n  // make p is absolute\n  p = pathModule.resolve(p);\n\n  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {\n    return cache[p];\n  }\n\n  var original = p,\n      seenLinks = {},\n      knownHard = {};\n\n  // current character position in p\n  var pos;\n  // the partial path so far, including a trailing slash if any\n  var current;\n  // the partial path without a trailing slash (except when pointing at a root)\n  var base;\n  // the partial path scanned in the previous round, with slash\n  var previous;\n\n  start();\n\n  function start() {\n    // Skip over roots\n    var m = splitRootRe.exec(p);\n    pos = m[0].length;\n    current = m[0];\n    base = m[0];\n    previous = '';\n\n    // On windows, check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard[base]) {\n      fs.lstatSync(base);\n      knownHard[base] = true;\n    }\n  }\n\n  // walk down the path, swapping out linked pathparts for their real\n  // values\n  // NB: p.length changes.\n  while (pos < p.length) {\n    // find the next part\n    nextPartRe.lastIndex = pos;\n    var result = nextPartRe.exec(p);\n    previous = current;\n    current += result[0];\n    base = previous + result[1];\n    pos = nextPartRe.lastIndex;\n\n    // continue if not a symlink\n    if (knownHard[base] || (cache && cache[base] === base)) {\n      continue;\n    }\n\n    var resolvedLink;\n    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {\n      // some known symbolic link.  no need to stat again.\n      resolvedLink = cache[base];\n    } else {\n      var stat = fs.lstatSync(base);\n      if (!stat.isSymbolicLink()) {\n        knownHard[base] = true;\n        if (cache) cache[base] = base;\n        continue;\n      }\n\n      // read the link if it wasn't read before\n      // dev/ino always return 0 on windows, so skip the check.\n      var linkTarget = null;\n      if (!isWindows) {\n        var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);\n        if (seenLinks.hasOwnProperty(id)) {\n          linkTarget = seenLinks[id];\n        }\n      }\n      if (linkTarget === null) {\n        fs.statSync(base);\n        linkTarget = fs.readlinkSync(base);\n      }\n      resolvedLink = pathModule.resolve(previous, linkTarget);\n      // track this, if given a cache.\n      if (cache) cache[base] = resolvedLink;\n      if (!isWindows) seenLinks[id] = linkTarget;\n    }\n\n    // resolve the link, then start over\n    p = pathModule.resolve(resolvedLink, p.slice(pos));\n    start();\n  }\n\n  if (cache) cache[original] = p;\n\n  return p;\n};\n\n\nexports.realpath = function realpath(p, cache, cb) {\n  if (typeof cb !== 'function') {\n    cb = maybeCallback(cache);\n    cache = null;\n  }\n\n  // make p is absolute\n  p = pathModule.resolve(p);\n\n  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {\n    return process.nextTick(cb.bind(null, null, cache[p]));\n  }\n\n  var original = p,\n      seenLinks = {},\n      knownHard = {};\n\n  // current character position in p\n  var pos;\n  // the partial path so far, including a trailing slash if any\n  var current;\n  // the partial path without a trailing slash (except when pointing at a root)\n  var base;\n  // the partial path scanned in the previous round, with slash\n  var previous;\n\n  start();\n\n  function start() {\n    // Skip over roots\n    var m = splitRootRe.exec(p);\n    pos = m[0].length;\n    current = m[0];\n    base = m[0];\n    previous = '';\n\n    // On windows, check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard[base]) {\n      fs.lstat(base, function(err) {\n        if (err) return cb(err);\n        knownHard[base] = true;\n        LOOP();\n      });\n    } else {\n      process.nextTick(LOOP);\n    }\n  }\n\n  // walk down the path, swapping out linked pathparts for their real\n  // values\n  function LOOP() {\n    // stop if scanned past end of path\n    if (pos >= p.length) {\n      if (cache) cache[original] = p;\n      return cb(null, p);\n    }\n\n    // find the next part\n    nextPartRe.lastIndex = pos;\n    var result = nextPartRe.exec(p);\n    previous = current;\n    current += result[0];\n    base = previous + result[1];\n    pos = nextPartRe.lastIndex;\n\n    // continue if not a symlink\n    if (knownHard[base] || (cache && cache[base] === base)) {\n      return process.nextTick(LOOP);\n    }\n\n    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {\n      // known symbolic link.  no need to stat again.\n      return gotResolvedLink(cache[base]);\n    }\n\n    return fs.lstat(base, gotStat);\n  }\n\n  function gotStat(err, stat) {\n    if (err) return cb(err);\n\n    // if not a symlink, skip to the next path part\n    if (!stat.isSymbolicLink()) {\n      knownHard[base] = true;\n      if (cache) cache[base] = base;\n      return process.nextTick(LOOP);\n    }\n\n    // stat & read the link if not read before\n    // call gotTarget as soon as the link target is known\n    // dev/ino always return 0 on windows, so skip the check.\n    if (!isWindows) {\n      var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);\n      if (seenLinks.hasOwnProperty(id)) {\n        return gotTarget(null, seenLinks[id], base);\n      }\n    }\n    fs.stat(base, function(err) {\n      if (err) return cb(err);\n\n      fs.readlink(base, function(err, target) {\n        if (!isWindows) seenLinks[id] = target;\n        gotTarget(err, target);\n      });\n    });\n  }\n\n  function gotTarget(err, target, base) {\n    if (err) return cb(err);\n\n    var resolvedLink = pathModule.resolve(previous, target);\n    if (cache) cache[base] = resolvedLink;\n    gotResolvedLink(resolvedLink);\n  }\n\n  function gotResolvedLink(resolvedLink) {\n    // resolve the link, then start over\n    p = pathModule.resolve(resolvedLink, p.slice(pos));\n    start();\n  }\n};\n","module.exports = realpath\nrealpath.realpath = realpath\nrealpath.sync = realpathSync\nrealpath.realpathSync = realpathSync\nrealpath.monkeypatch = monkeypatch\nrealpath.unmonkeypatch = unmonkeypatch\n\nvar fs = require('fs')\nvar origRealpath = fs.realpath\nvar origRealpathSync = fs.realpathSync\n\nvar version = process.version\nvar ok = /^v[0-5]\\./.test(version)\nvar old = require('./old.js')\n\nfunction newError (er) {\n  return er && er.syscall === 'realpath' && (\n    er.code === 'ELOOP' ||\n    er.code === 'ENOMEM' ||\n    er.code === 'ENAMETOOLONG'\n  )\n}\n\nfunction realpath (p, cache, cb) {\n  if (ok) {\n    return origRealpath(p, cache, cb)\n  }\n\n  if (typeof cache === 'function') {\n    cb = cache\n    cache = null\n  }\n  origRealpath(p, cache, function (er, result) {\n    if (newError(er)) {\n      old.realpath(p, cache, cb)\n    } else {\n      cb(er, result)\n    }\n  })\n}\n\nfunction realpathSync (p, cache) {\n  if (ok) {\n    return origRealpathSync(p, cache)\n  }\n\n  try {\n    return origRealpathSync(p, cache)\n  } catch (er) {\n    if (newError(er)) {\n      return old.realpathSync(p, cache)\n    } else {\n      throw er\n    }\n  }\n}\n\nfunction monkeypatch () {\n  fs.realpath = realpath\n  fs.realpathSync = realpathSync\n}\n\nfunction unmonkeypatch () {\n  fs.realpath = origRealpath\n  fs.realpathSync = origRealpathSync\n}\n","const isWindows = typeof process === 'object' &&\n  process &&\n  process.platform === 'win32'\nmodule.exports = isWindows ? { sep: '\\\\' } : { sep: '/' }\n","'use strict';\nmodule.exports = balanced;\nfunction balanced(a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str);\n  if (b instanceof RegExp) b = maybeMatch(b, str);\n\n  var r = range(a, b, str);\n\n  return r && {\n    start: r[0],\n    end: r[1],\n    pre: str.slice(0, r[0]),\n    body: str.slice(r[0] + a.length, r[1]),\n    post: str.slice(r[1] + b.length)\n  };\n}\n\nfunction maybeMatch(reg, str) {\n  var m = str.match(reg);\n  return m ? m[0] : null;\n}\n\nbalanced.range = range;\nfunction range(a, b, str) {\n  var begs, beg, left, right, result;\n  var ai = str.indexOf(a);\n  var bi = str.indexOf(b, ai + 1);\n  var i = ai;\n\n  if (ai >= 0 && bi > 0) {\n    if(a===b) {\n      return [ai, bi];\n    }\n    begs = [];\n    left = str.length;\n\n    while (i >= 0 && !result) {\n      if (i == ai) {\n        begs.push(i);\n        ai = str.indexOf(a, i + 1);\n      } else if (begs.length == 1) {\n        result = [ begs.pop(), bi ];\n      } else {\n        beg = begs.pop();\n        if (beg < left) {\n          left = beg;\n          right = bi;\n        }\n\n        bi = str.indexOf(b, i + 1);\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi;\n    }\n\n    if (begs.length) {\n      result = [ left, right ];\n    }\n  }\n\n  return result;\n}\n","var balanced = require('balanced-match');\n\nmodule.exports = expandTop;\n\nvar escSlash = '\\0SLASH'+Math.random()+'\\0';\nvar escOpen = '\\0OPEN'+Math.random()+'\\0';\nvar escClose = '\\0CLOSE'+Math.random()+'\\0';\nvar escComma = '\\0COMMA'+Math.random()+'\\0';\nvar escPeriod = '\\0PERIOD'+Math.random()+'\\0';\n\nfunction numeric(str) {\n  return parseInt(str, 10) == str\n    ? parseInt(str, 10)\n    : str.charCodeAt(0);\n}\n\nfunction escapeBraces(str) {\n  return str.split('\\\\\\\\').join(escSlash)\n            .split('\\\\{').join(escOpen)\n            .split('\\\\}').join(escClose)\n            .split('\\\\,').join(escComma)\n            .split('\\\\.').join(escPeriod);\n}\n\nfunction unescapeBraces(str) {\n  return str.split(escSlash).join('\\\\')\n            .split(escOpen).join('{')\n            .split(escClose).join('}')\n            .split(escComma).join(',')\n            .split(escPeriod).join('.');\n}\n\n\n// Basically just str.split(\",\"), but handling cases\n// where we have nested braced sections, which should be\n// treated as individual members, like {a,{b,c},d}\nfunction parseCommaParts(str) {\n  if (!str)\n    return [''];\n\n  var parts = [];\n  var m = balanced('{', '}', str);\n\n  if (!m)\n    return str.split(',');\n\n  var pre = m.pre;\n  var body = m.body;\n  var post = m.post;\n  var p = pre.split(',');\n\n  p[p.length-1] += '{' + body + '}';\n  var postParts = parseCommaParts(post);\n  if (post.length) {\n    p[p.length-1] += postParts.shift();\n    p.push.apply(p, postParts);\n  }\n\n  parts.push.apply(parts, p);\n\n  return parts;\n}\n\nfunction expandTop(str) {\n  if (!str)\n    return [];\n\n  // I don't know why Bash 4.3 does this, but it does.\n  // Anything starting with {} will have the first two bytes preserved\n  // but *only* at the top level, so {},a}b will not expand to anything,\n  // but a{},b}c will be expanded to [a}c,abc].\n  // One could argue that this is a bug in Bash, but since the goal of\n  // this module is to match Bash's rules, we escape a leading {}\n  if (str.substr(0, 2) === '{}') {\n    str = '\\\\{\\\\}' + str.substr(2);\n  }\n\n  return expand(escapeBraces(str), true).map(unescapeBraces);\n}\n\nfunction embrace(str) {\n  return '{' + str + '}';\n}\nfunction isPadded(el) {\n  return /^-?0\\d/.test(el);\n}\n\nfunction lte(i, y) {\n  return i <= y;\n}\nfunction gte(i, y) {\n  return i >= y;\n}\n\nfunction expand(str, isTop) {\n  var expansions = [];\n\n  var m = balanced('{', '}', str);\n  if (!m) return [str];\n\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\n  var pre = m.pre;\n  var post = m.post.length\n    ? expand(m.post, false)\n    : [''];\n\n  if (/\\$$/.test(m.pre)) {    \n    for (var k = 0; k < post.length; k++) {\n      var expansion = pre+ '{' + m.body + '}' + post[k];\n      expansions.push(expansion);\n    }\n  } else {\n    var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\n    var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\n    var isSequence = isNumericSequence || isAlphaSequence;\n    var isOptions = m.body.indexOf(',') >= 0;\n    if (!isSequence && !isOptions) {\n      // {a},b}\n      if (m.post.match(/,.*\\}/)) {\n        str = m.pre + '{' + m.body + escClose + m.post;\n        return expand(str);\n      }\n      return [str];\n    }\n\n    var n;\n    if (isSequence) {\n      n = m.body.split(/\\.\\./);\n    } else {\n      n = parseCommaParts(m.body);\n      if (n.length === 1) {\n        // x{{a,b}}y ==> x{a}y x{b}y\n        n = expand(n[0], false).map(embrace);\n        if (n.length === 1) {\n          return post.map(function(p) {\n            return m.pre + n[0] + p;\n          });\n        }\n      }\n    }\n\n    // at this point, n is the parts, and we know it's not a comma set\n    // with a single entry.\n    var N;\n\n    if (isSequence) {\n      var x = numeric(n[0]);\n      var y = numeric(n[1]);\n      var width = Math.max(n[0].length, n[1].length)\n      var incr = n.length == 3\n        ? Math.abs(numeric(n[2]))\n        : 1;\n      var test = lte;\n      var reverse = y < x;\n      if (reverse) {\n        incr *= -1;\n        test = gte;\n      }\n      var pad = n.some(isPadded);\n\n      N = [];\n\n      for (var i = x; test(i, y); i += incr) {\n        var c;\n        if (isAlphaSequence) {\n          c = String.fromCharCode(i);\n          if (c === '\\\\')\n            c = '';\n        } else {\n          c = String(i);\n          if (pad) {\n            var need = width - c.length;\n            if (need > 0) {\n              var z = new Array(need + 1).join('0');\n              if (i < 0)\n                c = '-' + z + c.slice(1);\n              else\n                c = z + c;\n            }\n          }\n        }\n        N.push(c);\n      }\n    } else {\n      N = [];\n\n      for (var j = 0; j < n.length; j++) {\n        N.push.apply(N, expand(n[j], false));\n      }\n    }\n\n    for (var j = 0; j < N.length; j++) {\n      for (var k = 0; k < post.length; k++) {\n        var expansion = pre + N[j] + post[k];\n        if (!isTop || isSequence || expansion)\n          expansions.push(expansion);\n      }\n    }\n  }\n\n  return expansions;\n}\n\n","const minimatch = module.exports = (p, pattern, options = {}) => {\n  assertValidPattern(pattern)\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  return new Minimatch(pattern, options).match(p)\n}\n\nmodule.exports = minimatch\n\nconst path = require('./lib/path.js')\nminimatch.sep = path.sep\n\nconst GLOBSTAR = Symbol('globstar **')\nminimatch.GLOBSTAR = GLOBSTAR\nconst expand = require('brace-expansion')\n\nconst plTypes = {\n  '!': { open: '(?:(?!(?:', close: '))[^/]*?)'},\n  '?': { open: '(?:', close: ')?' },\n  '+': { open: '(?:', close: ')+' },\n  '*': { open: '(?:', close: ')*' },\n  '@': { open: '(?:', close: ')' }\n}\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nconst qmark = '[^/]'\n\n// * => any number of characters\nconst star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nconst twoStarDot = '(?:(?!(?:\\\\\\/|^)(?:\\\\.{1,2})($|\\\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nconst twoStarNoDot = '(?:(?!(?:\\\\\\/|^)\\\\.).)*?'\n\n// \"abc\" -> { a:true, b:true, c:true }\nconst charSet = s => s.split('').reduce((set, c) => {\n  set[c] = true\n  return set\n}, {})\n\n// characters that need to be escaped in RegExp.\nconst reSpecials = charSet('().*{}+?[]^$\\\\!')\n\n// characters that indicate we have to add the pattern start\nconst addPatternStartSet = charSet('[.(')\n\n// normalizes slashes.\nconst slashSplit = /\\/+/\n\nminimatch.filter = (pattern, options = {}) =>\n  (p, i, list) => minimatch(p, pattern, options)\n\nconst ext = (a, b = {}) => {\n  const t = {}\n  Object.keys(a).forEach(k => t[k] = a[k])\n  Object.keys(b).forEach(k => t[k] = b[k])\n  return t\n}\n\nminimatch.defaults = def => {\n  if (!def || typeof def !== 'object' || !Object.keys(def).length) {\n    return minimatch\n  }\n\n  const orig = minimatch\n\n  const m = (p, pattern, options) => orig(p, pattern, ext(def, options))\n  m.Minimatch = class Minimatch extends orig.Minimatch {\n    constructor (pattern, options) {\n      super(pattern, ext(def, options))\n    }\n  }\n  m.Minimatch.defaults = options => orig.defaults(ext(def, options)).Minimatch\n  m.filter = (pattern, options) => orig.filter(pattern, ext(def, options))\n  m.defaults = options => orig.defaults(ext(def, options))\n  m.makeRe = (pattern, options) => orig.makeRe(pattern, ext(def, options))\n  m.braceExpand = (pattern, options) => orig.braceExpand(pattern, ext(def, options))\n  m.match = (list, pattern, options) => orig.match(list, pattern, ext(def, options))\n\n  return m\n}\n\n\n\n\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nminimatch.braceExpand = (pattern, options) => braceExpand(pattern, options)\n\nconst braceExpand = (pattern, options = {}) => {\n  assertValidPattern(pattern)\n\n  // Thanks to Yeting Li <https://github.com/yetingli> for\n  // improving this regexp to avoid a ReDOS vulnerability.\n  if (options.nobrace || !/\\{(?:(?!\\{).)*\\}/.test(pattern)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\n\nconst MAX_PATTERN_LENGTH = 1024 * 64\nconst assertValidPattern = pattern => {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('invalid pattern')\n  }\n\n  if (pattern.length > MAX_PATTERN_LENGTH) {\n    throw new TypeError('pattern is too long')\n  }\n}\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\nconst SUBPARSE = Symbol('subparse')\n\nminimatch.makeRe = (pattern, options) =>\n  new Minimatch(pattern, options || {}).makeRe()\n\nminimatch.match = (list, pattern, options = {}) => {\n  const mm = new Minimatch(pattern, options)\n  list = list.filter(f => mm.match(f))\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\n\n// replace stuff like \\* with *\nconst globUnescape = s => s.replace(/\\\\(.)/g, '$1')\nconst charUnescape = s => s.replace(/\\\\([^-\\]])/g, '$1')\nconst regExpEscape = s => s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\nconst braExpEscape = s => s.replace(/[[\\]\\\\]/g, '\\\\$&')\n\nclass Minimatch {\n  constructor (pattern, options) {\n    assertValidPattern(pattern)\n\n    if (!options) options = {}\n\n    this.options = options\n    this.set = []\n    this.pattern = pattern\n    this.windowsPathsNoEscape = !!options.windowsPathsNoEscape ||\n      options.allowWindowsEscape === false\n    if (this.windowsPathsNoEscape) {\n      this.pattern = this.pattern.replace(/\\\\/g, '/')\n    }\n    this.regexp = null\n    this.negate = false\n    this.comment = false\n    this.empty = false\n    this.partial = !!options.partial\n\n    // make the set of regexps etc.\n    this.make()\n  }\n\n  debug () {}\n\n  make () {\n    const pattern = this.pattern\n    const options = this.options\n\n    // empty patterns and comments match nothing.\n    if (!options.nocomment && pattern.charAt(0) === '#') {\n      this.comment = true\n      return\n    }\n    if (!pattern) {\n      this.empty = true\n      return\n    }\n\n    // step 1: figure out negation, etc.\n    this.parseNegate()\n\n    // step 2: expand braces\n    let set = this.globSet = this.braceExpand()\n\n    if (options.debug) this.debug = (...args) => console.error(...args)\n\n    this.debug(this.pattern, set)\n\n    // step 3: now we have a set, so turn each one into a series of path-portion\n    // matching patterns.\n    // These will be regexps, except in the case of \"**\", which is\n    // set to the GLOBSTAR object for globstar behavior,\n    // and will not contain any / characters\n    set = this.globParts = set.map(s => s.split(slashSplit))\n\n    this.debug(this.pattern, set)\n\n    // glob --> regexps\n    set = set.map((s, si, set) => s.map(this.parse, this))\n\n    this.debug(this.pattern, set)\n\n    // filter out everything that didn't compile properly.\n    set = set.filter(s => s.indexOf(false) === -1)\n\n    this.debug(this.pattern, set)\n\n    this.set = set\n  }\n\n  parseNegate () {\n    if (this.options.nonegate) return\n\n    const pattern = this.pattern\n    let negate = false\n    let negateOffset = 0\n\n    for (let i = 0; i < pattern.length && pattern.charAt(i) === '!'; i++) {\n      negate = !negate\n      negateOffset++\n    }\n\n    if (negateOffset) this.pattern = pattern.slice(negateOffset)\n    this.negate = negate\n  }\n\n  // set partial to true to test if, for example,\n  // \"/a/b\" matches the start of \"/*/b/*/d\"\n  // Partial means, if you run out of file before you run\n  // out of pattern, then that's fine, as long as all\n  // the parts match.\n  matchOne (file, pattern, partial) {\n    var options = this.options\n\n    this.debug('matchOne',\n      { 'this': this, file: file, pattern: pattern })\n\n    this.debug('matchOne', file.length, pattern.length)\n\n    for (var fi = 0,\n        pi = 0,\n        fl = file.length,\n        pl = pattern.length\n        ; (fi < fl) && (pi < pl)\n        ; fi++, pi++) {\n      this.debug('matchOne loop')\n      var p = pattern[pi]\n      var f = file[fi]\n\n      this.debug(pattern, p, f)\n\n      // should be impossible.\n      // some invalid regexp stuff in the set.\n      /* istanbul ignore if */\n      if (p === false) return false\n\n      if (p === GLOBSTAR) {\n        this.debug('GLOBSTAR', [pattern, p, f])\n\n        // \"**\"\n        // a/**/b/**/c would match the following:\n        // a/b/x/y/z/c\n        // a/x/y/z/b/c\n        // a/b/x/b/x/c\n        // a/b/c\n        // To do this, take the rest of the pattern after\n        // the **, and see if it would match the file remainder.\n        // If so, return success.\n        // If not, the ** \"swallows\" a segment, and try again.\n        // This is recursively awful.\n        //\n        // a/**/b/**/c matching a/b/x/y/z/c\n        // - a matches a\n        // - doublestar\n        //   - matchOne(b/x/y/z/c, b/**/c)\n        //     - b matches b\n        //     - doublestar\n        //       - matchOne(x/y/z/c, c) -> no\n        //       - matchOne(y/z/c, c) -> no\n        //       - matchOne(z/c, c) -> no\n        //       - matchOne(c, c) yes, hit\n        var fr = fi\n        var pr = pi + 1\n        if (pr === pl) {\n          this.debug('** at the end')\n          // a ** at the end will just swallow the rest.\n          // We have found a match.\n          // however, it will not swallow /.x, unless\n          // options.dot is set.\n          // . and .. are *never* matched by **, for explosively\n          // exponential reasons.\n          for (; fi < fl; fi++) {\n            if (file[fi] === '.' || file[fi] === '..' ||\n              (!options.dot && file[fi].charAt(0) === '.')) return false\n          }\n          return true\n        }\n\n        // ok, let's see if we can swallow whatever we can.\n        while (fr < fl) {\n          var swallowee = file[fr]\n\n          this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n          // XXX remove this slice.  Just pass the start index.\n          if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n            this.debug('globstar found match!', fr, fl, swallowee)\n            // found a match.\n            return true\n          } else {\n            // can't swallow \".\" or \"..\" ever.\n            // can only swallow \".foo\" when explicitly asked.\n            if (swallowee === '.' || swallowee === '..' ||\n              (!options.dot && swallowee.charAt(0) === '.')) {\n              this.debug('dot detected!', file, fr, pattern, pr)\n              break\n            }\n\n            // ** swallows a segment, and continue.\n            this.debug('globstar swallow a segment, and continue')\n            fr++\n          }\n        }\n\n        // no match was found.\n        // However, in partial mode, we can't say this is necessarily over.\n        // If there's more *pattern* left, then\n        /* istanbul ignore if */\n        if (partial) {\n          // ran out of file\n          this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n          if (fr === fl) return true\n        }\n        return false\n      }\n\n      // something other than **\n      // non-magic patterns just have to match exactly\n      // patterns with magic have been turned into regexps.\n      var hit\n      if (typeof p === 'string') {\n        hit = f === p\n        this.debug('string match', p, f, hit)\n      } else {\n        hit = f.match(p)\n        this.debug('pattern match', p, f, hit)\n      }\n\n      if (!hit) return false\n    }\n\n    // Note: ending in / means that we'll get a final \"\"\n    // at the end of the pattern.  This can only match a\n    // corresponding \"\" at the end of the file.\n    // If the file ends in /, then it can only match a\n    // a pattern that ends in /, unless the pattern just\n    // doesn't have any more for it. But, a/b/ should *not*\n    // match \"a/b/*\", even though \"\" matches against the\n    // [^/]*? pattern, except in partial mode, where it might\n    // simply not be reached yet.\n    // However, a/b/ should still satisfy a/*\n\n    // now either we fell off the end of the pattern, or we're done.\n    if (fi === fl && pi === pl) {\n      // ran out of pattern and filename at the same time.\n      // an exact hit!\n      return true\n    } else if (fi === fl) {\n      // ran out of file, but still had pattern left.\n      // this is ok if we're doing the match as part of\n      // a glob fs traversal.\n      return partial\n    } else /* istanbul ignore else */ if (pi === pl) {\n      // ran out of pattern, still have file left.\n      // this is only acceptable if we're on the very last\n      // empty segment of a file with a trailing slash.\n      // a/* should match a/b/\n      return (fi === fl - 1) && (file[fi] === '')\n    }\n\n    // should be unreachable.\n    /* istanbul ignore next */\n    throw new Error('wtf?')\n  }\n\n  braceExpand () {\n    return braceExpand(this.pattern, this.options)\n  }\n\n  parse (pattern, isSub) {\n    assertValidPattern(pattern)\n\n    const options = this.options\n\n    // shortcuts\n    if (pattern === '**') {\n      if (!options.noglobstar)\n        return GLOBSTAR\n      else\n        pattern = '*'\n    }\n    if (pattern === '') return ''\n\n    let re = ''\n    let hasMagic = !!options.nocase\n    let escaping = false\n    // ? => one single character\n    const patternListStack = []\n    const negativeLists = []\n    let stateChar\n    let inClass = false\n    let reClassStart = -1\n    let classStart = -1\n    let cs\n    let pl\n    let sp\n    // . and .. never match anything that doesn't start with .,\n    // even when options.dot is set.\n    const patternStart = pattern.charAt(0) === '.' ? '' // anything\n    // not (start or / followed by . or .. followed by / or end)\n    : options.dot ? '(?!(?:^|\\\\\\/)\\\\.{1,2}(?:$|\\\\\\/))'\n    : '(?!\\\\.)'\n\n    const clearStateChar = () => {\n      if (stateChar) {\n        // we had some state-tracking character\n        // that wasn't consumed by this pass.\n        switch (stateChar) {\n          case '*':\n            re += star\n            hasMagic = true\n          break\n          case '?':\n            re += qmark\n            hasMagic = true\n          break\n          default:\n            re += '\\\\' + stateChar\n          break\n        }\n        this.debug('clearStateChar %j %j', stateChar, re)\n        stateChar = false\n      }\n    }\n\n    for (let i = 0, c; (i < pattern.length) && (c = pattern.charAt(i)); i++) {\n      this.debug('%s\\t%s %s %j', pattern, i, re, c)\n\n      // skip over any that are escaped.\n      if (escaping) {\n        /* istanbul ignore next - completely not allowed, even escaped. */\n        if (c === '/') {\n          return false\n        }\n\n        if (reSpecials[c]) {\n          re += '\\\\'\n        }\n        re += c\n        escaping = false\n        continue\n      }\n\n      switch (c) {\n        /* istanbul ignore next */\n        case '/': {\n          // Should already be path-split by now.\n          return false\n        }\n\n        case '\\\\':\n          if (inClass && pattern.charAt(i + 1) === '-') {\n            re += c\n            continue\n          }\n\n          clearStateChar()\n          escaping = true\n        continue\n\n        // the various stateChar values\n        // for the \"extglob\" stuff.\n        case '?':\n        case '*':\n        case '+':\n        case '@':\n        case '!':\n          this.debug('%s\\t%s %s %j <-- stateChar', pattern, i, re, c)\n\n          // all of those are literals inside a class, except that\n          // the glob [!a] means [^a] in regexp\n          if (inClass) {\n            this.debug('  in class')\n            if (c === '!' && i === classStart + 1) c = '^'\n            re += c\n            continue\n          }\n\n          // if we already have a stateChar, then it means\n          // that there was something like ** or +? in there.\n          // Handle the stateChar, then proceed with this one.\n          this.debug('call clearStateChar %j', stateChar)\n          clearStateChar()\n          stateChar = c\n          // if extglob is disabled, then +(asdf|foo) isn't a thing.\n          // just clear the statechar *now*, rather than even diving into\n          // the patternList stuff.\n          if (options.noext) clearStateChar()\n        continue\n\n        case '(':\n          if (inClass) {\n            re += '('\n            continue\n          }\n\n          if (!stateChar) {\n            re += '\\\\('\n            continue\n          }\n\n          patternListStack.push({\n            type: stateChar,\n            start: i - 1,\n            reStart: re.length,\n            open: plTypes[stateChar].open,\n            close: plTypes[stateChar].close\n          })\n          // negation is (?:(?!js)[^/]*)\n          re += stateChar === '!' ? '(?:(?!(?:' : '(?:'\n          this.debug('plType %j %j', stateChar, re)\n          stateChar = false\n        continue\n\n        case ')':\n          if (inClass || !patternListStack.length) {\n            re += '\\\\)'\n            continue\n          }\n\n          clearStateChar()\n          hasMagic = true\n          pl = patternListStack.pop()\n          // negation is (?:(?!js)[^/]*)\n          // The others are (?:<pattern>)<type>\n          re += pl.close\n          if (pl.type === '!') {\n            negativeLists.push(pl)\n          }\n          pl.reEnd = re.length\n        continue\n\n        case '|':\n          if (inClass || !patternListStack.length) {\n            re += '\\\\|'\n            continue\n          }\n\n          clearStateChar()\n          re += '|'\n        continue\n\n        // these are mostly the same in regexp and glob\n        case '[':\n          // swallow any state-tracking char before the [\n          clearStateChar()\n\n          if (inClass) {\n            re += '\\\\' + c\n            continue\n          }\n\n          inClass = true\n          classStart = i\n          reClassStart = re.length\n          re += c\n        continue\n\n        case ']':\n          //  a right bracket shall lose its special\n          //  meaning and represent itself in\n          //  a bracket expression if it occurs\n          //  first in the list.  -- POSIX.2 2.8.3.2\n          if (i === classStart + 1 || !inClass) {\n            re += '\\\\' + c\n            continue\n          }\n\n          // split where the last [ was, make sure we don't have\n          // an invalid re. if so, re-walk the contents of the\n          // would-be class to re-translate any characters that\n          // were passed through as-is\n          // TODO: It would probably be faster to determine this\n          // without a try/catch and a new RegExp, but it's tricky\n          // to do safely.  For now, this is safe and works.\n          cs = pattern.substring(classStart + 1, i)\n          try {\n            RegExp('[' + braExpEscape(charUnescape(cs)) + ']')\n            // looks good, finish up the class.\n            re += c\n          } catch (er) {\n            // out of order ranges in JS are errors, but in glob syntax,\n            // they're just a range that matches nothing.\n            re = re.substring(0, reClassStart) + '(?:$.)' // match nothing ever\n          }\n          hasMagic = true\n          inClass = false\n        continue\n\n        default:\n          // swallow any state char that wasn't consumed\n          clearStateChar()\n\n          if (reSpecials[c] && !(c === '^' && inClass)) {\n            re += '\\\\'\n          }\n\n          re += c\n          break\n\n      } // switch\n    } // for\n\n    // handle the case where we left a class open.\n    // \"[abc\" is valid, equivalent to \"\\[abc\"\n    if (inClass) {\n      // split where the last [ was, and escape it\n      // this is a huge pita.  We now have to re-walk\n      // the contents of the would-be class to re-translate\n      // any characters that were passed through as-is\n      cs = pattern.slice(classStart + 1)\n      sp = this.parse(cs, SUBPARSE)\n      re = re.substring(0, reClassStart) + '\\\\[' + sp[0]\n      hasMagic = hasMagic || sp[1]\n    }\n\n    // handle the case where we had a +( thing at the *end*\n    // of the pattern.\n    // each pattern list stack adds 3 chars, and we need to go through\n    // and escape any | chars that were passed through as-is for the regexp.\n    // Go through and escape them, taking care not to double-escape any\n    // | chars that were already escaped.\n    for (pl = patternListStack.pop(); pl; pl = patternListStack.pop()) {\n      let tail\n      tail = re.slice(pl.reStart + pl.open.length)\n      this.debug('setting tail', re, pl)\n      // maybe some even number of \\, then maybe 1 \\, followed by a |\n      tail = tail.replace(/((?:\\\\{2}){0,64})(\\\\?)\\|/g, (_, $1, $2) => {\n        /* istanbul ignore else - should already be done */\n        if (!$2) {\n          // the | isn't already escaped, so escape it.\n          $2 = '\\\\'\n        }\n\n        // need to escape all those slashes *again*, without escaping the\n        // one that we need for escaping the | character.  As it works out,\n        // escaping an even number of slashes can be done by simply repeating\n        // it exactly after itself.  That's why this trick works.\n        //\n        // I am sorry that you have to see this.\n        return $1 + $1 + $2 + '|'\n      })\n\n      this.debug('tail=%j\\n   %s', tail, tail, pl, re)\n      const t = pl.type === '*' ? star\n        : pl.type === '?' ? qmark\n        : '\\\\' + pl.type\n\n      hasMagic = true\n      re = re.slice(0, pl.reStart) + t + '\\\\(' + tail\n    }\n\n    // handle trailing things that only matter at the very end.\n    clearStateChar()\n    if (escaping) {\n      // trailing \\\\\n      re += '\\\\\\\\'\n    }\n\n    // only need to apply the nodot start if the re starts with\n    // something that could conceivably capture a dot\n    const addPatternStart = addPatternStartSet[re.charAt(0)]\n\n    // Hack to work around lack of negative lookbehind in JS\n    // A pattern like: *.!(x).!(y|z) needs to ensure that a name\n    // like 'a.xyz.yz' doesn't match.  So, the first negative\n    // lookahead, has to look ALL the way ahead, to the end of\n    // the pattern.\n    for (let n = negativeLists.length - 1; n > -1; n--) {\n      const nl = negativeLists[n]\n\n      const nlBefore = re.slice(0, nl.reStart)\n      const nlFirst = re.slice(nl.reStart, nl.reEnd - 8)\n      let nlAfter = re.slice(nl.reEnd)\n      const nlLast = re.slice(nl.reEnd - 8, nl.reEnd) + nlAfter\n\n      // Handle nested stuff like *(*.js|!(*.json)), where open parens\n      // mean that we should *not* include the ) in the bit that is considered\n      // \"after\" the negated section.\n      const openParensBefore = nlBefore.split('(').length - 1\n      let cleanAfter = nlAfter\n      for (let i = 0; i < openParensBefore; i++) {\n        cleanAfter = cleanAfter.replace(/\\)[+*?]?/, '')\n      }\n      nlAfter = cleanAfter\n\n      const dollar = nlAfter === '' && isSub !== SUBPARSE ? '$' : ''\n      re = nlBefore + nlFirst + nlAfter + dollar + nlLast\n    }\n\n    // if the re is not \"\" at this point, then we need to make sure\n    // it doesn't match against an empty path part.\n    // Otherwise a/* will match a/, which it should not.\n    if (re !== '' && hasMagic) {\n      re = '(?=.)' + re\n    }\n\n    if (addPatternStart) {\n      re = patternStart + re\n    }\n\n    // parsing just a piece of a larger pattern.\n    if (isSub === SUBPARSE) {\n      return [re, hasMagic]\n    }\n\n    // skip the regexp for non-magical patterns\n    // unescape anything in it, though, so that it'll be\n    // an exact match against a file etc.\n    if (!hasMagic) {\n      return globUnescape(pattern)\n    }\n\n    const flags = options.nocase ? 'i' : ''\n    try {\n      return Object.assign(new RegExp('^' + re + '$', flags), {\n        _glob: pattern,\n        _src: re,\n      })\n    } catch (er) /* istanbul ignore next - should be impossible */ {\n      // If it was an invalid regular expression, then it can't match\n      // anything.  This trick looks for a character after the end of\n      // the string, which is of course impossible, except in multi-line\n      // mode, but it's not a /m regex.\n      return new RegExp('$.')\n    }\n  }\n\n  makeRe () {\n    if (this.regexp || this.regexp === false) return this.regexp\n\n    // at this point, this.set is a 2d array of partial\n    // pattern strings, or \"**\".\n    //\n    // It's better to use .match().  This function shouldn't\n    // be used, really, but it's pretty convenient sometimes,\n    // when you just want to work with a regex.\n    const set = this.set\n\n    if (!set.length) {\n      this.regexp = false\n      return this.regexp\n    }\n    const options = this.options\n\n    const twoStar = options.noglobstar ? star\n      : options.dot ? twoStarDot\n      : twoStarNoDot\n    const flags = options.nocase ? 'i' : ''\n\n    // coalesce globstars and regexpify non-globstar patterns\n    // if it's the only item, then we just do one twoStar\n    // if it's the first, and there are more, prepend (\\/|twoStar\\/)? to next\n    // if it's the last, append (\\/twoStar|) to previous\n    // if it's in the middle, append (\\/|\\/twoStar\\/) to previous\n    // then filter out GLOBSTAR symbols\n    let re = set.map(pattern => {\n      pattern = pattern.map(p =>\n        typeof p === 'string' ? regExpEscape(p)\n        : p === GLOBSTAR ? GLOBSTAR\n        : p._src\n      ).reduce((set, p) => {\n        if (!(set[set.length - 1] === GLOBSTAR && p === GLOBSTAR)) {\n          set.push(p)\n        }\n        return set\n      }, [])\n      pattern.forEach((p, i) => {\n        if (p !== GLOBSTAR || pattern[i-1] === GLOBSTAR) {\n          return\n        }\n        if (i === 0) {\n          if (pattern.length > 1) {\n            pattern[i+1] = '(?:\\\\\\/|' + twoStar + '\\\\\\/)?' + pattern[i+1]\n          } else {\n            pattern[i] = twoStar\n          }\n        } else if (i === pattern.length - 1) {\n          pattern[i-1] += '(?:\\\\\\/|' + twoStar + ')?'\n        } else {\n          pattern[i-1] += '(?:\\\\\\/|\\\\\\/' + twoStar + '\\\\\\/)' + pattern[i+1]\n          pattern[i+1] = GLOBSTAR\n        }\n      })\n      return pattern.filter(p => p !== GLOBSTAR).join('/')\n    }).join('|')\n\n    // must match entire pattern\n    // ending in a * or ** will make it less strict.\n    re = '^(?:' + re + ')$'\n\n    // can match anything, as long as it's not this.\n    if (this.negate) re = '^(?!' + re + ').*$'\n\n    try {\n      this.regexp = new RegExp(re, flags)\n    } catch (ex) /* istanbul ignore next - should be impossible */ {\n      this.regexp = false\n    }\n    return this.regexp\n  }\n\n  match (f, partial = this.partial) {\n    this.debug('match', f, this.pattern)\n    // short-circuit in the case of busted things.\n    // comments, etc.\n    if (this.comment) return false\n    if (this.empty) return f === ''\n\n    if (f === '/' && partial) return true\n\n    const options = this.options\n\n    // windows: need to use /, not \\\n    if (path.sep !== '/') {\n      f = f.split(path.sep).join('/')\n    }\n\n    // treat the test path as a set of pathparts.\n    f = f.split(slashSplit)\n    this.debug(this.pattern, 'split', f)\n\n    // just ONE of the pattern sets in this.set needs to match\n    // in order for it to be valid.  If negating, then just one\n    // match means that we have failed.\n    // Either way, return on the first hit.\n\n    const set = this.set\n    this.debug(this.pattern, 'set', set)\n\n    // Find the basename of the path by looking for the last non-empty segment\n    let filename\n    for (let i = f.length - 1; i >= 0; i--) {\n      filename = f[i]\n      if (filename) break\n    }\n\n    for (let i = 0; i < set.length; i++) {\n      const pattern = set[i]\n      let file = f\n      if (options.matchBase && pattern.length === 1) {\n        file = [filename]\n      }\n      const hit = this.matchOne(file, pattern, partial)\n      if (hit) {\n        if (options.flipNegate) return true\n        return !this.negate\n      }\n    }\n\n    // didn't get any hits.  this is success if it's a negative\n    // pattern, failure otherwise.\n    if (options.flipNegate) return false\n    return this.negate\n  }\n\n  static defaults (def) {\n    return minimatch.defaults(def).Minimatch\n  }\n}\n\nminimatch.Minimatch = Minimatch\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","try {\n  var util = require('util');\n  /* istanbul ignore next */\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  /* istanbul ignore next */\n  module.exports = require('./inherits_browser.js');\n}\n","exports.setopts = setopts\nexports.ownProp = ownProp\nexports.makeAbs = makeAbs\nexports.finish = finish\nexports.mark = mark\nexports.isIgnored = isIgnored\nexports.childrenIgnored = childrenIgnored\n\nfunction ownProp (obj, field) {\n  return Object.prototype.hasOwnProperty.call(obj, field)\n}\n\nvar fs = require(\"fs\")\nvar path = require(\"path\")\nvar minimatch = require(\"minimatch\")\nvar isAbsolute = require(\"path\").isAbsolute\nvar Minimatch = minimatch.Minimatch\n\nfunction alphasort (a, b) {\n  return a.localeCompare(b, 'en')\n}\n\nfunction setupIgnores (self, options) {\n  self.ignore = options.ignore || []\n\n  if (!Array.isArray(self.ignore))\n    self.ignore = [self.ignore]\n\n  if (self.ignore.length) {\n    self.ignore = self.ignore.map(ignoreMap)\n  }\n}\n\n// ignore patterns are always in dot:true mode.\nfunction ignoreMap (pattern) {\n  var gmatcher = null\n  if (pattern.slice(-3) === '/**') {\n    var gpattern = pattern.replace(/(\\/\\*\\*)+$/, '')\n    gmatcher = new Minimatch(gpattern, { dot: true })\n  }\n\n  return {\n    matcher: new Minimatch(pattern, { dot: true }),\n    gmatcher: gmatcher\n  }\n}\n\nfunction setopts (self, pattern, options) {\n  if (!options)\n    options = {}\n\n  // base-matching: just use globstar for that.\n  if (options.matchBase && -1 === pattern.indexOf(\"/\")) {\n    if (options.noglobstar) {\n      throw new Error(\"base matching requires globstar\")\n    }\n    pattern = \"**/\" + pattern\n  }\n\n  self.silent = !!options.silent\n  self.pattern = pattern\n  self.strict = options.strict !== false\n  self.realpath = !!options.realpath\n  self.realpathCache = options.realpathCache || Object.create(null)\n  self.follow = !!options.follow\n  self.dot = !!options.dot\n  self.mark = !!options.mark\n  self.nodir = !!options.nodir\n  if (self.nodir)\n    self.mark = true\n  self.sync = !!options.sync\n  self.nounique = !!options.nounique\n  self.nonull = !!options.nonull\n  self.nosort = !!options.nosort\n  self.nocase = !!options.nocase\n  self.stat = !!options.stat\n  self.noprocess = !!options.noprocess\n  self.absolute = !!options.absolute\n  self.fs = options.fs || fs\n\n  self.maxLength = options.maxLength || Infinity\n  self.cache = options.cache || Object.create(null)\n  self.statCache = options.statCache || Object.create(null)\n  self.symlinks = options.symlinks || Object.create(null)\n\n  setupIgnores(self, options)\n\n  self.changedCwd = false\n  var cwd = process.cwd()\n  if (!ownProp(options, \"cwd\"))\n    self.cwd = path.resolve(cwd)\n  else {\n    self.cwd = path.resolve(options.cwd)\n    self.changedCwd = self.cwd !== cwd\n  }\n\n  self.root = options.root || path.resolve(self.cwd, \"/\")\n  self.root = path.resolve(self.root)\n\n  // TODO: is an absolute `cwd` supposed to be resolved against `root`?\n  // e.g. { cwd: '/test', root: __dirname } === path.join(__dirname, '/test')\n  self.cwdAbs = isAbsolute(self.cwd) ? self.cwd : makeAbs(self, self.cwd)\n  self.nomount = !!options.nomount\n\n  if (process.platform === \"win32\") {\n    self.root = self.root.replace(/\\\\/g, \"/\")\n    self.cwd = self.cwd.replace(/\\\\/g, \"/\")\n    self.cwdAbs = self.cwdAbs.replace(/\\\\/g, \"/\")\n  }\n\n  // disable comments and negation in Minimatch.\n  // Note that they are not supported in Glob itself anyway.\n  options.nonegate = true\n  options.nocomment = true\n  // always treat \\ in patterns as escapes, not path separators\n  options.allowWindowsEscape = true\n\n  self.minimatch = new Minimatch(pattern, options)\n  self.options = self.minimatch.options\n}\n\nfunction finish (self) {\n  var nou = self.nounique\n  var all = nou ? [] : Object.create(null)\n\n  for (var i = 0, l = self.matches.length; i < l; i ++) {\n    var matches = self.matches[i]\n    if (!matches || Object.keys(matches).length === 0) {\n      if (self.nonull) {\n        // do like the shell, and spit out the literal glob\n        var literal = self.minimatch.globSet[i]\n        if (nou)\n          all.push(literal)\n        else\n          all[literal] = true\n      }\n    } else {\n      // had matches\n      var m = Object.keys(matches)\n      if (nou)\n        all.push.apply(all, m)\n      else\n        m.forEach(function (m) {\n          all[m] = true\n        })\n    }\n  }\n\n  if (!nou)\n    all = Object.keys(all)\n\n  if (!self.nosort)\n    all = all.sort(alphasort)\n\n  // at *some* point we statted all of these\n  if (self.mark) {\n    for (var i = 0; i < all.length; i++) {\n      all[i] = self._mark(all[i])\n    }\n    if (self.nodir) {\n      all = all.filter(function (e) {\n        var notDir = !(/\\/$/.test(e))\n        var c = self.cache[e] || self.cache[makeAbs(self, e)]\n        if (notDir && c)\n          notDir = c !== 'DIR' && !Array.isArray(c)\n        return notDir\n      })\n    }\n  }\n\n  if (self.ignore.length)\n    all = all.filter(function(m) {\n      return !isIgnored(self, m)\n    })\n\n  self.found = all\n}\n\nfunction mark (self, p) {\n  var abs = makeAbs(self, p)\n  var c = self.cache[abs]\n  var m = p\n  if (c) {\n    var isDir = c === 'DIR' || Array.isArray(c)\n    var slash = p.slice(-1) === '/'\n\n    if (isDir && !slash)\n      m += '/'\n    else if (!isDir && slash)\n      m = m.slice(0, -1)\n\n    if (m !== p) {\n      var mabs = makeAbs(self, m)\n      self.statCache[mabs] = self.statCache[abs]\n      self.cache[mabs] = self.cache[abs]\n    }\n  }\n\n  return m\n}\n\n// lotta situps...\nfunction makeAbs (self, f) {\n  var abs = f\n  if (f.charAt(0) === '/') {\n    abs = path.join(self.root, f)\n  } else if (isAbsolute(f) || f === '') {\n    abs = f\n  } else if (self.changedCwd) {\n    abs = path.resolve(self.cwd, f)\n  } else {\n    abs = path.resolve(f)\n  }\n\n  if (process.platform === 'win32')\n    abs = abs.replace(/\\\\/g, '/')\n\n  return abs\n}\n\n\n// Return true, if pattern ends with globstar '**', for the accompanying parent directory.\n// Ex:- If node_modules/** is the pattern, add 'node_modules' to ignore list along with it's contents\nfunction isIgnored (self, path) {\n  if (!self.ignore.length)\n    return false\n\n  return self.ignore.some(function(item) {\n    return item.matcher.match(path) || !!(item.gmatcher && item.gmatcher.match(path))\n  })\n}\n\nfunction childrenIgnored (self, path) {\n  if (!self.ignore.length)\n    return false\n\n  return self.ignore.some(function(item) {\n    return !!(item.gmatcher && item.gmatcher.match(path))\n  })\n}\n","module.exports = globSync\nglobSync.GlobSync = GlobSync\n\nvar rp = require('fs.realpath')\nvar minimatch = require('minimatch')\nvar Minimatch = minimatch.Minimatch\nvar Glob = require('./glob.js').Glob\nvar util = require('util')\nvar path = require('path')\nvar assert = require('assert')\nvar isAbsolute = require('path').isAbsolute\nvar common = require('./common.js')\nvar setopts = common.setopts\nvar ownProp = common.ownProp\nvar childrenIgnored = common.childrenIgnored\nvar isIgnored = common.isIgnored\n\nfunction globSync (pattern, options) {\n  if (typeof options === 'function' || arguments.length === 3)\n    throw new TypeError('callback provided to sync glob\\n'+\n                        'See: https://github.com/isaacs/node-glob/issues/167')\n\n  return new GlobSync(pattern, options).found\n}\n\nfunction GlobSync (pattern, options) {\n  if (!pattern)\n    throw new Error('must provide pattern')\n\n  if (typeof options === 'function' || arguments.length === 3)\n    throw new TypeError('callback provided to sync glob\\n'+\n                        'See: https://github.com/isaacs/node-glob/issues/167')\n\n  if (!(this instanceof GlobSync))\n    return new GlobSync(pattern, options)\n\n  setopts(this, pattern, options)\n\n  if (this.noprocess)\n    return this\n\n  var n = this.minimatch.set.length\n  this.matches = new Array(n)\n  for (var i = 0; i < n; i ++) {\n    this._process(this.minimatch.set[i], i, false)\n  }\n  this._finish()\n}\n\nGlobSync.prototype._finish = function () {\n  assert.ok(this instanceof GlobSync)\n  if (this.realpath) {\n    var self = this\n    this.matches.forEach(function (matchset, index) {\n      var set = self.matches[index] = Object.create(null)\n      for (var p in matchset) {\n        try {\n          p = self._makeAbs(p)\n          var real = rp.realpathSync(p, self.realpathCache)\n          set[real] = true\n        } catch (er) {\n          if (er.syscall === 'stat')\n            set[self._makeAbs(p)] = true\n          else\n            throw er\n        }\n      }\n    })\n  }\n  common.finish(this)\n}\n\n\nGlobSync.prototype._process = function (pattern, index, inGlobStar) {\n  assert.ok(this instanceof GlobSync)\n\n  // Get the first [n] parts of pattern that are all strings.\n  var n = 0\n  while (typeof pattern[n] === 'string') {\n    n ++\n  }\n  // now n is the index of the first one that is *not* a string.\n\n  // See if there's anything else\n  var prefix\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      this._processSimple(pattern.join('/'), index)\n      return\n\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null\n      break\n\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\n      // or 'relative' like '../baz'\n      prefix = pattern.slice(0, n).join('/')\n      break\n  }\n\n  var remain = pattern.slice(n)\n\n  // get the list of entries.\n  var read\n  if (prefix === null)\n    read = '.'\n  else if (isAbsolute(prefix) ||\n      isAbsolute(pattern.map(function (p) {\n        return typeof p === 'string' ? p : '[*]'\n      }).join('/'))) {\n    if (!prefix || !isAbsolute(prefix))\n      prefix = '/' + prefix\n    read = prefix\n  } else\n    read = prefix\n\n  var abs = this._makeAbs(read)\n\n  //if ignored, skip processing\n  if (childrenIgnored(this, read))\n    return\n\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR\n  if (isGlobStar)\n    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar)\n  else\n    this._processReaddir(prefix, read, abs, remain, index, inGlobStar)\n}\n\n\nGlobSync.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar) {\n  var entries = this._readdir(abs, inGlobStar)\n\n  // if the abs isn't a dir, then nothing can match!\n  if (!entries)\n    return\n\n  // It will only match dot entries if it starts with a dot, or if\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n  var pn = remain[0]\n  var negate = !!this.minimatch.negate\n  var rawGlob = pn._glob\n  var dotOk = this.dot || rawGlob.charAt(0) === '.'\n\n  var matchedEntries = []\n  for (var i = 0; i < entries.length; i++) {\n    var e = entries[i]\n    if (e.charAt(0) !== '.' || dotOk) {\n      var m\n      if (negate && !prefix) {\n        m = !e.match(pn)\n      } else {\n        m = e.match(pn)\n      }\n      if (m)\n        matchedEntries.push(e)\n    }\n  }\n\n  var len = matchedEntries.length\n  // If there are no matched entries, then nothing matches.\n  if (len === 0)\n    return\n\n  // if this is the last remaining pattern bit, then no need for\n  // an additional stat *unless* the user has specified mark or\n  // stat explicitly.  We know they exist, since readdir returned\n  // them.\n\n  if (remain.length === 1 && !this.mark && !this.stat) {\n    if (!this.matches[index])\n      this.matches[index] = Object.create(null)\n\n    for (var i = 0; i < len; i ++) {\n      var e = matchedEntries[i]\n      if (prefix) {\n        if (prefix.slice(-1) !== '/')\n          e = prefix + '/' + e\n        else\n          e = prefix + e\n      }\n\n      if (e.charAt(0) === '/' && !this.nomount) {\n        e = path.join(this.root, e)\n      }\n      this._emitMatch(index, e)\n    }\n    // This was the last one, and no stats were needed\n    return\n  }\n\n  // now test all matched entries as stand-ins for that part\n  // of the pattern.\n  remain.shift()\n  for (var i = 0; i < len; i ++) {\n    var e = matchedEntries[i]\n    var newPattern\n    if (prefix)\n      newPattern = [prefix, e]\n    else\n      newPattern = [e]\n    this._process(newPattern.concat(remain), index, inGlobStar)\n  }\n}\n\n\nGlobSync.prototype._emitMatch = function (index, e) {\n  if (isIgnored(this, e))\n    return\n\n  var abs = this._makeAbs(e)\n\n  if (this.mark)\n    e = this._mark(e)\n\n  if (this.absolute) {\n    e = abs\n  }\n\n  if (this.matches[index][e])\n    return\n\n  if (this.nodir) {\n    var c = this.cache[abs]\n    if (c === 'DIR' || Array.isArray(c))\n      return\n  }\n\n  this.matches[index][e] = true\n\n  if (this.stat)\n    this._stat(e)\n}\n\n\nGlobSync.prototype._readdirInGlobStar = function (abs) {\n  // follow all symlinked directories forever\n  // just proceed as if this is a non-globstar situation\n  if (this.follow)\n    return this._readdir(abs, false)\n\n  var entries\n  var lstat\n  var stat\n  try {\n    lstat = this.fs.lstatSync(abs)\n  } catch (er) {\n    if (er.code === 'ENOENT') {\n      // lstat failed, doesn't exist\n      return null\n    }\n  }\n\n  var isSym = lstat && lstat.isSymbolicLink()\n  this.symlinks[abs] = isSym\n\n  // If it's not a symlink or a dir, then it's definitely a regular file.\n  // don't bother doing a readdir in that case.\n  if (!isSym && lstat && !lstat.isDirectory())\n    this.cache[abs] = 'FILE'\n  else\n    entries = this._readdir(abs, false)\n\n  return entries\n}\n\nGlobSync.prototype._readdir = function (abs, inGlobStar) {\n  var entries\n\n  if (inGlobStar && !ownProp(this.symlinks, abs))\n    return this._readdirInGlobStar(abs)\n\n  if (ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n    if (!c || c === 'FILE')\n      return null\n\n    if (Array.isArray(c))\n      return c\n  }\n\n  try {\n    return this._readdirEntries(abs, this.fs.readdirSync(abs))\n  } catch (er) {\n    this._readdirError(abs, er)\n    return null\n  }\n}\n\nGlobSync.prototype._readdirEntries = function (abs, entries) {\n  // if we haven't asked to stat everything, then just\n  // assume that everything in there exists, so we can avoid\n  // having to stat it a second time.\n  if (!this.mark && !this.stat) {\n    for (var i = 0; i < entries.length; i ++) {\n      var e = entries[i]\n      if (abs === '/')\n        e = abs + e\n      else\n        e = abs + '/' + e\n      this.cache[e] = true\n    }\n  }\n\n  this.cache[abs] = entries\n\n  // mark and cache dir-ness\n  return entries\n}\n\nGlobSync.prototype._readdirError = function (f, er) {\n  // handle errors, and cache the information\n  switch (er.code) {\n    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\n    case 'ENOTDIR': // totally normal. means it *does* exist.\n      var abs = this._makeAbs(f)\n      this.cache[abs] = 'FILE'\n      if (abs === this.cwdAbs) {\n        var error = new Error(er.code + ' invalid cwd ' + this.cwd)\n        error.path = this.cwd\n        error.code = er.code\n        throw error\n      }\n      break\n\n    case 'ENOENT': // not terribly unusual\n    case 'ELOOP':\n    case 'ENAMETOOLONG':\n    case 'UNKNOWN':\n      this.cache[this._makeAbs(f)] = false\n      break\n\n    default: // some unusual error.  Treat as failure.\n      this.cache[this._makeAbs(f)] = false\n      if (this.strict)\n        throw er\n      if (!this.silent)\n        console.error('glob error', er)\n      break\n  }\n}\n\nGlobSync.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar) {\n\n  var entries = this._readdir(abs, inGlobStar)\n\n  // no entries means not a dir, so it can never have matches\n  // foo.txt/** doesn't match foo.txt\n  if (!entries)\n    return\n\n  // test without the globstar, and with every child both below\n  // and replacing the globstar.\n  var remainWithoutGlobStar = remain.slice(1)\n  var gspref = prefix ? [ prefix ] : []\n  var noGlobStar = gspref.concat(remainWithoutGlobStar)\n\n  // the noGlobStar pattern exits the inGlobStar state\n  this._process(noGlobStar, index, false)\n\n  var len = entries.length\n  var isSym = this.symlinks[abs]\n\n  // If it's a symlink, and we're in a globstar, then stop\n  if (isSym && inGlobStar)\n    return\n\n  for (var i = 0; i < len; i++) {\n    var e = entries[i]\n    if (e.charAt(0) === '.' && !this.dot)\n      continue\n\n    // these two cases enter the inGlobStar state\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar)\n    this._process(instead, index, true)\n\n    var below = gspref.concat(entries[i], remain)\n    this._process(below, index, true)\n  }\n}\n\nGlobSync.prototype._processSimple = function (prefix, index) {\n  // XXX review this.  Shouldn't it be doing the mounting etc\n  // before doing stat?  kinda weird?\n  var exists = this._stat(prefix)\n\n  if (!this.matches[index])\n    this.matches[index] = Object.create(null)\n\n  // If it doesn't exist, then just mark the lack of results\n  if (!exists)\n    return\n\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\n    var trail = /[\\/\\\\]$/.test(prefix)\n    if (prefix.charAt(0) === '/') {\n      prefix = path.join(this.root, prefix)\n    } else {\n      prefix = path.resolve(this.root, prefix)\n      if (trail)\n        prefix += '/'\n    }\n  }\n\n  if (process.platform === 'win32')\n    prefix = prefix.replace(/\\\\/g, '/')\n\n  // Mark this as a match\n  this._emitMatch(index, prefix)\n}\n\n// Returns either 'DIR', 'FILE', or false\nGlobSync.prototype._stat = function (f) {\n  var abs = this._makeAbs(f)\n  var needDir = f.slice(-1) === '/'\n\n  if (f.length > this.maxLength)\n    return false\n\n  if (!this.stat && ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n\n    if (Array.isArray(c))\n      c = 'DIR'\n\n    // It exists, but maybe not how we need it\n    if (!needDir || c === 'DIR')\n      return c\n\n    if (needDir && c === 'FILE')\n      return false\n\n    // otherwise we have to stat, because maybe c=true\n    // if we know it exists, but not what it is.\n  }\n\n  var exists\n  var stat = this.statCache[abs]\n  if (!stat) {\n    var lstat\n    try {\n      lstat = this.fs.lstatSync(abs)\n    } catch (er) {\n      if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {\n        this.statCache[abs] = false\n        return false\n      }\n    }\n\n    if (lstat && lstat.isSymbolicLink()) {\n      try {\n        stat = this.fs.statSync(abs)\n      } catch (er) {\n        stat = lstat\n      }\n    } else {\n      stat = lstat\n    }\n  }\n\n  this.statCache[abs] = stat\n\n  var c = true\n  if (stat)\n    c = stat.isDirectory() ? 'DIR' : 'FILE'\n\n  this.cache[abs] = this.cache[abs] || c\n\n  if (needDir && c === 'FILE')\n    return false\n\n  return c\n}\n\nGlobSync.prototype._mark = function (p) {\n  return common.mark(this, p)\n}\n\nGlobSync.prototype._makeAbs = function (f) {\n  return common.makeAbs(this, f)\n}\n","// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n","var wrappy = require('wrappy')\nmodule.exports = wrappy(once)\nmodule.exports.strict = wrappy(onceStrict)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  var name = fn.name || 'Function wrapped with `once`'\n  f.onceError = name + \" shouldn't be called more than once\"\n  f.called = false\n  return f\n}\n","var wrappy = require('wrappy')\nvar reqs = Object.create(null)\nvar once = require('once')\n\nmodule.exports = wrappy(inflight)\n\nfunction inflight (key, cb) {\n  if (reqs[key]) {\n    reqs[key].push(cb)\n    return null\n  } else {\n    reqs[key] = [cb]\n    return makeres(key)\n  }\n}\n\nfunction makeres (key) {\n  return once(function RES () {\n    var cbs = reqs[key]\n    var len = cbs.length\n    var args = slice(arguments)\n\n    // XXX It's somewhat ambiguous whether a new callback added in this\n    // pass should be queued for later execution if something in the\n    // list of callbacks throws, or if it should just be discarded.\n    // However, it's such an edge case that it hardly matters, and either\n    // choice is likely as surprising as the other.\n    // As it happens, we do go ahead and schedule it for later execution.\n    try {\n      for (var i = 0; i < len; i++) {\n        cbs[i].apply(null, args)\n      }\n    } finally {\n      if (cbs.length > len) {\n        // added more in the interim.\n        // de-zalgo, just in case, but don't call again.\n        cbs.splice(0, len)\n        process.nextTick(function () {\n          RES.apply(null, args)\n        })\n      } else {\n        delete reqs[key]\n      }\n    }\n  })\n}\n\nfunction slice (args) {\n  var length = args.length\n  var array = []\n\n  for (var i = 0; i < length; i++) array[i] = args[i]\n  return array\n}\n","// Approach:\n//\n// 1. Get the minimatch set\n// 2. For each pattern in the set, PROCESS(pattern, false)\n// 3. Store matches per-set, then uniq them\n//\n// PROCESS(pattern, inGlobStar)\n// Get the first [n] items from pattern that are all strings\n// Join these together.  This is PREFIX.\n//   If there is no more remaining, then stat(PREFIX) and\n//   add to matches if it succeeds.  END.\n//\n// If inGlobStar and PREFIX is symlink and points to dir\n//   set ENTRIES = []\n// else readdir(PREFIX) as ENTRIES\n//   If fail, END\n//\n// with ENTRIES\n//   If pattern[n] is GLOBSTAR\n//     // handle the case where the globstar match is empty\n//     // by pruning it out, and testing the resulting pattern\n//     PROCESS(pattern[0..n] + pattern[n+1 .. $], false)\n//     // handle other cases.\n//     for ENTRY in ENTRIES (not dotfiles)\n//       // attach globstar + tail onto the entry\n//       // Mark that this entry is a globstar match\n//       PROCESS(pattern[0..n] + ENTRY + pattern[n .. $], true)\n//\n//   else // not globstar\n//     for ENTRY in ENTRIES (not dotfiles, unless pattern[n] is dot)\n//       Test ENTRY against pattern[n]\n//       If fails, continue\n//       If passes, PROCESS(pattern[0..n] + item + pattern[n+1 .. $])\n//\n// Caveat:\n//   Cache all stats and readdirs results to minimize syscall.  Since all\n//   we ever care about is existence and directory-ness, we can just keep\n//   `true` for files, and [children,...] for directories, or `false` for\n//   things that don't exist.\n\nmodule.exports = glob\n\nvar rp = require('fs.realpath')\nvar minimatch = require('minimatch')\nvar Minimatch = minimatch.Minimatch\nvar inherits = require('inherits')\nvar EE = require('events').EventEmitter\nvar path = require('path')\nvar assert = require('assert')\nvar isAbsolute = require('path').isAbsolute\nvar globSync = require('./sync.js')\nvar common = require('./common.js')\nvar setopts = common.setopts\nvar ownProp = common.ownProp\nvar inflight = require('inflight')\nvar util = require('util')\nvar childrenIgnored = common.childrenIgnored\nvar isIgnored = common.isIgnored\n\nvar once = require('once')\n\nfunction glob (pattern, options, cb) {\n  if (typeof options === 'function') cb = options, options = {}\n  if (!options) options = {}\n\n  if (options.sync) {\n    if (cb)\n      throw new TypeError('callback provided to sync glob')\n    return globSync(pattern, options)\n  }\n\n  return new Glob(pattern, options, cb)\n}\n\nglob.sync = globSync\nvar GlobSync = glob.GlobSync = globSync.GlobSync\n\n// old api surface\nglob.glob = glob\n\nfunction extend (origin, add) {\n  if (add === null || typeof add !== 'object') {\n    return origin\n  }\n\n  var keys = Object.keys(add)\n  var i = keys.length\n  while (i--) {\n    origin[keys[i]] = add[keys[i]]\n  }\n  return origin\n}\n\nglob.hasMagic = function (pattern, options_) {\n  var options = extend({}, options_)\n  options.noprocess = true\n\n  var g = new Glob(pattern, options)\n  var set = g.minimatch.set\n\n  if (!pattern)\n    return false\n\n  if (set.length > 1)\n    return true\n\n  for (var j = 0; j < set[0].length; j++) {\n    if (typeof set[0][j] !== 'string')\n      return true\n  }\n\n  return false\n}\n\nglob.Glob = Glob\ninherits(Glob, EE)\nfunction Glob (pattern, options, cb) {\n  if (typeof options === 'function') {\n    cb = options\n    options = null\n  }\n\n  if (options && options.sync) {\n    if (cb)\n      throw new TypeError('callback provided to sync glob')\n    return new GlobSync(pattern, options)\n  }\n\n  if (!(this instanceof Glob))\n    return new Glob(pattern, options, cb)\n\n  setopts(this, pattern, options)\n  this._didRealPath = false\n\n  // process each pattern in the minimatch set\n  var n = this.minimatch.set.length\n\n  // The matches are stored as {<filename>: true,...} so that\n  // duplicates are automagically pruned.\n  // Later, we do an Object.keys() on these.\n  // Keep them as a list so we can fill in when nonull is set.\n  this.matches = new Array(n)\n\n  if (typeof cb === 'function') {\n    cb = once(cb)\n    this.on('error', cb)\n    this.on('end', function (matches) {\n      cb(null, matches)\n    })\n  }\n\n  var self = this\n  this._processing = 0\n\n  this._emitQueue = []\n  this._processQueue = []\n  this.paused = false\n\n  if (this.noprocess)\n    return this\n\n  if (n === 0)\n    return done()\n\n  var sync = true\n  for (var i = 0; i < n; i ++) {\n    this._process(this.minimatch.set[i], i, false, done)\n  }\n  sync = false\n\n  function done () {\n    --self._processing\n    if (self._processing <= 0) {\n      if (sync) {\n        process.nextTick(function () {\n          self._finish()\n        })\n      } else {\n        self._finish()\n      }\n    }\n  }\n}\n\nGlob.prototype._finish = function () {\n  assert(this instanceof Glob)\n  if (this.aborted)\n    return\n\n  if (this.realpath && !this._didRealpath)\n    return this._realpath()\n\n  common.finish(this)\n  this.emit('end', this.found)\n}\n\nGlob.prototype._realpath = function () {\n  if (this._didRealpath)\n    return\n\n  this._didRealpath = true\n\n  var n = this.matches.length\n  if (n === 0)\n    return this._finish()\n\n  var self = this\n  for (var i = 0; i < this.matches.length; i++)\n    this._realpathSet(i, next)\n\n  function next () {\n    if (--n === 0)\n      self._finish()\n  }\n}\n\nGlob.prototype._realpathSet = function (index, cb) {\n  var matchset = this.matches[index]\n  if (!matchset)\n    return cb()\n\n  var found = Object.keys(matchset)\n  var self = this\n  var n = found.length\n\n  if (n === 0)\n    return cb()\n\n  var set = this.matches[index] = Object.create(null)\n  found.forEach(function (p, i) {\n    // If there's a problem with the stat, then it means that\n    // one or more of the links in the realpath couldn't be\n    // resolved.  just return the abs value in that case.\n    p = self._makeAbs(p)\n    rp.realpath(p, self.realpathCache, function (er, real) {\n      if (!er)\n        set[real] = true\n      else if (er.syscall === 'stat')\n        set[p] = true\n      else\n        self.emit('error', er) // srsly wtf right here\n\n      if (--n === 0) {\n        self.matches[index] = set\n        cb()\n      }\n    })\n  })\n}\n\nGlob.prototype._mark = function (p) {\n  return common.mark(this, p)\n}\n\nGlob.prototype._makeAbs = function (f) {\n  return common.makeAbs(this, f)\n}\n\nGlob.prototype.abort = function () {\n  this.aborted = true\n  this.emit('abort')\n}\n\nGlob.prototype.pause = function () {\n  if (!this.paused) {\n    this.paused = true\n    this.emit('pause')\n  }\n}\n\nGlob.prototype.resume = function () {\n  if (this.paused) {\n    this.emit('resume')\n    this.paused = false\n    if (this._emitQueue.length) {\n      var eq = this._emitQueue.slice(0)\n      this._emitQueue.length = 0\n      for (var i = 0; i < eq.length; i ++) {\n        var e = eq[i]\n        this._emitMatch(e[0], e[1])\n      }\n    }\n    if (this._processQueue.length) {\n      var pq = this._processQueue.slice(0)\n      this._processQueue.length = 0\n      for (var i = 0; i < pq.length; i ++) {\n        var p = pq[i]\n        this._processing--\n        this._process(p[0], p[1], p[2], p[3])\n      }\n    }\n  }\n}\n\nGlob.prototype._process = function (pattern, index, inGlobStar, cb) {\n  assert(this instanceof Glob)\n  assert(typeof cb === 'function')\n\n  if (this.aborted)\n    return\n\n  this._processing++\n  if (this.paused) {\n    this._processQueue.push([pattern, index, inGlobStar, cb])\n    return\n  }\n\n  //console.error('PROCESS %d', this._processing, pattern)\n\n  // Get the first [n] parts of pattern that are all strings.\n  var n = 0\n  while (typeof pattern[n] === 'string') {\n    n ++\n  }\n  // now n is the index of the first one that is *not* a string.\n\n  // see if there's anything else\n  var prefix\n  switch (n) {\n    // if not, then this is rather simple\n    case pattern.length:\n      this._processSimple(pattern.join('/'), index, cb)\n      return\n\n    case 0:\n      // pattern *starts* with some non-trivial item.\n      // going to readdir(cwd), but not include the prefix in matches.\n      prefix = null\n      break\n\n    default:\n      // pattern has some string bits in the front.\n      // whatever it starts with, whether that's 'absolute' like /foo/bar,\n      // or 'relative' like '../baz'\n      prefix = pattern.slice(0, n).join('/')\n      break\n  }\n\n  var remain = pattern.slice(n)\n\n  // get the list of entries.\n  var read\n  if (prefix === null)\n    read = '.'\n  else if (isAbsolute(prefix) ||\n      isAbsolute(pattern.map(function (p) {\n        return typeof p === 'string' ? p : '[*]'\n      }).join('/'))) {\n    if (!prefix || !isAbsolute(prefix))\n      prefix = '/' + prefix\n    read = prefix\n  } else\n    read = prefix\n\n  var abs = this._makeAbs(read)\n\n  //if ignored, skip _processing\n  if (childrenIgnored(this, read))\n    return cb()\n\n  var isGlobStar = remain[0] === minimatch.GLOBSTAR\n  if (isGlobStar)\n    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar, cb)\n  else\n    this._processReaddir(prefix, read, abs, remain, index, inGlobStar, cb)\n}\n\nGlob.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar, cb) {\n  var self = this\n  this._readdir(abs, inGlobStar, function (er, entries) {\n    return self._processReaddir2(prefix, read, abs, remain, index, inGlobStar, entries, cb)\n  })\n}\n\nGlob.prototype._processReaddir2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\n\n  // if the abs isn't a dir, then nothing can match!\n  if (!entries)\n    return cb()\n\n  // It will only match dot entries if it starts with a dot, or if\n  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n  var pn = remain[0]\n  var negate = !!this.minimatch.negate\n  var rawGlob = pn._glob\n  var dotOk = this.dot || rawGlob.charAt(0) === '.'\n\n  var matchedEntries = []\n  for (var i = 0; i < entries.length; i++) {\n    var e = entries[i]\n    if (e.charAt(0) !== '.' || dotOk) {\n      var m\n      if (negate && !prefix) {\n        m = !e.match(pn)\n      } else {\n        m = e.match(pn)\n      }\n      if (m)\n        matchedEntries.push(e)\n    }\n  }\n\n  //console.error('prd2', prefix, entries, remain[0]._glob, matchedEntries)\n\n  var len = matchedEntries.length\n  // If there are no matched entries, then nothing matches.\n  if (len === 0)\n    return cb()\n\n  // if this is the last remaining pattern bit, then no need for\n  // an additional stat *unless* the user has specified mark or\n  // stat explicitly.  We know they exist, since readdir returned\n  // them.\n\n  if (remain.length === 1 && !this.mark && !this.stat) {\n    if (!this.matches[index])\n      this.matches[index] = Object.create(null)\n\n    for (var i = 0; i < len; i ++) {\n      var e = matchedEntries[i]\n      if (prefix) {\n        if (prefix !== '/')\n          e = prefix + '/' + e\n        else\n          e = prefix + e\n      }\n\n      if (e.charAt(0) === '/' && !this.nomount) {\n        e = path.join(this.root, e)\n      }\n      this._emitMatch(index, e)\n    }\n    // This was the last one, and no stats were needed\n    return cb()\n  }\n\n  // now test all matched entries as stand-ins for that part\n  // of the pattern.\n  remain.shift()\n  for (var i = 0; i < len; i ++) {\n    var e = matchedEntries[i]\n    var newPattern\n    if (prefix) {\n      if (prefix !== '/')\n        e = prefix + '/' + e\n      else\n        e = prefix + e\n    }\n    this._process([e].concat(remain), index, inGlobStar, cb)\n  }\n  cb()\n}\n\nGlob.prototype._emitMatch = function (index, e) {\n  if (this.aborted)\n    return\n\n  if (isIgnored(this, e))\n    return\n\n  if (this.paused) {\n    this._emitQueue.push([index, e])\n    return\n  }\n\n  var abs = isAbsolute(e) ? e : this._makeAbs(e)\n\n  if (this.mark)\n    e = this._mark(e)\n\n  if (this.absolute)\n    e = abs\n\n  if (this.matches[index][e])\n    return\n\n  if (this.nodir) {\n    var c = this.cache[abs]\n    if (c === 'DIR' || Array.isArray(c))\n      return\n  }\n\n  this.matches[index][e] = true\n\n  var st = this.statCache[abs]\n  if (st)\n    this.emit('stat', e, st)\n\n  this.emit('match', e)\n}\n\nGlob.prototype._readdirInGlobStar = function (abs, cb) {\n  if (this.aborted)\n    return\n\n  // follow all symlinked directories forever\n  // just proceed as if this is a non-globstar situation\n  if (this.follow)\n    return this._readdir(abs, false, cb)\n\n  var lstatkey = 'lstat\\0' + abs\n  var self = this\n  var lstatcb = inflight(lstatkey, lstatcb_)\n\n  if (lstatcb)\n    self.fs.lstat(abs, lstatcb)\n\n  function lstatcb_ (er, lstat) {\n    if (er && er.code === 'ENOENT')\n      return cb()\n\n    var isSym = lstat && lstat.isSymbolicLink()\n    self.symlinks[abs] = isSym\n\n    // If it's not a symlink or a dir, then it's definitely a regular file.\n    // don't bother doing a readdir in that case.\n    if (!isSym && lstat && !lstat.isDirectory()) {\n      self.cache[abs] = 'FILE'\n      cb()\n    } else\n      self._readdir(abs, false, cb)\n  }\n}\n\nGlob.prototype._readdir = function (abs, inGlobStar, cb) {\n  if (this.aborted)\n    return\n\n  cb = inflight('readdir\\0'+abs+'\\0'+inGlobStar, cb)\n  if (!cb)\n    return\n\n  //console.error('RD %j %j', +inGlobStar, abs)\n  if (inGlobStar && !ownProp(this.symlinks, abs))\n    return this._readdirInGlobStar(abs, cb)\n\n  if (ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n    if (!c || c === 'FILE')\n      return cb()\n\n    if (Array.isArray(c))\n      return cb(null, c)\n  }\n\n  var self = this\n  self.fs.readdir(abs, readdirCb(this, abs, cb))\n}\n\nfunction readdirCb (self, abs, cb) {\n  return function (er, entries) {\n    if (er)\n      self._readdirError(abs, er, cb)\n    else\n      self._readdirEntries(abs, entries, cb)\n  }\n}\n\nGlob.prototype._readdirEntries = function (abs, entries, cb) {\n  if (this.aborted)\n    return\n\n  // if we haven't asked to stat everything, then just\n  // assume that everything in there exists, so we can avoid\n  // having to stat it a second time.\n  if (!this.mark && !this.stat) {\n    for (var i = 0; i < entries.length; i ++) {\n      var e = entries[i]\n      if (abs === '/')\n        e = abs + e\n      else\n        e = abs + '/' + e\n      this.cache[e] = true\n    }\n  }\n\n  this.cache[abs] = entries\n  return cb(null, entries)\n}\n\nGlob.prototype._readdirError = function (f, er, cb) {\n  if (this.aborted)\n    return\n\n  // handle errors, and cache the information\n  switch (er.code) {\n    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\n    case 'ENOTDIR': // totally normal. means it *does* exist.\n      var abs = this._makeAbs(f)\n      this.cache[abs] = 'FILE'\n      if (abs === this.cwdAbs) {\n        var error = new Error(er.code + ' invalid cwd ' + this.cwd)\n        error.path = this.cwd\n        error.code = er.code\n        this.emit('error', error)\n        this.abort()\n      }\n      break\n\n    case 'ENOENT': // not terribly unusual\n    case 'ELOOP':\n    case 'ENAMETOOLONG':\n    case 'UNKNOWN':\n      this.cache[this._makeAbs(f)] = false\n      break\n\n    default: // some unusual error.  Treat as failure.\n      this.cache[this._makeAbs(f)] = false\n      if (this.strict) {\n        this.emit('error', er)\n        // If the error is handled, then we abort\n        // if not, we threw out of here\n        this.abort()\n      }\n      if (!this.silent)\n        console.error('glob error', er)\n      break\n  }\n\n  return cb()\n}\n\nGlob.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar, cb) {\n  var self = this\n  this._readdir(abs, inGlobStar, function (er, entries) {\n    self._processGlobStar2(prefix, read, abs, remain, index, inGlobStar, entries, cb)\n  })\n}\n\n\nGlob.prototype._processGlobStar2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\n  //console.error('pgs2', prefix, remain[0], entries)\n\n  // no entries means not a dir, so it can never have matches\n  // foo.txt/** doesn't match foo.txt\n  if (!entries)\n    return cb()\n\n  // test without the globstar, and with every child both below\n  // and replacing the globstar.\n  var remainWithoutGlobStar = remain.slice(1)\n  var gspref = prefix ? [ prefix ] : []\n  var noGlobStar = gspref.concat(remainWithoutGlobStar)\n\n  // the noGlobStar pattern exits the inGlobStar state\n  this._process(noGlobStar, index, false, cb)\n\n  var isSym = this.symlinks[abs]\n  var len = entries.length\n\n  // If it's a symlink, and we're in a globstar, then stop\n  if (isSym && inGlobStar)\n    return cb()\n\n  for (var i = 0; i < len; i++) {\n    var e = entries[i]\n    if (e.charAt(0) === '.' && !this.dot)\n      continue\n\n    // these two cases enter the inGlobStar state\n    var instead = gspref.concat(entries[i], remainWithoutGlobStar)\n    this._process(instead, index, true, cb)\n\n    var below = gspref.concat(entries[i], remain)\n    this._process(below, index, true, cb)\n  }\n\n  cb()\n}\n\nGlob.prototype._processSimple = function (prefix, index, cb) {\n  // XXX review this.  Shouldn't it be doing the mounting etc\n  // before doing stat?  kinda weird?\n  var self = this\n  this._stat(prefix, function (er, exists) {\n    self._processSimple2(prefix, index, er, exists, cb)\n  })\n}\nGlob.prototype._processSimple2 = function (prefix, index, er, exists, cb) {\n\n  //console.error('ps2', prefix, exists)\n\n  if (!this.matches[index])\n    this.matches[index] = Object.create(null)\n\n  // If it doesn't exist, then just mark the lack of results\n  if (!exists)\n    return cb()\n\n  if (prefix && isAbsolute(prefix) && !this.nomount) {\n    var trail = /[\\/\\\\]$/.test(prefix)\n    if (prefix.charAt(0) === '/') {\n      prefix = path.join(this.root, prefix)\n    } else {\n      prefix = path.resolve(this.root, prefix)\n      if (trail)\n        prefix += '/'\n    }\n  }\n\n  if (process.platform === 'win32')\n    prefix = prefix.replace(/\\\\/g, '/')\n\n  // Mark this as a match\n  this._emitMatch(index, prefix)\n  cb()\n}\n\n// Returns either 'DIR', 'FILE', or false\nGlob.prototype._stat = function (f, cb) {\n  var abs = this._makeAbs(f)\n  var needDir = f.slice(-1) === '/'\n\n  if (f.length > this.maxLength)\n    return cb()\n\n  if (!this.stat && ownProp(this.cache, abs)) {\n    var c = this.cache[abs]\n\n    if (Array.isArray(c))\n      c = 'DIR'\n\n    // It exists, but maybe not how we need it\n    if (!needDir || c === 'DIR')\n      return cb(null, c)\n\n    if (needDir && c === 'FILE')\n      return cb()\n\n    // otherwise we have to stat, because maybe c=true\n    // if we know it exists, but not what it is.\n  }\n\n  var exists\n  var stat = this.statCache[abs]\n  if (stat !== undefined) {\n    if (stat === false)\n      return cb(null, stat)\n    else {\n      var type = stat.isDirectory() ? 'DIR' : 'FILE'\n      if (needDir && type === 'FILE')\n        return cb()\n      else\n        return cb(null, type, stat)\n    }\n  }\n\n  var self = this\n  var statcb = inflight('stat\\0' + abs, lstatcb_)\n  if (statcb)\n    self.fs.lstat(abs, statcb)\n\n  function lstatcb_ (er, lstat) {\n    if (lstat && lstat.isSymbolicLink()) {\n      // If it's a symlink, then treat it as the target, unless\n      // the target does not exist, then treat it as a file.\n      return self.fs.stat(abs, function (er, stat) {\n        if (er)\n          self._stat2(f, abs, null, lstat, cb)\n        else\n          self._stat2(f, abs, er, stat, cb)\n      })\n    } else {\n      self._stat2(f, abs, er, lstat, cb)\n    }\n  }\n}\n\nGlob.prototype._stat2 = function (f, abs, er, stat, cb) {\n  if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {\n    this.statCache[abs] = false\n    return cb()\n  }\n\n  var needDir = f.slice(-1) === '/'\n  this.statCache[abs] = stat\n\n  if (abs.slice(-1) === '/' && stat && !stat.isDirectory())\n    return cb(null, false, stat)\n\n  var c = true\n  if (stat)\n    c = stat.isDirectory() ? 'DIR' : 'FILE'\n  this.cache[abs] = this.cache[abs] || c\n\n  if (needDir && c === 'FILE')\n    return cb()\n\n  return cb(null, c, stat)\n}\n","const glob = require('glob')\n\nconst promise = function (pattern, options) {\n  return new Promise((resolve, reject) => {\n    glob(pattern, options, (err, files) => err === null ? resolve(files) : reject(err))\n  })\n}\n\n// default\nmodule.exports = promise\n\n// utility exports\nmodule.exports.glob = glob\nmodule.exports.Glob = glob.Glob\nmodule.exports.hasMagic = glob.hasMagic\nmodule.exports.promise = promise\nmodule.exports.sync = glob.sync\n","const { promisify } = require('util')\nconst fs = require('fs')\nconst optsArg = opts => {\n  if (!opts)\n    opts = { mode: 0o777, fs }\n  else if (typeof opts === 'object')\n    opts = { mode: 0o777, fs, ...opts }\n  else if (typeof opts === 'number')\n    opts = { mode: opts, fs }\n  else if (typeof opts === 'string')\n    opts = { mode: parseInt(opts, 8), fs }\n  else\n    throw new TypeError('invalid options argument')\n\n  opts.mkdir = opts.mkdir || opts.fs.mkdir || fs.mkdir\n  opts.mkdirAsync = promisify(opts.mkdir)\n  opts.stat = opts.stat || opts.fs.stat || fs.stat\n  opts.statAsync = promisify(opts.stat)\n  opts.statSync = opts.statSync || opts.fs.statSync || fs.statSync\n  opts.mkdirSync = opts.mkdirSync || opts.fs.mkdirSync || fs.mkdirSync\n  return opts\n}\nmodule.exports = optsArg\n","const platform = process.env.__TESTING_MKDIRP_PLATFORM__ || process.platform\nconst { resolve, parse } = require('path')\nconst pathArg = path => {\n  if (/\\0/.test(path)) {\n    // simulate same failure that node raises\n    throw Object.assign(\n      new TypeError('path must be a string without null bytes'),\n      {\n        path,\n        code: 'ERR_INVALID_ARG_VALUE',\n      }\n    )\n  }\n\n  path = resolve(path)\n  if (platform === 'win32') {\n    const badWinChars = /[*|\"<>?:]/\n    const {root} = parse(path)\n    if (badWinChars.test(path.substr(root.length))) {\n      throw Object.assign(new Error('Illegal characters in path.'), {\n        path,\n        code: 'EINVAL',\n      })\n    }\n  }\n\n  return path\n}\nmodule.exports = pathArg\n","const {dirname} = require('path')\n\nconst findMade = (opts, parent, path = undefined) => {\n  // we never want the 'made' return value to be a root directory\n  if (path === parent)\n    return Promise.resolve()\n\n  return opts.statAsync(parent).then(\n    st => st.isDirectory() ? path : undefined, // will fail later\n    er => er.code === 'ENOENT'\n      ? findMade(opts, dirname(parent), parent)\n      : undefined\n  )\n}\n\nconst findMadeSync = (opts, parent, path = undefined) => {\n  if (path === parent)\n    return undefined\n\n  try {\n    return opts.statSync(parent).isDirectory() ? path : undefined\n  } catch (er) {\n    return er.code === 'ENOENT'\n      ? findMadeSync(opts, dirname(parent), parent)\n      : undefined\n  }\n}\n\nmodule.exports = {findMade, findMadeSync}\n","const {dirname} = require('path')\n\nconst mkdirpManual = (path, opts, made) => {\n  opts.recursive = false\n  const parent = dirname(path)\n  if (parent === path) {\n    return opts.mkdirAsync(path, opts).catch(er => {\n      // swallowed by recursive implementation on posix systems\n      // any other error is a failure\n      if (er.code !== 'EISDIR')\n        throw er\n    })\n  }\n\n  return opts.mkdirAsync(path, opts).then(() => made || path, er => {\n    if (er.code === 'ENOENT')\n      return mkdirpManual(parent, opts)\n        .then(made => mkdirpManual(path, opts, made))\n    if (er.code !== 'EEXIST' && er.code !== 'EROFS')\n      throw er\n    return opts.statAsync(path).then(st => {\n      if (st.isDirectory())\n        return made\n      else\n        throw er\n    }, () => { throw er })\n  })\n}\n\nconst mkdirpManualSync = (path, opts, made) => {\n  const parent = dirname(path)\n  opts.recursive = false\n\n  if (parent === path) {\n    try {\n      return opts.mkdirSync(path, opts)\n    } catch (er) {\n      // swallowed by recursive implementation on posix systems\n      // any other error is a failure\n      if (er.code !== 'EISDIR')\n        throw er\n      else\n        return\n    }\n  }\n\n  try {\n    opts.mkdirSync(path, opts)\n    return made || path\n  } catch (er) {\n    if (er.code === 'ENOENT')\n      return mkdirpManualSync(path, opts, mkdirpManualSync(parent, opts, made))\n    if (er.code !== 'EEXIST' && er.code !== 'EROFS')\n      throw er\n    try {\n      if (!opts.statSync(path).isDirectory())\n        throw er\n    } catch (_) {\n      throw er\n    }\n  }\n}\n\nmodule.exports = {mkdirpManual, mkdirpManualSync}\n","const {dirname} = require('path')\nconst {findMade, findMadeSync} = require('./find-made.js')\nconst {mkdirpManual, mkdirpManualSync} = require('./mkdirp-manual.js')\n\nconst mkdirpNative = (path, opts) => {\n  opts.recursive = true\n  const parent = dirname(path)\n  if (parent === path)\n    return opts.mkdirAsync(path, opts)\n\n  return findMade(opts, path).then(made =>\n    opts.mkdirAsync(path, opts).then(() => made)\n    .catch(er => {\n      if (er.code === 'ENOENT')\n        return mkdirpManual(path, opts)\n      else\n        throw er\n    }))\n}\n\nconst mkdirpNativeSync = (path, opts) => {\n  opts.recursive = true\n  const parent = dirname(path)\n  if (parent === path)\n    return opts.mkdirSync(path, opts)\n\n  const made = findMadeSync(opts, path)\n  try {\n    opts.mkdirSync(path, opts)\n    return made\n  } catch (er) {\n    if (er.code === 'ENOENT')\n      return mkdirpManualSync(path, opts)\n    else\n      throw er\n  }\n}\n\nmodule.exports = {mkdirpNative, mkdirpNativeSync}\n","const fs = require('fs')\n\nconst version = process.env.__TESTING_MKDIRP_NODE_VERSION__ || process.version\nconst versArr = version.replace(/^v/, '').split('.')\nconst hasNative = +versArr[0] > 10 || +versArr[0] === 10 && +versArr[1] >= 12\n\nconst useNative = !hasNative ? () => false : opts => opts.mkdir === fs.mkdir\nconst useNativeSync = !hasNative ? () => false : opts => opts.mkdirSync === fs.mkdirSync\n\nmodule.exports = {useNative, useNativeSync}\n","const optsArg = require('./lib/opts-arg.js')\nconst pathArg = require('./lib/path-arg.js')\n\nconst {mkdirpNative, mkdirpNativeSync} = require('./lib/mkdirp-native.js')\nconst {mkdirpManual, mkdirpManualSync} = require('./lib/mkdirp-manual.js')\nconst {useNative, useNativeSync} = require('./lib/use-native.js')\n\n\nconst mkdirp = (path, opts) => {\n  path = pathArg(path)\n  opts = optsArg(opts)\n  return useNative(opts)\n    ? mkdirpNative(path, opts)\n    : mkdirpManual(path, opts)\n}\n\nconst mkdirpSync = (path, opts) => {\n  path = pathArg(path)\n  opts = optsArg(opts)\n  return useNativeSync(opts)\n    ? mkdirpNativeSync(path, opts)\n    : mkdirpManualSync(path, opts)\n}\n\nmkdirp.sync = mkdirpSync\nmkdirp.native = (path, opts) => mkdirpNative(pathArg(path), optsArg(opts))\nmkdirp.manual = (path, opts) => mkdirpManual(pathArg(path), optsArg(opts))\nmkdirp.nativeSync = (path, opts) => mkdirpNativeSync(pathArg(path), optsArg(opts))\nmkdirp.manualSync = (path, opts) => mkdirpManualSync(pathArg(path), optsArg(opts))\n\nmodule.exports = mkdirp\n","import glob from \"glob-promise\"\nimport mkdirp from \"mkdirp\"\nimport path from \"path\"\nimport prettier from \"prettier\"\nimport { existsSync } from \"fs\"\nimport fs from \"fs/promises\"\n\nconst charsSafeToLeaveEncoded = \"{}.,<>?/:'[]!@#$^&*() -_=+\".split(\"\")\nconst replaceSafeEncodedChars = (s: string) => {\n  for (const char of charsSafeToLeaveEncoded) {\n    if (char === encodeURIComponent(char)) continue\n    s = s.replace(new RegExp(encodeURIComponent(char), \"g\"), char)\n  }\n  return s\n}\n\ntype Path = string\ntype Content = Buffer | ArrayBuffer | string\ntype ContentFormat =\n  | \"buffer\"\n  | \"string\"\n  | \"arraybuffer\"\n  | \"import-star\"\n  | \"import-default\"\n  | \"require\"\n  | \"export-pathlist\"\n\ninterface SearchOpts {\n  dirPath: string\n  targetPath?: string\n  extensions?: string[]\n  fileMatchFn?: (filename: string, path: string) => boolean\n  contentFormat?: ContentFormat\n  noImportExt?: boolean\n}\n\nfunction idsafe(s: string) {\n  return \"_\" + s.replace(/[^a-zA-Z0-9]/g, \"_\")\n}\n\nexport const getMatchingFilePaths = async ({\n  dirPath,\n  extensions,\n  fileMatchFn,\n}: SearchOpts) => {\n  if (extensions && fileMatchFn)\n    throw new Error(`Cannot provide extensions and fileMatchFn`)\n  if (extensions) {\n    fileMatchFn = (filename) =>\n      extensions.some((ext) => filename.endsWith(`.${ext}`))\n  }\n  if (!fileMatchFn) fileMatchFn = () => true\n  return (await glob(\"**/*\", { cwd: dirPath, nodir: true })).filter(\n    (filename) => fileMatchFn!(filename, path.resolve(dirPath, filename))\n  )\n}\n\nexport const getVirtualFileSystemFromDirPath = async (\n  opts: SearchOpts\n): Promise<Record<Path, Content>> => {\n  const { dirPath, contentFormat } = opts\n  const filePaths = await getMatchingFilePaths(opts)\n  const vfs: Record<Path, Content> = {}\n  for (const filePath of filePaths) {\n    vfs[filePath] = await fs.readFile(path.resolve(dirPath, filePath))\n    if (contentFormat === \"string\") {\n      vfs[filePath] = vfs[filePath].toString()\n    }\n  }\n  return vfs\n}\n\nexport const getVirtualFilesystemModuleFromDirPath = async (\n  opts: SearchOpts\n): Promise<string> => {\n  const vfs = await getVirtualFileSystemFromDirPath(opts)\n  const cf = opts.contentFormat\n\n  switch (cf ?? \"buffer\") {\n    case \"buffer\":\n    case \"string\": {\n      return (\n        `export default {\\n` +\n        Object.entries(vfs)\n          .map(([path, content]) =>\n            cf === \"buffer\"\n              ? `  \"${path}\": Buffer.from(\"${content.toString(\"base64\")}\")`\n              : `  \"${path}\": decodeURIComponent(\"${replaceSafeEncodedChars(\n                  encodeURIComponent(content.toString())\n                )}\")`\n          )\n          .join(\",\\n\") +\n        `\\n}`\n      )\n    }\n    case \"require\":\n    case \"import-default\":\n    case \"import-star\": {\n      if (!opts.targetPath)\n        throw new Error(\n          `targetPath is required when using content-format of require,import-default,import-star`\n        )\n      const basePath = path.relative(\n        path.dirname(opts.targetPath),\n        opts.dirPath\n      )\n      let fps = Object.keys(vfs)\n      if (opts.noImportExt) {\n        fps = fps.map((fp) => fp.replace(/\\.[^.]+$/, \"\"))\n      }\n      return (\n        `${fps\n          .map((fp) =>\n            cf === \"require\"\n              ? `const ${idsafe(fp)} = require(\"./${path.join(basePath, fp)}\")`\n              : cf === \"import-default\"\n              ? `import ${idsafe(fp)} from \"./${path.join(basePath, fp)}\"`\n              : `import * as ${idsafe(fp)} from \"./${path.join(basePath, fp)}\"`\n          )\n          .join(\"\\n\")}\\n\\n` +\n        `export default {\\n` +\n        fps.map((fp) => `  \"${fp}\": ${idsafe(fp)}`).join(\",\\n\") +\n        `\\n}`\n      )\n    }\n    case \"arraybuffer\": {\n      throw new Error(`arraybuffer not yet implemented, contributions welcome`)\n    }\n    case \"export-pathlist\": {\n      return (\n        `export default [\\n` +\n        Object.keys(vfs)\n          .map((path) => `  \"${path}\"`)\n          .join(\",\\n\") +\n        `\\n]`\n      )\n    }\n  }\n  throw new Error(`Unknown content format: ${cf}`)\n}\n\nexport { writeVfsToDirectory } from \"./write-vfs-to-directory\"","'use strict'\n\nimport { notStrictEqual, strictEqual } from 'assert'\nimport cliui from 'cliui'\nimport escalade from 'escalade/sync'\nimport { inspect } from 'util'\nimport { readFileSync } from 'fs'\nimport { fileURLToPath } from 'url';\nimport Parser from 'yargs-parser'\nimport { basename, dirname, extname, relative, resolve } from 'path'\nimport { getProcessArgvBin } from '../../build/lib/utils/process-argv.js'\nimport { YError } from '../../build/lib/yerror.js'\nimport y18n from 'y18n'\n\nconst REQUIRE_ERROR = 'require is not supported by ESM'\nconst REQUIRE_DIRECTORY_ERROR = 'loading a directory of commands is not supported yet for ESM'\n\nlet __dirname;\ntry {\n  __dirname = fileURLToPath(import.meta.url);\n} catch (e) {\n  __dirname = process.cwd();\n}\nconst mainFilename = __dirname.substring(0, __dirname.lastIndexOf('node_modules'));\n\nexport default {\n  assert: {\n    notStrictEqual,\n    strictEqual\n  },\n  cliui,\n  findUp: escalade,\n  getEnv: (key) => {\n    return process.env[key]\n  },\n  inspect,\n  getCallerFile: () => {\n    throw new YError(REQUIRE_DIRECTORY_ERROR)\n  },\n  getProcessArgvBin,\n  mainFilename: mainFilename || process.cwd(),\n  Parser,\n  path: {\n    basename,\n    dirname,\n    extname,\n    relative,\n    resolve\n  },\n  process: {\n    argv: () => process.argv,\n    cwd: process.cwd,\n    emitWarning: (warning, type) => process.emitWarning(warning, type),\n    execPath: () => process.execPath,\n    exit: process.exit,\n    nextTick: process.nextTick,\n    stdColumns: typeof process.stdout.columns !== 'undefined' ? process.stdout.columns : null\n  },\n  readFileSync,\n  require: () => {\n    throw new YError(REQUIRE_ERROR)\n  },\n  requireDirectory: () => {\n    throw new YError(REQUIRE_DIRECTORY_ERROR)\n  },\n  stringWidth: (str) => {\n    return [...str].length\n  },\n  y18n: y18n({\n    directory: resolve(__dirname, '../../../locales'),\n    updateFiles: false\n  })\n}\n","'use strict';\nconst align = {\n    right: alignRight,\n    center: alignCenter\n};\nconst top = 0;\nconst right = 1;\nconst bottom = 2;\nconst left = 3;\nexport class UI {\n    constructor(opts) {\n        var _a;\n        this.width = opts.width;\n        this.wrap = (_a = opts.wrap) !== null && _a !== void 0 ? _a : true;\n        this.rows = [];\n    }\n    span(...args) {\n        const cols = this.div(...args);\n        cols.span = true;\n    }\n    resetOutput() {\n        this.rows = [];\n    }\n    div(...args) {\n        if (args.length === 0) {\n            this.div('');\n        }\n        if (this.wrap && this.shouldApplyLayoutDSL(...args) && typeof args[0] === 'string') {\n            return this.applyLayoutDSL(args[0]);\n        }\n        const cols = args.map(arg => {\n            if (typeof arg === 'string') {\n                return this.colFromString(arg);\n            }\n            return arg;\n        });\n        this.rows.push(cols);\n        return cols;\n    }\n    shouldApplyLayoutDSL(...args) {\n        return args.length === 1 && typeof args[0] === 'string' &&\n            /[\\t\\n]/.test(args[0]);\n    }\n    applyLayoutDSL(str) {\n        const rows = str.split('\\n').map(row => row.split('\\t'));\n        let leftColumnWidth = 0;\n        // simple heuristic for layout, make sure the\n        // second column lines up along the left-hand.\n        // don't allow the first column to take up more\n        // than 50% of the screen.\n        rows.forEach(columns => {\n            if (columns.length > 1 && mixin.stringWidth(columns[0]) > leftColumnWidth) {\n                leftColumnWidth = Math.min(Math.floor(this.width * 0.5), mixin.stringWidth(columns[0]));\n            }\n        });\n        // generate a table:\n        //  replacing ' ' with padding calculations.\n        //  using the algorithmically generated width.\n        rows.forEach(columns => {\n            this.div(...columns.map((r, i) => {\n                return {\n                    text: r.trim(),\n                    padding: this.measurePadding(r),\n                    width: (i === 0 && columns.length > 1) ? leftColumnWidth : undefined\n                };\n            }));\n        });\n        return this.rows[this.rows.length - 1];\n    }\n    colFromString(text) {\n        return {\n            text,\n            padding: this.measurePadding(text)\n        };\n    }\n    measurePadding(str) {\n        // measure padding without ansi escape codes\n        const noAnsi = mixin.stripAnsi(str);\n        return [0, noAnsi.match(/\\s*$/)[0].length, 0, noAnsi.match(/^\\s*/)[0].length];\n    }\n    toString() {\n        const lines = [];\n        this.rows.forEach(row => {\n            this.rowToString(row, lines);\n        });\n        // don't display any lines with the\n        // hidden flag set.\n        return lines\n            .filter(line => !line.hidden)\n            .map(line => line.text)\n            .join('\\n');\n    }\n    rowToString(row, lines) {\n        this.rasterize(row).forEach((rrow, r) => {\n            let str = '';\n            rrow.forEach((col, c) => {\n                const { width } = row[c]; // the width with padding.\n                const wrapWidth = this.negatePadding(row[c]); // the width without padding.\n                let ts = col; // temporary string used during alignment/padding.\n                if (wrapWidth > mixin.stringWidth(col)) {\n                    ts += ' '.repeat(wrapWidth - mixin.stringWidth(col));\n                }\n                // align the string within its column.\n                if (row[c].align && row[c].align !== 'left' && this.wrap) {\n                    const fn = align[row[c].align];\n                    ts = fn(ts, wrapWidth);\n                    if (mixin.stringWidth(ts) < wrapWidth) {\n                        ts += ' '.repeat((width || 0) - mixin.stringWidth(ts) - 1);\n                    }\n                }\n                // apply border and padding to string.\n                const padding = row[c].padding || [0, 0, 0, 0];\n                if (padding[left]) {\n                    str += ' '.repeat(padding[left]);\n                }\n                str += addBorder(row[c], ts, '| ');\n                str += ts;\n                str += addBorder(row[c], ts, ' |');\n                if (padding[right]) {\n                    str += ' '.repeat(padding[right]);\n                }\n                // if prior row is span, try to render the\n                // current row on the prior line.\n                if (r === 0 && lines.length > 0) {\n                    str = this.renderInline(str, lines[lines.length - 1]);\n                }\n            });\n            // remove trailing whitespace.\n            lines.push({\n                text: str.replace(/ +$/, ''),\n                span: row.span\n            });\n        });\n        return lines;\n    }\n    // if the full 'source' can render in\n    // the target line, do so.\n    renderInline(source, previousLine) {\n        const match = source.match(/^ */);\n        const leadingWhitespace = match ? match[0].length : 0;\n        const target = previousLine.text;\n        const targetTextWidth = mixin.stringWidth(target.trimRight());\n        if (!previousLine.span) {\n            return source;\n        }\n        // if we're not applying wrapping logic,\n        // just always append to the span.\n        if (!this.wrap) {\n            previousLine.hidden = true;\n            return target + source;\n        }\n        if (leadingWhitespace < targetTextWidth) {\n            return source;\n        }\n        previousLine.hidden = true;\n        return target.trimRight() + ' '.repeat(leadingWhitespace - targetTextWidth) + source.trimLeft();\n    }\n    rasterize(row) {\n        const rrows = [];\n        const widths = this.columnWidths(row);\n        let wrapped;\n        // word wrap all columns, and create\n        // a data-structure that is easy to rasterize.\n        row.forEach((col, c) => {\n            // leave room for left and right padding.\n            col.width = widths[c];\n            if (this.wrap) {\n                wrapped = mixin.wrap(col.text, this.negatePadding(col), { hard: true }).split('\\n');\n            }\n            else {\n                wrapped = col.text.split('\\n');\n            }\n            if (col.border) {\n                wrapped.unshift('.' + '-'.repeat(this.negatePadding(col) + 2) + '.');\n                wrapped.push(\"'\" + '-'.repeat(this.negatePadding(col) + 2) + \"'\");\n            }\n            // add top and bottom padding.\n            if (col.padding) {\n                wrapped.unshift(...new Array(col.padding[top] || 0).fill(''));\n                wrapped.push(...new Array(col.padding[bottom] || 0).fill(''));\n            }\n            wrapped.forEach((str, r) => {\n                if (!rrows[r]) {\n                    rrows.push([]);\n                }\n                const rrow = rrows[r];\n                for (let i = 0; i < c; i++) {\n                    if (rrow[i] === undefined) {\n                        rrow.push('');\n                    }\n                }\n                rrow.push(str);\n            });\n        });\n        return rrows;\n    }\n    negatePadding(col) {\n        let wrapWidth = col.width || 0;\n        if (col.padding) {\n            wrapWidth -= (col.padding[left] || 0) + (col.padding[right] || 0);\n        }\n        if (col.border) {\n            wrapWidth -= 4;\n        }\n        return wrapWidth;\n    }\n    columnWidths(row) {\n        if (!this.wrap) {\n            return row.map(col => {\n                return col.width || mixin.stringWidth(col.text);\n            });\n        }\n        let unset = row.length;\n        let remainingWidth = this.width;\n        // column widths can be set in config.\n        const widths = row.map(col => {\n            if (col.width) {\n                unset--;\n                remainingWidth -= col.width;\n                return col.width;\n            }\n            return undefined;\n        });\n        // any unset widths should be calculated.\n        const unsetWidth = unset ? Math.floor(remainingWidth / unset) : 0;\n        return widths.map((w, i) => {\n            if (w === undefined) {\n                return Math.max(unsetWidth, _minWidth(row[i]));\n            }\n            return w;\n        });\n    }\n}\nfunction addBorder(col, ts, style) {\n    if (col.border) {\n        if (/[.']-+[.']/.test(ts)) {\n            return '';\n        }\n        if (ts.trim().length !== 0) {\n            return style;\n        }\n        return '  ';\n    }\n    return '';\n}\n// calculates the minimum width of\n// a column, based on padding preferences.\nfunction _minWidth(col) {\n    const padding = col.padding || [];\n    const minWidth = 1 + (padding[left] || 0) + (padding[right] || 0);\n    if (col.border) {\n        return minWidth + 4;\n    }\n    return minWidth;\n}\nfunction getWindowWidth() {\n    /* istanbul ignore next: depends on terminal */\n    if (typeof process === 'object' && process.stdout && process.stdout.columns) {\n        return process.stdout.columns;\n    }\n    return 80;\n}\nfunction alignRight(str, width) {\n    str = str.trim();\n    const strWidth = mixin.stringWidth(str);\n    if (strWidth < width) {\n        return ' '.repeat(width - strWidth) + str;\n    }\n    return str;\n}\nfunction alignCenter(str, width) {\n    str = str.trim();\n    const strWidth = mixin.stringWidth(str);\n    /* istanbul ignore next */\n    if (strWidth >= width) {\n        return str;\n    }\n    return ' '.repeat((width - strWidth) >> 1) + str;\n}\nlet mixin;\nexport function cliui(opts, _mixin) {\n    mixin = _mixin;\n    return new UI({\n        width: (opts === null || opts === void 0 ? void 0 : opts.width) || getWindowWidth(),\n        wrap: opts === null || opts === void 0 ? void 0 : opts.wrap\n    });\n}\n","// Minimal replacement for ansi string helpers \"wrap-ansi\" and \"strip-ansi\".\n// to facilitate ESM and Deno modules.\n// TODO: look at porting https://www.npmjs.com/package/wrap-ansi to ESM.\n// The npm application\n// Copyright (c) npm, Inc. and Contributors\n// Licensed on the terms of The Artistic License 2.0\n// See: https://github.com/npm/cli/blob/4c65cd952bc8627811735bea76b9b110cc4fc80e/lib/utils/ansi-trim.js\nconst ansi = new RegExp('\\x1b(?:\\\\[(?:\\\\d+[ABCDEFGJKSTm]|\\\\d+;\\\\d+[Hfm]|' +\n    '\\\\d+;\\\\d+;\\\\d+m|6n|s|u|\\\\?25[lh])|\\\\w)', 'g');\nexport function stripAnsi(str) {\n    return str.replace(ansi, '');\n}\nexport function wrap(str, width) {\n    const [start, end] = str.match(ansi) || ['', ''];\n    str = stripAnsi(str);\n    let wrapped = '';\n    for (let i = 0; i < str.length; i++) {\n        if (i !== 0 && (i % width) === 0) {\n            wrapped += '\\n';\n        }\n        wrapped += str.charAt(i);\n    }\n    if (start && end) {\n        wrapped = `${start}${wrapped}${end}`;\n    }\n    return wrapped;\n}\n","// Bootstrap cliui with CommonJS dependencies:\nimport { cliui } from './build/lib/index.js'\nimport { wrap, stripAnsi } from './build/lib/string-utils.js'\n\nexport default function ui (opts) {\n  return cliui(opts, {\n    stringWidth: (str) => {\n      return [...str].length\n    },\n    stripAnsi,\n    wrap\n  })\n}\n","import { dirname, resolve } from 'path';\nimport { readdirSync, statSync } from 'fs';\n\nexport default function (start, callback) {\n\tlet dir = resolve('.', start);\n\tlet tmp, stats = statSync(dir);\n\n\tif (!stats.isDirectory()) {\n\t\tdir = dirname(dir);\n\t}\n\n\twhile (true) {\n\t\ttmp = callback(dir, readdirSync(dir));\n\t\tif (tmp) return resolve(dir, tmp);\n\t\tdir = dirname(tmp = dir);\n\t\tif (tmp === dir) break;\n\t}\n}\n","/**\n * @fileoverview Main entrypoint for libraries using yargs-parser in Node.js\n * CJS and ESM environments.\n *\n * @license\n * Copyright (c) 2016, Contributors\n * SPDX-License-Identifier: ISC\n */\nvar _a, _b, _c;\nimport { format } from 'util';\nimport { normalize, resolve } from 'path';\nimport { camelCase, decamelize, looksLikeNumber } from './string-utils.js';\nimport { YargsParser } from './yargs-parser.js';\nimport { readFileSync } from 'fs';\n// See https://github.com/yargs/yargs-parser#supported-nodejs-versions for our\n// version support policy. The YARGS_MIN_NODE_VERSION is used for testing only.\nconst minNodeVersion = (process && process.env && process.env.YARGS_MIN_NODE_VERSION)\n    ? Number(process.env.YARGS_MIN_NODE_VERSION)\n    : 12;\nconst nodeVersion = (_b = (_a = process === null || process === void 0 ? void 0 : process.versions) === null || _a === void 0 ? void 0 : _a.node) !== null && _b !== void 0 ? _b : (_c = process === null || process === void 0 ? void 0 : process.version) === null || _c === void 0 ? void 0 : _c.slice(1);\nif (nodeVersion) {\n    const major = Number(nodeVersion.match(/^([^.]+)/)[1]);\n    if (major < minNodeVersion) {\n        throw Error(`yargs parser supports a minimum Node.js version of ${minNodeVersion}. Read our version support policy: https://github.com/yargs/yargs-parser#supported-nodejs-versions`);\n    }\n}\n// Creates a yargs-parser instance using Node.js standard libraries:\nconst env = process ? process.env : {};\nconst parser = new YargsParser({\n    cwd: process.cwd,\n    env: () => {\n        return env;\n    },\n    format,\n    normalize,\n    resolve,\n    // TODO: figure  out a  way to combine ESM and CJS coverage, such  that\n    // we can exercise all the lines below:\n    require: (path) => {\n        if (typeof require !== 'undefined') {\n            return require(path);\n        }\n        else if (path.match(/\\.json$/)) {\n            // Addresses: https://github.com/yargs/yargs/issues/2040\n            return JSON.parse(readFileSync(path, 'utf8'));\n        }\n        else {\n            throw Error('only .json config files are supported in ESM');\n        }\n    }\n});\nconst yargsParser = function Parser(args, opts) {\n    const result = parser.parse(args.slice(), opts);\n    return result.argv;\n};\nyargsParser.detailed = function (args, opts) {\n    return parser.parse(args.slice(), opts);\n};\nyargsParser.camelCase = camelCase;\nyargsParser.decamelize = decamelize;\nyargsParser.looksLikeNumber = looksLikeNumber;\nexport default yargsParser;\n","/**\n * @license\n * Copyright (c) 2016, Contributors\n * SPDX-License-Identifier: ISC\n */\nexport function camelCase(str) {\n    // Handle the case where an argument is provided as camel case, e.g., fooBar.\n    // by ensuring that the string isn't already mixed case:\n    const isCamelCase = str !== str.toLowerCase() && str !== str.toUpperCase();\n    if (!isCamelCase) {\n        str = str.toLowerCase();\n    }\n    if (str.indexOf('-') === -1 && str.indexOf('_') === -1) {\n        return str;\n    }\n    else {\n        let camelcase = '';\n        let nextChrUpper = false;\n        const leadingHyphens = str.match(/^-+/);\n        for (let i = leadingHyphens ? leadingHyphens[0].length : 0; i < str.length; i++) {\n            let chr = str.charAt(i);\n            if (nextChrUpper) {\n                nextChrUpper = false;\n                chr = chr.toUpperCase();\n            }\n            if (i !== 0 && (chr === '-' || chr === '_')) {\n                nextChrUpper = true;\n            }\n            else if (chr !== '-' && chr !== '_') {\n                camelcase += chr;\n            }\n        }\n        return camelcase;\n    }\n}\nexport function decamelize(str, joinString) {\n    const lowercase = str.toLowerCase();\n    joinString = joinString || '-';\n    let notCamelcase = '';\n    for (let i = 0; i < str.length; i++) {\n        const chrLower = lowercase.charAt(i);\n        const chrString = str.charAt(i);\n        if (chrLower !== chrString && i > 0) {\n            notCamelcase += `${joinString}${lowercase.charAt(i)}`;\n        }\n        else {\n            notCamelcase += chrString;\n        }\n    }\n    return notCamelcase;\n}\nexport function looksLikeNumber(x) {\n    if (x === null || x === undefined)\n        return false;\n    // if loaded from config, may already be a number.\n    if (typeof x === 'number')\n        return true;\n    // hexadecimal.\n    if (/^0x[0-9a-f]+$/i.test(x))\n        return true;\n    // don't treat 0123 as a number; as it drops the leading '0'.\n    if (/^0[^.]/.test(x))\n        return false;\n    return /^[-]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(e[-+]?\\d+)?$/.test(x);\n}\n","/**\n * @license\n * Copyright (c) 2016, Contributors\n * SPDX-License-Identifier: ISC\n */\n// take an un-split argv string and tokenize it.\nexport function tokenizeArgString(argString) {\n    if (Array.isArray(argString)) {\n        return argString.map(e => typeof e !== 'string' ? e + '' : e);\n    }\n    argString = argString.trim();\n    let i = 0;\n    let prevC = null;\n    let c = null;\n    let opening = null;\n    const args = [];\n    for (let ii = 0; ii < argString.length; ii++) {\n        prevC = c;\n        c = argString.charAt(ii);\n        // split on spaces unless we're in quotes.\n        if (c === ' ' && !opening) {\n            if (!(prevC === ' ')) {\n                i++;\n            }\n            continue;\n        }\n        // don't split the string if we're in matching\n        // opening or closing single and double quotes.\n        if (c === opening) {\n            opening = null;\n        }\n        else if ((c === \"'\" || c === '\"') && !opening) {\n            opening = c;\n        }\n        if (!args[i])\n            args[i] = '';\n        args[i] += c;\n    }\n    return args;\n}\n","/**\n * @license\n * Copyright (c) 2016, Contributors\n * SPDX-License-Identifier: ISC\n */\nexport var DefaultValuesForTypeKey;\n(function (DefaultValuesForTypeKey) {\n    DefaultValuesForTypeKey[\"BOOLEAN\"] = \"boolean\";\n    DefaultValuesForTypeKey[\"STRING\"] = \"string\";\n    DefaultValuesForTypeKey[\"NUMBER\"] = \"number\";\n    DefaultValuesForTypeKey[\"ARRAY\"] = \"array\";\n})(DefaultValuesForTypeKey || (DefaultValuesForTypeKey = {}));\n","/**\n * @license\n * Copyright (c) 2016, Contributors\n * SPDX-License-Identifier: ISC\n */\nimport { tokenizeArgString } from './tokenize-arg-string.js';\nimport { DefaultValuesForTypeKey } from './yargs-parser-types.js';\nimport { camelCase, decamelize, looksLikeNumber } from './string-utils.js';\nlet mixin;\nexport class YargsParser {\n    constructor(_mixin) {\n        mixin = _mixin;\n    }\n    parse(argsInput, options) {\n        const opts = Object.assign({\n            alias: undefined,\n            array: undefined,\n            boolean: undefined,\n            config: undefined,\n            configObjects: undefined,\n            configuration: undefined,\n            coerce: undefined,\n            count: undefined,\n            default: undefined,\n            envPrefix: undefined,\n            narg: undefined,\n            normalize: undefined,\n            string: undefined,\n            number: undefined,\n            __: undefined,\n            key: undefined\n        }, options);\n        // allow a string argument to be passed in rather\n        // than an argv array.\n        const args = tokenizeArgString(argsInput);\n        // tokenizeArgString adds extra quotes to args if argsInput is a string\n        // only strip those extra quotes in processValue if argsInput is a string\n        const inputIsString = typeof argsInput === 'string';\n        // aliases might have transitive relationships, normalize this.\n        const aliases = combineAliases(Object.assign(Object.create(null), opts.alias));\n        const configuration = Object.assign({\n            'boolean-negation': true,\n            'camel-case-expansion': true,\n            'combine-arrays': false,\n            'dot-notation': true,\n            'duplicate-arguments-array': true,\n            'flatten-duplicate-arrays': true,\n            'greedy-arrays': true,\n            'halt-at-non-option': false,\n            'nargs-eats-options': false,\n            'negation-prefix': 'no-',\n            'parse-numbers': true,\n            'parse-positional-numbers': true,\n            'populate--': false,\n            'set-placeholder-key': false,\n            'short-option-groups': true,\n            'strip-aliased': false,\n            'strip-dashed': false,\n            'unknown-options-as-args': false\n        }, opts.configuration);\n        const defaults = Object.assign(Object.create(null), opts.default);\n        const configObjects = opts.configObjects || [];\n        const envPrefix = opts.envPrefix;\n        const notFlagsOption = configuration['populate--'];\n        const notFlagsArgv = notFlagsOption ? '--' : '_';\n        const newAliases = Object.create(null);\n        const defaulted = Object.create(null);\n        // allow a i18n handler to be passed in, default to a fake one (util.format).\n        const __ = opts.__ || mixin.format;\n        const flags = {\n            aliases: Object.create(null),\n            arrays: Object.create(null),\n            bools: Object.create(null),\n            strings: Object.create(null),\n            numbers: Object.create(null),\n            counts: Object.create(null),\n            normalize: Object.create(null),\n            configs: Object.create(null),\n            nargs: Object.create(null),\n            coercions: Object.create(null),\n            keys: []\n        };\n        const negative = /^-([0-9]+(\\.[0-9]+)?|\\.[0-9]+)$/;\n        const negatedBoolean = new RegExp('^--' + configuration['negation-prefix'] + '(.+)');\n        [].concat(opts.array || []).filter(Boolean).forEach(function (opt) {\n            const key = typeof opt === 'object' ? opt.key : opt;\n            // assign to flags[bools|strings|numbers]\n            const assignment = Object.keys(opt).map(function (key) {\n                const arrayFlagKeys = {\n                    boolean: 'bools',\n                    string: 'strings',\n                    number: 'numbers'\n                };\n                return arrayFlagKeys[key];\n            }).filter(Boolean).pop();\n            // assign key to be coerced\n            if (assignment) {\n                flags[assignment][key] = true;\n            }\n            flags.arrays[key] = true;\n            flags.keys.push(key);\n        });\n        [].concat(opts.boolean || []).filter(Boolean).forEach(function (key) {\n            flags.bools[key] = true;\n            flags.keys.push(key);\n        });\n        [].concat(opts.string || []).filter(Boolean).forEach(function (key) {\n            flags.strings[key] = true;\n            flags.keys.push(key);\n        });\n        [].concat(opts.number || []).filter(Boolean).forEach(function (key) {\n            flags.numbers[key] = true;\n            flags.keys.push(key);\n        });\n        [].concat(opts.count || []).filter(Boolean).forEach(function (key) {\n            flags.counts[key] = true;\n            flags.keys.push(key);\n        });\n        [].concat(opts.normalize || []).filter(Boolean).forEach(function (key) {\n            flags.normalize[key] = true;\n            flags.keys.push(key);\n        });\n        if (typeof opts.narg === 'object') {\n            Object.entries(opts.narg).forEach(([key, value]) => {\n                if (typeof value === 'number') {\n                    flags.nargs[key] = value;\n                    flags.keys.push(key);\n                }\n            });\n        }\n        if (typeof opts.coerce === 'object') {\n            Object.entries(opts.coerce).forEach(([key, value]) => {\n                if (typeof value === 'function') {\n                    flags.coercions[key] = value;\n                    flags.keys.push(key);\n                }\n            });\n        }\n        if (typeof opts.config !== 'undefined') {\n            if (Array.isArray(opts.config) || typeof opts.config === 'string') {\n                ;\n                [].concat(opts.config).filter(Boolean).forEach(function (key) {\n                    flags.configs[key] = true;\n                });\n            }\n            else if (typeof opts.config === 'object') {\n                Object.entries(opts.config).forEach(([key, value]) => {\n                    if (typeof value === 'boolean' || typeof value === 'function') {\n                        flags.configs[key] = value;\n                    }\n                });\n            }\n        }\n        // create a lookup table that takes into account all\n        // combinations of aliases: {f: ['foo'], foo: ['f']}\n        extendAliases(opts.key, aliases, opts.default, flags.arrays);\n        // apply default values to all aliases.\n        Object.keys(defaults).forEach(function (key) {\n            (flags.aliases[key] || []).forEach(function (alias) {\n                defaults[alias] = defaults[key];\n            });\n        });\n        let error = null;\n        checkConfiguration();\n        let notFlags = [];\n        const argv = Object.assign(Object.create(null), { _: [] });\n        // TODO(bcoe): for the first pass at removing object prototype  we didn't\n        // remove all prototypes from objects returned by this API, we might want\n        // to gradually move towards doing so.\n        const argvReturn = {};\n        for (let i = 0; i < args.length; i++) {\n            const arg = args[i];\n            const truncatedArg = arg.replace(/^-{3,}/, '---');\n            let broken;\n            let key;\n            let letters;\n            let m;\n            let next;\n            let value;\n            // any unknown option (except for end-of-options, \"--\")\n            if (arg !== '--' && /^-/.test(arg) && isUnknownOptionAsArg(arg)) {\n                pushPositional(arg);\n                // ---, ---=, ----, etc,\n            }\n            else if (truncatedArg.match(/^---+(=|$)/)) {\n                // options without key name are invalid.\n                pushPositional(arg);\n                continue;\n                // -- separated by =\n            }\n            else if (arg.match(/^--.+=/) || (!configuration['short-option-groups'] && arg.match(/^-.+=/))) {\n                // Using [\\s\\S] instead of . because js doesn't support the\n                // 'dotall' regex modifier. See:\n                // http://stackoverflow.com/a/1068308/13216\n                m = arg.match(/^--?([^=]+)=([\\s\\S]*)$/);\n                // arrays format = '--f=a b c'\n                if (m !== null && Array.isArray(m) && m.length >= 3) {\n                    if (checkAllAliases(m[1], flags.arrays)) {\n                        i = eatArray(i, m[1], args, m[2]);\n                    }\n                    else if (checkAllAliases(m[1], flags.nargs) !== false) {\n                        // nargs format = '--f=monkey washing cat'\n                        i = eatNargs(i, m[1], args, m[2]);\n                    }\n                    else {\n                        setArg(m[1], m[2], true);\n                    }\n                }\n            }\n            else if (arg.match(negatedBoolean) && configuration['boolean-negation']) {\n                m = arg.match(negatedBoolean);\n                if (m !== null && Array.isArray(m) && m.length >= 2) {\n                    key = m[1];\n                    setArg(key, checkAllAliases(key, flags.arrays) ? [false] : false);\n                }\n                // -- separated by space.\n            }\n            else if (arg.match(/^--.+/) || (!configuration['short-option-groups'] && arg.match(/^-[^-]+/))) {\n                m = arg.match(/^--?(.+)/);\n                if (m !== null && Array.isArray(m) && m.length >= 2) {\n                    key = m[1];\n                    if (checkAllAliases(key, flags.arrays)) {\n                        // array format = '--foo a b c'\n                        i = eatArray(i, key, args);\n                    }\n                    else if (checkAllAliases(key, flags.nargs) !== false) {\n                        // nargs format = '--foo a b c'\n                        // should be truthy even if: flags.nargs[key] === 0\n                        i = eatNargs(i, key, args);\n                    }\n                    else {\n                        next = args[i + 1];\n                        if (next !== undefined && (!next.match(/^-/) ||\n                            next.match(negative)) &&\n                            !checkAllAliases(key, flags.bools) &&\n                            !checkAllAliases(key, flags.counts)) {\n                            setArg(key, next);\n                            i++;\n                        }\n                        else if (/^(true|false)$/.test(next)) {\n                            setArg(key, next);\n                            i++;\n                        }\n                        else {\n                            setArg(key, defaultValue(key));\n                        }\n                    }\n                }\n                // dot-notation flag separated by '='.\n            }\n            else if (arg.match(/^-.\\..+=/)) {\n                m = arg.match(/^-([^=]+)=([\\s\\S]*)$/);\n                if (m !== null && Array.isArray(m) && m.length >= 3) {\n                    setArg(m[1], m[2]);\n                }\n                // dot-notation flag separated by space.\n            }\n            else if (arg.match(/^-.\\..+/) && !arg.match(negative)) {\n                next = args[i + 1];\n                m = arg.match(/^-(.\\..+)/);\n                if (m !== null && Array.isArray(m) && m.length >= 2) {\n                    key = m[1];\n                    if (next !== undefined && !next.match(/^-/) &&\n                        !checkAllAliases(key, flags.bools) &&\n                        !checkAllAliases(key, flags.counts)) {\n                        setArg(key, next);\n                        i++;\n                    }\n                    else {\n                        setArg(key, defaultValue(key));\n                    }\n                }\n            }\n            else if (arg.match(/^-[^-]+/) && !arg.match(negative)) {\n                letters = arg.slice(1, -1).split('');\n                broken = false;\n                for (let j = 0; j < letters.length; j++) {\n                    next = arg.slice(j + 2);\n                    if (letters[j + 1] && letters[j + 1] === '=') {\n                        value = arg.slice(j + 3);\n                        key = letters[j];\n                        if (checkAllAliases(key, flags.arrays)) {\n                            // array format = '-f=a b c'\n                            i = eatArray(i, key, args, value);\n                        }\n                        else if (checkAllAliases(key, flags.nargs) !== false) {\n                            // nargs format = '-f=monkey washing cat'\n                            i = eatNargs(i, key, args, value);\n                        }\n                        else {\n                            setArg(key, value);\n                        }\n                        broken = true;\n                        break;\n                    }\n                    if (next === '-') {\n                        setArg(letters[j], next);\n                        continue;\n                    }\n                    // current letter is an alphabetic character and next value is a number\n                    if (/[A-Za-z]/.test(letters[j]) &&\n                        /^-?\\d+(\\.\\d*)?(e-?\\d+)?$/.test(next) &&\n                        checkAllAliases(next, flags.bools) === false) {\n                        setArg(letters[j], next);\n                        broken = true;\n                        break;\n                    }\n                    if (letters[j + 1] && letters[j + 1].match(/\\W/)) {\n                        setArg(letters[j], next);\n                        broken = true;\n                        break;\n                    }\n                    else {\n                        setArg(letters[j], defaultValue(letters[j]));\n                    }\n                }\n                key = arg.slice(-1)[0];\n                if (!broken && key !== '-') {\n                    if (checkAllAliases(key, flags.arrays)) {\n                        // array format = '-f a b c'\n                        i = eatArray(i, key, args);\n                    }\n                    else if (checkAllAliases(key, flags.nargs) !== false) {\n                        // nargs format = '-f a b c'\n                        // should be truthy even if: flags.nargs[key] === 0\n                        i = eatNargs(i, key, args);\n                    }\n                    else {\n                        next = args[i + 1];\n                        if (next !== undefined && (!/^(-|--)[^-]/.test(next) ||\n                            next.match(negative)) &&\n                            !checkAllAliases(key, flags.bools) &&\n                            !checkAllAliases(key, flags.counts)) {\n                            setArg(key, next);\n                            i++;\n                        }\n                        else if (/^(true|false)$/.test(next)) {\n                            setArg(key, next);\n                            i++;\n                        }\n                        else {\n                            setArg(key, defaultValue(key));\n                        }\n                    }\n                }\n            }\n            else if (arg.match(/^-[0-9]$/) &&\n                arg.match(negative) &&\n                checkAllAliases(arg.slice(1), flags.bools)) {\n                // single-digit boolean alias, e.g: xargs -0\n                key = arg.slice(1);\n                setArg(key, defaultValue(key));\n            }\n            else if (arg === '--') {\n                notFlags = args.slice(i + 1);\n                break;\n            }\n            else if (configuration['halt-at-non-option']) {\n                notFlags = args.slice(i);\n                break;\n            }\n            else {\n                pushPositional(arg);\n            }\n        }\n        // order of precedence:\n        // 1. command line arg\n        // 2. value from env var\n        // 3. value from config file\n        // 4. value from config objects\n        // 5. configured default value\n        applyEnvVars(argv, true); // special case: check env vars that point to config file\n        applyEnvVars(argv, false);\n        setConfig(argv);\n        setConfigObjects();\n        applyDefaultsAndAliases(argv, flags.aliases, defaults, true);\n        applyCoercions(argv);\n        if (configuration['set-placeholder-key'])\n            setPlaceholderKeys(argv);\n        // for any counts either not in args or without an explicit default, set to 0\n        Object.keys(flags.counts).forEach(function (key) {\n            if (!hasKey(argv, key.split('.')))\n                setArg(key, 0);\n        });\n        // '--' defaults to undefined.\n        if (notFlagsOption && notFlags.length)\n            argv[notFlagsArgv] = [];\n        notFlags.forEach(function (key) {\n            argv[notFlagsArgv].push(key);\n        });\n        if (configuration['camel-case-expansion'] && configuration['strip-dashed']) {\n            Object.keys(argv).filter(key => key !== '--' && key.includes('-')).forEach(key => {\n                delete argv[key];\n            });\n        }\n        if (configuration['strip-aliased']) {\n            ;\n            [].concat(...Object.keys(aliases).map(k => aliases[k])).forEach(alias => {\n                if (configuration['camel-case-expansion'] && alias.includes('-')) {\n                    delete argv[alias.split('.').map(prop => camelCase(prop)).join('.')];\n                }\n                delete argv[alias];\n            });\n        }\n        // Push argument into positional array, applying numeric coercion:\n        function pushPositional(arg) {\n            const maybeCoercedNumber = maybeCoerceNumber('_', arg);\n            if (typeof maybeCoercedNumber === 'string' || typeof maybeCoercedNumber === 'number') {\n                argv._.push(maybeCoercedNumber);\n            }\n        }\n        // how many arguments should we consume, based\n        // on the nargs option?\n        function eatNargs(i, key, args, argAfterEqualSign) {\n            let ii;\n            let toEat = checkAllAliases(key, flags.nargs);\n            // NaN has a special meaning for the array type, indicating that one or\n            // more values are expected.\n            toEat = typeof toEat !== 'number' || isNaN(toEat) ? 1 : toEat;\n            if (toEat === 0) {\n                if (!isUndefined(argAfterEqualSign)) {\n                    error = Error(__('Argument unexpected for: %s', key));\n                }\n                setArg(key, defaultValue(key));\n                return i;\n            }\n            let available = isUndefined(argAfterEqualSign) ? 0 : 1;\n            if (configuration['nargs-eats-options']) {\n                // classic behavior, yargs eats positional and dash arguments.\n                if (args.length - (i + 1) + available < toEat) {\n                    error = Error(__('Not enough arguments following: %s', key));\n                }\n                available = toEat;\n            }\n            else {\n                // nargs will not consume flag arguments, e.g., -abc, --foo,\n                // and terminates when one is observed.\n                for (ii = i + 1; ii < args.length; ii++) {\n                    if (!args[ii].match(/^-[^0-9]/) || args[ii].match(negative) || isUnknownOptionAsArg(args[ii]))\n                        available++;\n                    else\n                        break;\n                }\n                if (available < toEat)\n                    error = Error(__('Not enough arguments following: %s', key));\n            }\n            let consumed = Math.min(available, toEat);\n            if (!isUndefined(argAfterEqualSign) && consumed > 0) {\n                setArg(key, argAfterEqualSign);\n                consumed--;\n            }\n            for (ii = i + 1; ii < (consumed + i + 1); ii++) {\n                setArg(key, args[ii]);\n            }\n            return (i + consumed);\n        }\n        // if an option is an array, eat all non-hyphenated arguments\n        // following it... YUM!\n        // e.g., --foo apple banana cat becomes [\"apple\", \"banana\", \"cat\"]\n        function eatArray(i, key, args, argAfterEqualSign) {\n            let argsToSet = [];\n            let next = argAfterEqualSign || args[i + 1];\n            // If both array and nargs are configured, enforce the nargs count:\n            const nargsCount = checkAllAliases(key, flags.nargs);\n            if (checkAllAliases(key, flags.bools) && !(/^(true|false)$/.test(next))) {\n                argsToSet.push(true);\n            }\n            else if (isUndefined(next) ||\n                (isUndefined(argAfterEqualSign) && /^-/.test(next) && !negative.test(next) && !isUnknownOptionAsArg(next))) {\n                // for keys without value ==> argsToSet remains an empty []\n                // set user default value, if available\n                if (defaults[key] !== undefined) {\n                    const defVal = defaults[key];\n                    argsToSet = Array.isArray(defVal) ? defVal : [defVal];\n                }\n            }\n            else {\n                // value in --option=value is eaten as is\n                if (!isUndefined(argAfterEqualSign)) {\n                    argsToSet.push(processValue(key, argAfterEqualSign, true));\n                }\n                for (let ii = i + 1; ii < args.length; ii++) {\n                    if ((!configuration['greedy-arrays'] && argsToSet.length > 0) ||\n                        (nargsCount && typeof nargsCount === 'number' && argsToSet.length >= nargsCount))\n                        break;\n                    next = args[ii];\n                    if (/^-/.test(next) && !negative.test(next) && !isUnknownOptionAsArg(next))\n                        break;\n                    i = ii;\n                    argsToSet.push(processValue(key, next, inputIsString));\n                }\n            }\n            // If both array and nargs are configured, create an error if less than\n            // nargs positionals were found. NaN has special meaning, indicating\n            // that at least one value is required (more are okay).\n            if (typeof nargsCount === 'number' && ((nargsCount && argsToSet.length < nargsCount) ||\n                (isNaN(nargsCount) && argsToSet.length === 0))) {\n                error = Error(__('Not enough arguments following: %s', key));\n            }\n            setArg(key, argsToSet);\n            return i;\n        }\n        function setArg(key, val, shouldStripQuotes = inputIsString) {\n            if (/-/.test(key) && configuration['camel-case-expansion']) {\n                const alias = key.split('.').map(function (prop) {\n                    return camelCase(prop);\n                }).join('.');\n                addNewAlias(key, alias);\n            }\n            const value = processValue(key, val, shouldStripQuotes);\n            const splitKey = key.split('.');\n            setKey(argv, splitKey, value);\n            // handle populating aliases of the full key\n            if (flags.aliases[key]) {\n                flags.aliases[key].forEach(function (x) {\n                    const keyProperties = x.split('.');\n                    setKey(argv, keyProperties, value);\n                });\n            }\n            // handle populating aliases of the first element of the dot-notation key\n            if (splitKey.length > 1 && configuration['dot-notation']) {\n                ;\n                (flags.aliases[splitKey[0]] || []).forEach(function (x) {\n                    let keyProperties = x.split('.');\n                    // expand alias with nested objects in key\n                    const a = [].concat(splitKey);\n                    a.shift(); // nuke the old key.\n                    keyProperties = keyProperties.concat(a);\n                    // populate alias only if is not already an alias of the full key\n                    // (already populated above)\n                    if (!(flags.aliases[key] || []).includes(keyProperties.join('.'))) {\n                        setKey(argv, keyProperties, value);\n                    }\n                });\n            }\n            // Set normalize getter and setter when key is in 'normalize' but isn't an array\n            if (checkAllAliases(key, flags.normalize) && !checkAllAliases(key, flags.arrays)) {\n                const keys = [key].concat(flags.aliases[key] || []);\n                keys.forEach(function (key) {\n                    Object.defineProperty(argvReturn, key, {\n                        enumerable: true,\n                        get() {\n                            return val;\n                        },\n                        set(value) {\n                            val = typeof value === 'string' ? mixin.normalize(value) : value;\n                        }\n                    });\n                });\n            }\n        }\n        function addNewAlias(key, alias) {\n            if (!(flags.aliases[key] && flags.aliases[key].length)) {\n                flags.aliases[key] = [alias];\n                newAliases[alias] = true;\n            }\n            if (!(flags.aliases[alias] && flags.aliases[alias].length)) {\n                addNewAlias(alias, key);\n            }\n        }\n        function processValue(key, val, shouldStripQuotes) {\n            // strings may be quoted, clean this up as we assign values.\n            if (shouldStripQuotes) {\n                val = stripQuotes(val);\n            }\n            // handle parsing boolean arguments --foo=true --bar false.\n            if (checkAllAliases(key, flags.bools) || checkAllAliases(key, flags.counts)) {\n                if (typeof val === 'string')\n                    val = val === 'true';\n            }\n            let value = Array.isArray(val)\n                ? val.map(function (v) { return maybeCoerceNumber(key, v); })\n                : maybeCoerceNumber(key, val);\n            // increment a count given as arg (either no value or value parsed as boolean)\n            if (checkAllAliases(key, flags.counts) && (isUndefined(value) || typeof value === 'boolean')) {\n                value = increment();\n            }\n            // Set normalized value when key is in 'normalize' and in 'arrays'\n            if (checkAllAliases(key, flags.normalize) && checkAllAliases(key, flags.arrays)) {\n                if (Array.isArray(val))\n                    value = val.map((val) => { return mixin.normalize(val); });\n                else\n                    value = mixin.normalize(val);\n            }\n            return value;\n        }\n        function maybeCoerceNumber(key, value) {\n            if (!configuration['parse-positional-numbers'] && key === '_')\n                return value;\n            if (!checkAllAliases(key, flags.strings) && !checkAllAliases(key, flags.bools) && !Array.isArray(value)) {\n                const shouldCoerceNumber = looksLikeNumber(value) && configuration['parse-numbers'] && (Number.isSafeInteger(Math.floor(parseFloat(`${value}`))));\n                if (shouldCoerceNumber || (!isUndefined(value) && checkAllAliases(key, flags.numbers))) {\n                    value = Number(value);\n                }\n            }\n            return value;\n        }\n        // set args from config.json file, this should be\n        // applied last so that defaults can be applied.\n        function setConfig(argv) {\n            const configLookup = Object.create(null);\n            // expand defaults/aliases, in-case any happen to reference\n            // the config.json file.\n            applyDefaultsAndAliases(configLookup, flags.aliases, defaults);\n            Object.keys(flags.configs).forEach(function (configKey) {\n                const configPath = argv[configKey] || configLookup[configKey];\n                if (configPath) {\n                    try {\n                        let config = null;\n                        const resolvedConfigPath = mixin.resolve(mixin.cwd(), configPath);\n                        const resolveConfig = flags.configs[configKey];\n                        if (typeof resolveConfig === 'function') {\n                            try {\n                                config = resolveConfig(resolvedConfigPath);\n                            }\n                            catch (e) {\n                                config = e;\n                            }\n                            if (config instanceof Error) {\n                                error = config;\n                                return;\n                            }\n                        }\n                        else {\n                            config = mixin.require(resolvedConfigPath);\n                        }\n                        setConfigObject(config);\n                    }\n                    catch (ex) {\n                        // Deno will receive a PermissionDenied error if an attempt is\n                        // made to load config without the --allow-read flag:\n                        if (ex.name === 'PermissionDenied')\n                            error = ex;\n                        else if (argv[configKey])\n                            error = Error(__('Invalid JSON config file: %s', configPath));\n                    }\n                }\n            });\n        }\n        // set args from config object.\n        // it recursively checks nested objects.\n        function setConfigObject(config, prev) {\n            Object.keys(config).forEach(function (key) {\n                const value = config[key];\n                const fullKey = prev ? prev + '.' + key : key;\n                // if the value is an inner object and we have dot-notation\n                // enabled, treat inner objects in config the same as\n                // heavily nested dot notations (foo.bar.apple).\n                if (typeof value === 'object' && value !== null && !Array.isArray(value) && configuration['dot-notation']) {\n                    // if the value is an object but not an array, check nested object\n                    setConfigObject(value, fullKey);\n                }\n                else {\n                    // setting arguments via CLI takes precedence over\n                    // values within the config file.\n                    if (!hasKey(argv, fullKey.split('.')) || (checkAllAliases(fullKey, flags.arrays) && configuration['combine-arrays'])) {\n                        setArg(fullKey, value);\n                    }\n                }\n            });\n        }\n        // set all config objects passed in opts\n        function setConfigObjects() {\n            if (typeof configObjects !== 'undefined') {\n                configObjects.forEach(function (configObject) {\n                    setConfigObject(configObject);\n                });\n            }\n        }\n        function applyEnvVars(argv, configOnly) {\n            if (typeof envPrefix === 'undefined')\n                return;\n            const prefix = typeof envPrefix === 'string' ? envPrefix : '';\n            const env = mixin.env();\n            Object.keys(env).forEach(function (envVar) {\n                if (prefix === '' || envVar.lastIndexOf(prefix, 0) === 0) {\n                    // get array of nested keys and convert them to camel case\n                    const keys = envVar.split('__').map(function (key, i) {\n                        if (i === 0) {\n                            key = key.substring(prefix.length);\n                        }\n                        return camelCase(key);\n                    });\n                    if (((configOnly && flags.configs[keys.join('.')]) || !configOnly) && !hasKey(argv, keys)) {\n                        setArg(keys.join('.'), env[envVar]);\n                    }\n                }\n            });\n        }\n        function applyCoercions(argv) {\n            let coerce;\n            const applied = new Set();\n            Object.keys(argv).forEach(function (key) {\n                if (!applied.has(key)) { // If we haven't already coerced this option via one of its aliases\n                    coerce = checkAllAliases(key, flags.coercions);\n                    if (typeof coerce === 'function') {\n                        try {\n                            const value = maybeCoerceNumber(key, coerce(argv[key]));\n                            ([].concat(flags.aliases[key] || [], key)).forEach(ali => {\n                                applied.add(ali);\n                                argv[ali] = value;\n                            });\n                        }\n                        catch (err) {\n                            error = err;\n                        }\n                    }\n                }\n            });\n        }\n        function setPlaceholderKeys(argv) {\n            flags.keys.forEach((key) => {\n                // don't set placeholder keys for dot notation options 'foo.bar'.\n                if (~key.indexOf('.'))\n                    return;\n                if (typeof argv[key] === 'undefined')\n                    argv[key] = undefined;\n            });\n            return argv;\n        }\n        function applyDefaultsAndAliases(obj, aliases, defaults, canLog = false) {\n            Object.keys(defaults).forEach(function (key) {\n                if (!hasKey(obj, key.split('.'))) {\n                    setKey(obj, key.split('.'), defaults[key]);\n                    if (canLog)\n                        defaulted[key] = true;\n                    (aliases[key] || []).forEach(function (x) {\n                        if (hasKey(obj, x.split('.')))\n                            return;\n                        setKey(obj, x.split('.'), defaults[key]);\n                    });\n                }\n            });\n        }\n        function hasKey(obj, keys) {\n            let o = obj;\n            if (!configuration['dot-notation'])\n                keys = [keys.join('.')];\n            keys.slice(0, -1).forEach(function (key) {\n                o = (o[key] || {});\n            });\n            const key = keys[keys.length - 1];\n            if (typeof o !== 'object')\n                return false;\n            else\n                return key in o;\n        }\n        function setKey(obj, keys, value) {\n            let o = obj;\n            if (!configuration['dot-notation'])\n                keys = [keys.join('.')];\n            keys.slice(0, -1).forEach(function (key) {\n                // TODO(bcoe): in the next major version of yargs, switch to\n                // Object.create(null) for dot notation:\n                key = sanitizeKey(key);\n                if (typeof o === 'object' && o[key] === undefined) {\n                    o[key] = {};\n                }\n                if (typeof o[key] !== 'object' || Array.isArray(o[key])) {\n                    // ensure that o[key] is an array, and that the last item is an empty object.\n                    if (Array.isArray(o[key])) {\n                        o[key].push({});\n                    }\n                    else {\n                        o[key] = [o[key], {}];\n                    }\n                    // we want to update the empty object at the end of the o[key] array, so set o to that object\n                    o = o[key][o[key].length - 1];\n                }\n                else {\n                    o = o[key];\n                }\n            });\n            // TODO(bcoe): in the next major version of yargs, switch to\n            // Object.create(null) for dot notation:\n            const key = sanitizeKey(keys[keys.length - 1]);\n            const isTypeArray = checkAllAliases(keys.join('.'), flags.arrays);\n            const isValueArray = Array.isArray(value);\n            let duplicate = configuration['duplicate-arguments-array'];\n            // nargs has higher priority than duplicate\n            if (!duplicate && checkAllAliases(key, flags.nargs)) {\n                duplicate = true;\n                if ((!isUndefined(o[key]) && flags.nargs[key] === 1) || (Array.isArray(o[key]) && o[key].length === flags.nargs[key])) {\n                    o[key] = undefined;\n                }\n            }\n            if (value === increment()) {\n                o[key] = increment(o[key]);\n            }\n            else if (Array.isArray(o[key])) {\n                if (duplicate && isTypeArray && isValueArray) {\n                    o[key] = configuration['flatten-duplicate-arrays'] ? o[key].concat(value) : (Array.isArray(o[key][0]) ? o[key] : [o[key]]).concat([value]);\n                }\n                else if (!duplicate && Boolean(isTypeArray) === Boolean(isValueArray)) {\n                    o[key] = value;\n                }\n                else {\n                    o[key] = o[key].concat([value]);\n                }\n            }\n            else if (o[key] === undefined && isTypeArray) {\n                o[key] = isValueArray ? value : [value];\n            }\n            else if (duplicate && !(o[key] === undefined ||\n                checkAllAliases(key, flags.counts) ||\n                checkAllAliases(key, flags.bools))) {\n                o[key] = [o[key], value];\n            }\n            else {\n                o[key] = value;\n            }\n        }\n        // extend the aliases list with inferred aliases.\n        function extendAliases(...args) {\n            args.forEach(function (obj) {\n                Object.keys(obj || {}).forEach(function (key) {\n                    // short-circuit if we've already added a key\n                    // to the aliases array, for example it might\n                    // exist in both 'opts.default' and 'opts.key'.\n                    if (flags.aliases[key])\n                        return;\n                    flags.aliases[key] = [].concat(aliases[key] || []);\n                    // For \"--option-name\", also set argv.optionName\n                    flags.aliases[key].concat(key).forEach(function (x) {\n                        if (/-/.test(x) && configuration['camel-case-expansion']) {\n                            const c = camelCase(x);\n                            if (c !== key && flags.aliases[key].indexOf(c) === -1) {\n                                flags.aliases[key].push(c);\n                                newAliases[c] = true;\n                            }\n                        }\n                    });\n                    // For \"--optionName\", also set argv['option-name']\n                    flags.aliases[key].concat(key).forEach(function (x) {\n                        if (x.length > 1 && /[A-Z]/.test(x) && configuration['camel-case-expansion']) {\n                            const c = decamelize(x, '-');\n                            if (c !== key && flags.aliases[key].indexOf(c) === -1) {\n                                flags.aliases[key].push(c);\n                                newAliases[c] = true;\n                            }\n                        }\n                    });\n                    flags.aliases[key].forEach(function (x) {\n                        flags.aliases[x] = [key].concat(flags.aliases[key].filter(function (y) {\n                            return x !== y;\n                        }));\n                    });\n                });\n            });\n        }\n        function checkAllAliases(key, flag) {\n            const toCheck = [].concat(flags.aliases[key] || [], key);\n            const keys = Object.keys(flag);\n            const setAlias = toCheck.find(key => keys.includes(key));\n            return setAlias ? flag[setAlias] : false;\n        }\n        function hasAnyFlag(key) {\n            const flagsKeys = Object.keys(flags);\n            const toCheck = [].concat(flagsKeys.map(k => flags[k]));\n            return toCheck.some(function (flag) {\n                return Array.isArray(flag) ? flag.includes(key) : flag[key];\n            });\n        }\n        function hasFlagsMatching(arg, ...patterns) {\n            const toCheck = [].concat(...patterns);\n            return toCheck.some(function (pattern) {\n                const match = arg.match(pattern);\n                return match && hasAnyFlag(match[1]);\n            });\n        }\n        // based on a simplified version of the short flag group parsing logic\n        function hasAllShortFlags(arg) {\n            // if this is a negative number, or doesn't start with a single hyphen, it's not a short flag group\n            if (arg.match(negative) || !arg.match(/^-[^-]+/)) {\n                return false;\n            }\n            let hasAllFlags = true;\n            let next;\n            const letters = arg.slice(1).split('');\n            for (let j = 0; j < letters.length; j++) {\n                next = arg.slice(j + 2);\n                if (!hasAnyFlag(letters[j])) {\n                    hasAllFlags = false;\n                    break;\n                }\n                if ((letters[j + 1] && letters[j + 1] === '=') ||\n                    next === '-' ||\n                    (/[A-Za-z]/.test(letters[j]) && /^-?\\d+(\\.\\d*)?(e-?\\d+)?$/.test(next)) ||\n                    (letters[j + 1] && letters[j + 1].match(/\\W/))) {\n                    break;\n                }\n            }\n            return hasAllFlags;\n        }\n        function isUnknownOptionAsArg(arg) {\n            return configuration['unknown-options-as-args'] && isUnknownOption(arg);\n        }\n        function isUnknownOption(arg) {\n            arg = arg.replace(/^-{3,}/, '--');\n            // ignore negative numbers\n            if (arg.match(negative)) {\n                return false;\n            }\n            // if this is a short option group and all of them are configured, it isn't unknown\n            if (hasAllShortFlags(arg)) {\n                return false;\n            }\n            // e.g. '--count=2'\n            const flagWithEquals = /^-+([^=]+?)=[\\s\\S]*$/;\n            // e.g. '-a' or '--arg'\n            const normalFlag = /^-+([^=]+?)$/;\n            // e.g. '-a-'\n            const flagEndingInHyphen = /^-+([^=]+?)-$/;\n            // e.g. '-abc123'\n            const flagEndingInDigits = /^-+([^=]+?\\d+)$/;\n            // e.g. '-a/usr/local'\n            const flagEndingInNonWordCharacters = /^-+([^=]+?)\\W+.*$/;\n            // check the different types of flag styles, including negatedBoolean, a pattern defined near the start of the parse method\n            return !hasFlagsMatching(arg, flagWithEquals, negatedBoolean, normalFlag, flagEndingInHyphen, flagEndingInDigits, flagEndingInNonWordCharacters);\n        }\n        // make a best effort to pick a default value\n        // for an option based on name and type.\n        function defaultValue(key) {\n            if (!checkAllAliases(key, flags.bools) &&\n                !checkAllAliases(key, flags.counts) &&\n                `${key}` in defaults) {\n                return defaults[key];\n            }\n            else {\n                return defaultForType(guessType(key));\n            }\n        }\n        // return a default value, given the type of a flag.,\n        function defaultForType(type) {\n            const def = {\n                [DefaultValuesForTypeKey.BOOLEAN]: true,\n                [DefaultValuesForTypeKey.STRING]: '',\n                [DefaultValuesForTypeKey.NUMBER]: undefined,\n                [DefaultValuesForTypeKey.ARRAY]: []\n            };\n            return def[type];\n        }\n        // given a flag, enforce a default type.\n        function guessType(key) {\n            let type = DefaultValuesForTypeKey.BOOLEAN;\n            if (checkAllAliases(key, flags.strings))\n                type = DefaultValuesForTypeKey.STRING;\n            else if (checkAllAliases(key, flags.numbers))\n                type = DefaultValuesForTypeKey.NUMBER;\n            else if (checkAllAliases(key, flags.bools))\n                type = DefaultValuesForTypeKey.BOOLEAN;\n            else if (checkAllAliases(key, flags.arrays))\n                type = DefaultValuesForTypeKey.ARRAY;\n            return type;\n        }\n        function isUndefined(num) {\n            return num === undefined;\n        }\n        // check user configuration settings for inconsistencies\n        function checkConfiguration() {\n            // count keys should not be set as array/narg\n            Object.keys(flags.counts).find(key => {\n                if (checkAllAliases(key, flags.arrays)) {\n                    error = Error(__('Invalid configuration: %s, opts.count excludes opts.array.', key));\n                    return true;\n                }\n                else if (checkAllAliases(key, flags.nargs)) {\n                    error = Error(__('Invalid configuration: %s, opts.count excludes opts.narg.', key));\n                    return true;\n                }\n                return false;\n            });\n        }\n        return {\n            aliases: Object.assign({}, flags.aliases),\n            argv: Object.assign(argvReturn, argv),\n            configuration: configuration,\n            defaulted: Object.assign({}, defaulted),\n            error: error,\n            newAliases: Object.assign({}, newAliases)\n        };\n    }\n}\n// if any aliases reference each other, we should\n// merge them together.\nfunction combineAliases(aliases) {\n    const aliasArrays = [];\n    const combined = Object.create(null);\n    let change = true;\n    // turn alias lookup hash {key: ['alias1', 'alias2']} into\n    // a simple array ['key', 'alias1', 'alias2']\n    Object.keys(aliases).forEach(function (key) {\n        aliasArrays.push([].concat(aliases[key], key));\n    });\n    // combine arrays until zero changes are\n    // made in an iteration.\n    while (change) {\n        change = false;\n        for (let i = 0; i < aliasArrays.length; i++) {\n            for (let ii = i + 1; ii < aliasArrays.length; ii++) {\n                const intersect = aliasArrays[i].filter(function (v) {\n                    return aliasArrays[ii].indexOf(v) !== -1;\n                });\n                if (intersect.length) {\n                    aliasArrays[i] = aliasArrays[i].concat(aliasArrays[ii]);\n                    aliasArrays.splice(ii, 1);\n                    change = true;\n                    break;\n                }\n            }\n        }\n    }\n    // map arrays back to the hash-lookup (de-dupe while\n    // we're at it).\n    aliasArrays.forEach(function (aliasArray) {\n        aliasArray = aliasArray.filter(function (v, i, self) {\n            return self.indexOf(v) === i;\n        });\n        const lastAlias = aliasArray.pop();\n        if (lastAlias !== undefined && typeof lastAlias === 'string') {\n            combined[lastAlias] = aliasArray;\n        }\n    });\n    return combined;\n}\n// this function should only be called when a count is given as an arg\n// it is NOT called to set a default value\n// thus we can start the count at 1 instead of 0\nfunction increment(orig) {\n    return orig !== undefined ? orig + 1 : 1;\n}\n// TODO(bcoe): in the next major version of yargs, switch to\n// Object.create(null) for dot notation:\nfunction sanitizeKey(key) {\n    if (key === '__proto__')\n        return '___proto___';\n    return key;\n}\nfunction stripQuotes(val) {\n    return (typeof val === 'string' &&\n        (val[0] === \"'\" || val[0] === '\"') &&\n        val[val.length - 1] === val[0])\n        ? val.substring(1, val.length - 1)\n        : val;\n}\n","function getProcessArgvBinIndex() {\n    if (isBundledElectronApp())\n        return 0;\n    return 1;\n}\nfunction isBundledElectronApp() {\n    return isElectronApp() && !process.defaultApp;\n}\nfunction isElectronApp() {\n    return !!process.versions.electron;\n}\nexport function hideBin(argv) {\n    return argv.slice(getProcessArgvBinIndex() + 1);\n}\nexport function getProcessArgvBin() {\n    return process.argv[getProcessArgvBinIndex()];\n}\n","export class YError extends Error {\n    constructor(msg) {\n        super(msg || 'yargs error');\n        this.name = 'YError';\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, YError);\n        }\n    }\n}\n","import { readFileSync, statSync, writeFile } from 'fs';\nimport { format } from 'util';\nimport { resolve } from 'path';\nexport default {\n    fs: {\n        readFileSync,\n        writeFile\n    },\n    format,\n    resolve,\n    exists: (file) => {\n        try {\n            return statSync(file).isFile();\n        }\n        catch (err) {\n            return false;\n        }\n    }\n};\n","let shim;\nclass Y18N {\n    constructor(opts) {\n        // configurable options.\n        opts = opts || {};\n        this.directory = opts.directory || './locales';\n        this.updateFiles = typeof opts.updateFiles === 'boolean' ? opts.updateFiles : true;\n        this.locale = opts.locale || 'en';\n        this.fallbackToLanguage = typeof opts.fallbackToLanguage === 'boolean' ? opts.fallbackToLanguage : true;\n        // internal stuff.\n        this.cache = Object.create(null);\n        this.writeQueue = [];\n    }\n    __(...args) {\n        if (typeof arguments[0] !== 'string') {\n            return this._taggedLiteral(arguments[0], ...arguments);\n        }\n        const str = args.shift();\n        let cb = function () { }; // start with noop.\n        if (typeof args[args.length - 1] === 'function')\n            cb = args.pop();\n        cb = cb || function () { }; // noop.\n        if (!this.cache[this.locale])\n            this._readLocaleFile();\n        // we've observed a new string, update the language file.\n        if (!this.cache[this.locale][str] && this.updateFiles) {\n            this.cache[this.locale][str] = str;\n            // include the current directory and locale,\n            // since these values could change before the\n            // write is performed.\n            this._enqueueWrite({\n                directory: this.directory,\n                locale: this.locale,\n                cb\n            });\n        }\n        else {\n            cb();\n        }\n        return shim.format.apply(shim.format, [this.cache[this.locale][str] || str].concat(args));\n    }\n    __n() {\n        const args = Array.prototype.slice.call(arguments);\n        const singular = args.shift();\n        const plural = args.shift();\n        const quantity = args.shift();\n        let cb = function () { }; // start with noop.\n        if (typeof args[args.length - 1] === 'function')\n            cb = args.pop();\n        if (!this.cache[this.locale])\n            this._readLocaleFile();\n        let str = quantity === 1 ? singular : plural;\n        if (this.cache[this.locale][singular]) {\n            const entry = this.cache[this.locale][singular];\n            str = entry[quantity === 1 ? 'one' : 'other'];\n        }\n        // we've observed a new string, update the language file.\n        if (!this.cache[this.locale][singular] && this.updateFiles) {\n            this.cache[this.locale][singular] = {\n                one: singular,\n                other: plural\n            };\n            // include the current directory and locale,\n            // since these values could change before the\n            // write is performed.\n            this._enqueueWrite({\n                directory: this.directory,\n                locale: this.locale,\n                cb\n            });\n        }\n        else {\n            cb();\n        }\n        // if a %d placeholder is provided, add quantity\n        // to the arguments expanded by util.format.\n        const values = [str];\n        if (~str.indexOf('%d'))\n            values.push(quantity);\n        return shim.format.apply(shim.format, values.concat(args));\n    }\n    setLocale(locale) {\n        this.locale = locale;\n    }\n    getLocale() {\n        return this.locale;\n    }\n    updateLocale(obj) {\n        if (!this.cache[this.locale])\n            this._readLocaleFile();\n        for (const key in obj) {\n            if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                this.cache[this.locale][key] = obj[key];\n            }\n        }\n    }\n    _taggedLiteral(parts, ...args) {\n        let str = '';\n        parts.forEach(function (part, i) {\n            const arg = args[i + 1];\n            str += part;\n            if (typeof arg !== 'undefined') {\n                str += '%s';\n            }\n        });\n        return this.__.apply(this, [str].concat([].slice.call(args, 1)));\n    }\n    _enqueueWrite(work) {\n        this.writeQueue.push(work);\n        if (this.writeQueue.length === 1)\n            this._processWriteQueue();\n    }\n    _processWriteQueue() {\n        const _this = this;\n        const work = this.writeQueue[0];\n        // destructure the enqueued work.\n        const directory = work.directory;\n        const locale = work.locale;\n        const cb = work.cb;\n        const languageFile = this._resolveLocaleFile(directory, locale);\n        const serializedLocale = JSON.stringify(this.cache[locale], null, 2);\n        shim.fs.writeFile(languageFile, serializedLocale, 'utf-8', function (err) {\n            _this.writeQueue.shift();\n            if (_this.writeQueue.length > 0)\n                _this._processWriteQueue();\n            cb(err);\n        });\n    }\n    _readLocaleFile() {\n        let localeLookup = {};\n        const languageFile = this._resolveLocaleFile(this.directory, this.locale);\n        try {\n            // When using a bundler such as webpack, readFileSync may not be defined:\n            if (shim.fs.readFileSync) {\n                localeLookup = JSON.parse(shim.fs.readFileSync(languageFile, 'utf-8'));\n            }\n        }\n        catch (err) {\n            if (err instanceof SyntaxError) {\n                err.message = 'syntax error in ' + languageFile;\n            }\n            if (err.code === 'ENOENT')\n                localeLookup = {};\n            else\n                throw err;\n        }\n        this.cache[this.locale] = localeLookup;\n    }\n    _resolveLocaleFile(directory, locale) {\n        let file = shim.resolve(directory, './', locale + '.json');\n        if (this.fallbackToLanguage && !this._fileExistsSync(file) && ~locale.lastIndexOf('_')) {\n            // attempt fallback to language only\n            const languageFile = shim.resolve(directory, './', locale.split('_')[0] + '.json');\n            if (this._fileExistsSync(languageFile))\n                file = languageFile;\n        }\n        return file;\n    }\n    _fileExistsSync(file) {\n        return shim.exists(file);\n    }\n}\nexport function y18n(opts, _shim) {\n    shim = _shim;\n    const y18n = new Y18N(opts);\n    return {\n        __: y18n.__.bind(y18n),\n        __n: y18n.__n.bind(y18n),\n        setLocale: y18n.setLocale.bind(y18n),\n        getLocale: y18n.getLocale.bind(y18n),\n        updateLocale: y18n.updateLocale.bind(y18n),\n        locale: y18n.locale\n    };\n}\n","import shim from './build/lib/platform-shims/node.js'\nimport { y18n as _y18n } from './build/lib/index.js'\n\nconst y18n = (opts) => {\n  return _y18n(opts, shim)\n}\n\nexport default y18n\n","export function assertNotStrictEqual(actual, expected, shim, message) {\n    shim.assert.notStrictEqual(actual, expected, message);\n}\nexport function assertSingleKey(actual, shim) {\n    shim.assert.strictEqual(typeof actual, 'string');\n}\nexport function objectKeys(object) {\n    return Object.keys(object);\n}\n","export function isPromise(maybePromise) {\n    return (!!maybePromise &&\n        !!maybePromise.then &&\n        typeof maybePromise.then === 'function');\n}\n","export function parseCommand(cmd) {\n    const extraSpacesStrippedCommand = cmd.replace(/\\s{2,}/g, ' ');\n    const splitCommand = extraSpacesStrippedCommand.split(/\\s+(?![^[]*]|[^<]*>)/);\n    const bregex = /\\.*[\\][<>]/g;\n    const firstCommand = splitCommand.shift();\n    if (!firstCommand)\n        throw new Error(`No command found in: ${cmd}`);\n    const parsedCommand = {\n        cmd: firstCommand.replace(bregex, ''),\n        demanded: [],\n        optional: [],\n    };\n    splitCommand.forEach((cmd, i) => {\n        let variadic = false;\n        cmd = cmd.replace(/\\s/g, '');\n        if (/\\.+[\\]>]/.test(cmd) && i === splitCommand.length - 1)\n            variadic = true;\n        if (/^\\[/.test(cmd)) {\n            parsedCommand.optional.push({\n                cmd: cmd.replace(bregex, '').split('|'),\n                variadic,\n            });\n        }\n        else {\n            parsedCommand.demanded.push({\n                cmd: cmd.replace(bregex, '').split('|'),\n                variadic,\n            });\n        }\n    });\n    return parsedCommand;\n}\n","import { YError } from './yerror.js';\nimport { parseCommand } from './parse-command.js';\nconst positionName = ['first', 'second', 'third', 'fourth', 'fifth', 'sixth'];\nexport function argsert(arg1, arg2, arg3) {\n    function parseArgs() {\n        return typeof arg1 === 'object'\n            ? [{ demanded: [], optional: [] }, arg1, arg2]\n            : [\n                parseCommand(`cmd ${arg1}`),\n                arg2,\n                arg3,\n            ];\n    }\n    try {\n        let position = 0;\n        const [parsed, callerArguments, _length] = parseArgs();\n        const args = [].slice.call(callerArguments);\n        while (args.length && args[args.length - 1] === undefined)\n            args.pop();\n        const length = _length || args.length;\n        if (length < parsed.demanded.length) {\n            throw new YError(`Not enough arguments provided. Expected ${parsed.demanded.length} but received ${args.length}.`);\n        }\n        const totalCommands = parsed.demanded.length + parsed.optional.length;\n        if (length > totalCommands) {\n            throw new YError(`Too many arguments provided. Expected max ${totalCommands} but received ${length}.`);\n        }\n        parsed.demanded.forEach(demanded => {\n            const arg = args.shift();\n            const observedType = guessType(arg);\n            const matchingTypes = demanded.cmd.filter(type => type === observedType || type === '*');\n            if (matchingTypes.length === 0)\n                argumentTypeError(observedType, demanded.cmd, position);\n            position += 1;\n        });\n        parsed.optional.forEach(optional => {\n            if (args.length === 0)\n                return;\n            const arg = args.shift();\n            const observedType = guessType(arg);\n            const matchingTypes = optional.cmd.filter(type => type === observedType || type === '*');\n            if (matchingTypes.length === 0)\n                argumentTypeError(observedType, optional.cmd, position);\n            position += 1;\n        });\n    }\n    catch (err) {\n        console.warn(err.stack);\n    }\n}\nfunction guessType(arg) {\n    if (Array.isArray(arg)) {\n        return 'array';\n    }\n    else if (arg === null) {\n        return 'null';\n    }\n    return typeof arg;\n}\nfunction argumentTypeError(observedType, allowedTypes, position) {\n    throw new YError(`Invalid ${positionName[position] || 'manyith'} argument. Expected ${allowedTypes.join(' or ')} but received ${observedType}.`);\n}\n","import { argsert } from './argsert.js';\nimport { isPromise } from './utils/is-promise.js';\nexport class GlobalMiddleware {\n    constructor(yargs) {\n        this.globalMiddleware = [];\n        this.frozens = [];\n        this.yargs = yargs;\n    }\n    addMiddleware(callback, applyBeforeValidation, global = true, mutates = false) {\n        argsert('<array|function> [boolean] [boolean] [boolean]', [callback, applyBeforeValidation, global], arguments.length);\n        if (Array.isArray(callback)) {\n            for (let i = 0; i < callback.length; i++) {\n                if (typeof callback[i] !== 'function') {\n                    throw Error('middleware must be a function');\n                }\n                const m = callback[i];\n                m.applyBeforeValidation = applyBeforeValidation;\n                m.global = global;\n            }\n            Array.prototype.push.apply(this.globalMiddleware, callback);\n        }\n        else if (typeof callback === 'function') {\n            const m = callback;\n            m.applyBeforeValidation = applyBeforeValidation;\n            m.global = global;\n            m.mutates = mutates;\n            this.globalMiddleware.push(callback);\n        }\n        return this.yargs;\n    }\n    addCoerceMiddleware(callback, option) {\n        const aliases = this.yargs.getAliases();\n        this.globalMiddleware = this.globalMiddleware.filter(m => {\n            const toCheck = [...(aliases[option] || []), option];\n            if (!m.option)\n                return true;\n            else\n                return !toCheck.includes(m.option);\n        });\n        callback.option = option;\n        return this.addMiddleware(callback, true, true, true);\n    }\n    getMiddleware() {\n        return this.globalMiddleware;\n    }\n    freeze() {\n        this.frozens.push([...this.globalMiddleware]);\n    }\n    unfreeze() {\n        const frozen = this.frozens.pop();\n        if (frozen !== undefined)\n            this.globalMiddleware = frozen;\n    }\n    reset() {\n        this.globalMiddleware = this.globalMiddleware.filter(m => m.global);\n    }\n}\nexport function commandMiddlewareFactory(commandMiddleware) {\n    if (!commandMiddleware)\n        return [];\n    return commandMiddleware.map(middleware => {\n        middleware.applyBeforeValidation = false;\n        return middleware;\n    });\n}\nexport function applyMiddleware(argv, yargs, middlewares, beforeValidation) {\n    return middlewares.reduce((acc, middleware) => {\n        if (middleware.applyBeforeValidation !== beforeValidation) {\n            return acc;\n        }\n        if (middleware.mutates) {\n            if (middleware.applied)\n                return acc;\n            middleware.applied = true;\n        }\n        if (isPromise(acc)) {\n            return acc\n                .then(initialObj => Promise.all([initialObj, middleware(initialObj, yargs)]))\n                .then(([initialObj, middlewareObj]) => Object.assign(initialObj, middlewareObj));\n        }\n        else {\n            const result = middleware(acc, yargs);\n            return isPromise(result)\n                ? result.then(middlewareObj => Object.assign(acc, middlewareObj))\n                : Object.assign(acc, result);\n        }\n    }, argv);\n}\n","import { isPromise } from './is-promise.js';\nexport function maybeAsyncResult(getResult, resultHandler, errorHandler = (err) => {\n    throw err;\n}) {\n    try {\n        const result = isFunction(getResult) ? getResult() : getResult;\n        return isPromise(result)\n            ? result.then((result) => resultHandler(result))\n            : resultHandler(result);\n    }\n    catch (err) {\n        return errorHandler(err);\n    }\n}\nfunction isFunction(arg) {\n    return typeof arg === 'function';\n}\n","export default function whichModule(exported) {\n    if (typeof require === 'undefined')\n        return null;\n    for (let i = 0, files = Object.keys(require.cache), mod; i < files.length; i++) {\n        mod = require.cache[files[i]];\n        if (mod.exports === exported)\n            return mod;\n    }\n    return null;\n}\n","import { assertNotStrictEqual, } from './typings/common-types.js';\nimport { isPromise } from './utils/is-promise.js';\nimport { applyMiddleware, commandMiddlewareFactory, } from './middleware.js';\nimport { parseCommand } from './parse-command.js';\nimport { isYargsInstance, } from './yargs-factory.js';\nimport { maybeAsyncResult } from './utils/maybe-async-result.js';\nimport whichModule from './utils/which-module.js';\nconst DEFAULT_MARKER = /(^\\*)|(^\\$0)/;\nexport class CommandInstance {\n    constructor(usage, validation, globalMiddleware, shim) {\n        this.requireCache = new Set();\n        this.handlers = {};\n        this.aliasMap = {};\n        this.frozens = [];\n        this.shim = shim;\n        this.usage = usage;\n        this.globalMiddleware = globalMiddleware;\n        this.validation = validation;\n    }\n    addDirectory(dir, req, callerFile, opts) {\n        opts = opts || {};\n        if (typeof opts.recurse !== 'boolean')\n            opts.recurse = false;\n        if (!Array.isArray(opts.extensions))\n            opts.extensions = ['js'];\n        const parentVisit = typeof opts.visit === 'function' ? opts.visit : (o) => o;\n        opts.visit = (obj, joined, filename) => {\n            const visited = parentVisit(obj, joined, filename);\n            if (visited) {\n                if (this.requireCache.has(joined))\n                    return visited;\n                else\n                    this.requireCache.add(joined);\n                this.addHandler(visited);\n            }\n            return visited;\n        };\n        this.shim.requireDirectory({ require: req, filename: callerFile }, dir, opts);\n    }\n    addHandler(cmd, description, builder, handler, commandMiddleware, deprecated) {\n        let aliases = [];\n        const middlewares = commandMiddlewareFactory(commandMiddleware);\n        handler = handler || (() => { });\n        if (Array.isArray(cmd)) {\n            if (isCommandAndAliases(cmd)) {\n                [cmd, ...aliases] = cmd;\n            }\n            else {\n                for (const command of cmd) {\n                    this.addHandler(command);\n                }\n            }\n        }\n        else if (isCommandHandlerDefinition(cmd)) {\n            let command = Array.isArray(cmd.command) || typeof cmd.command === 'string'\n                ? cmd.command\n                : this.moduleName(cmd);\n            if (cmd.aliases)\n                command = [].concat(command).concat(cmd.aliases);\n            this.addHandler(command, this.extractDesc(cmd), cmd.builder, cmd.handler, cmd.middlewares, cmd.deprecated);\n            return;\n        }\n        else if (isCommandBuilderDefinition(builder)) {\n            this.addHandler([cmd].concat(aliases), description, builder.builder, builder.handler, builder.middlewares, builder.deprecated);\n            return;\n        }\n        if (typeof cmd === 'string') {\n            const parsedCommand = parseCommand(cmd);\n            aliases = aliases.map(alias => parseCommand(alias).cmd);\n            let isDefault = false;\n            const parsedAliases = [parsedCommand.cmd].concat(aliases).filter(c => {\n                if (DEFAULT_MARKER.test(c)) {\n                    isDefault = true;\n                    return false;\n                }\n                return true;\n            });\n            if (parsedAliases.length === 0 && isDefault)\n                parsedAliases.push('$0');\n            if (isDefault) {\n                parsedCommand.cmd = parsedAliases[0];\n                aliases = parsedAliases.slice(1);\n                cmd = cmd.replace(DEFAULT_MARKER, parsedCommand.cmd);\n            }\n            aliases.forEach(alias => {\n                this.aliasMap[alias] = parsedCommand.cmd;\n            });\n            if (description !== false) {\n                this.usage.command(cmd, description, isDefault, aliases, deprecated);\n            }\n            this.handlers[parsedCommand.cmd] = {\n                original: cmd,\n                description,\n                handler,\n                builder: builder || {},\n                middlewares,\n                deprecated,\n                demanded: parsedCommand.demanded,\n                optional: parsedCommand.optional,\n            };\n            if (isDefault)\n                this.defaultCommand = this.handlers[parsedCommand.cmd];\n        }\n    }\n    getCommandHandlers() {\n        return this.handlers;\n    }\n    getCommands() {\n        return Object.keys(this.handlers).concat(Object.keys(this.aliasMap));\n    }\n    hasDefaultCommand() {\n        return !!this.defaultCommand;\n    }\n    runCommand(command, yargs, parsed, commandIndex, helpOnly, helpOrVersionSet) {\n        const commandHandler = this.handlers[command] ||\n            this.handlers[this.aliasMap[command]] ||\n            this.defaultCommand;\n        const currentContext = yargs.getInternalMethods().getContext();\n        const parentCommands = currentContext.commands.slice();\n        const isDefaultCommand = !command;\n        if (command) {\n            currentContext.commands.push(command);\n            currentContext.fullCommands.push(commandHandler.original);\n        }\n        const builderResult = this.applyBuilderUpdateUsageAndParse(isDefaultCommand, commandHandler, yargs, parsed.aliases, parentCommands, commandIndex, helpOnly, helpOrVersionSet);\n        return isPromise(builderResult)\n            ? builderResult.then(result => this.applyMiddlewareAndGetResult(isDefaultCommand, commandHandler, result.innerArgv, currentContext, helpOnly, result.aliases, yargs))\n            : this.applyMiddlewareAndGetResult(isDefaultCommand, commandHandler, builderResult.innerArgv, currentContext, helpOnly, builderResult.aliases, yargs);\n    }\n    applyBuilderUpdateUsageAndParse(isDefaultCommand, commandHandler, yargs, aliases, parentCommands, commandIndex, helpOnly, helpOrVersionSet) {\n        const builder = commandHandler.builder;\n        let innerYargs = yargs;\n        if (isCommandBuilderCallback(builder)) {\n            const builderOutput = builder(yargs.getInternalMethods().reset(aliases), helpOrVersionSet);\n            if (isPromise(builderOutput)) {\n                return builderOutput.then(output => {\n                    innerYargs = isYargsInstance(output) ? output : yargs;\n                    return this.parseAndUpdateUsage(isDefaultCommand, commandHandler, innerYargs, parentCommands, commandIndex, helpOnly);\n                });\n            }\n        }\n        else if (isCommandBuilderOptionDefinitions(builder)) {\n            innerYargs = yargs.getInternalMethods().reset(aliases);\n            Object.keys(commandHandler.builder).forEach(key => {\n                innerYargs.option(key, builder[key]);\n            });\n        }\n        return this.parseAndUpdateUsage(isDefaultCommand, commandHandler, innerYargs, parentCommands, commandIndex, helpOnly);\n    }\n    parseAndUpdateUsage(isDefaultCommand, commandHandler, innerYargs, parentCommands, commandIndex, helpOnly) {\n        if (isDefaultCommand)\n            innerYargs.getInternalMethods().getUsageInstance().unfreeze(true);\n        if (this.shouldUpdateUsage(innerYargs)) {\n            innerYargs\n                .getInternalMethods()\n                .getUsageInstance()\n                .usage(this.usageFromParentCommandsCommandHandler(parentCommands, commandHandler), commandHandler.description);\n        }\n        const innerArgv = innerYargs\n            .getInternalMethods()\n            .runYargsParserAndExecuteCommands(null, undefined, true, commandIndex, helpOnly);\n        return isPromise(innerArgv)\n            ? innerArgv.then(argv => ({\n                aliases: innerYargs.parsed.aliases,\n                innerArgv: argv,\n            }))\n            : {\n                aliases: innerYargs.parsed.aliases,\n                innerArgv: innerArgv,\n            };\n    }\n    shouldUpdateUsage(yargs) {\n        return (!yargs.getInternalMethods().getUsageInstance().getUsageDisabled() &&\n            yargs.getInternalMethods().getUsageInstance().getUsage().length === 0);\n    }\n    usageFromParentCommandsCommandHandler(parentCommands, commandHandler) {\n        const c = DEFAULT_MARKER.test(commandHandler.original)\n            ? commandHandler.original.replace(DEFAULT_MARKER, '').trim()\n            : commandHandler.original;\n        const pc = parentCommands.filter(c => {\n            return !DEFAULT_MARKER.test(c);\n        });\n        pc.push(c);\n        return `$0 ${pc.join(' ')}`;\n    }\n    handleValidationAndGetResult(isDefaultCommand, commandHandler, innerArgv, currentContext, aliases, yargs, middlewares, positionalMap) {\n        if (!yargs.getInternalMethods().getHasOutput()) {\n            const validation = yargs\n                .getInternalMethods()\n                .runValidation(aliases, positionalMap, yargs.parsed.error, isDefaultCommand);\n            innerArgv = maybeAsyncResult(innerArgv, result => {\n                validation(result);\n                return result;\n            });\n        }\n        if (commandHandler.handler && !yargs.getInternalMethods().getHasOutput()) {\n            yargs.getInternalMethods().setHasOutput();\n            const populateDoubleDash = !!yargs.getOptions().configuration['populate--'];\n            yargs\n                .getInternalMethods()\n                .postProcess(innerArgv, populateDoubleDash, false, false);\n            innerArgv = applyMiddleware(innerArgv, yargs, middlewares, false);\n            innerArgv = maybeAsyncResult(innerArgv, result => {\n                const handlerResult = commandHandler.handler(result);\n                return isPromise(handlerResult)\n                    ? handlerResult.then(() => result)\n                    : result;\n            });\n            if (!isDefaultCommand) {\n                yargs.getInternalMethods().getUsageInstance().cacheHelpMessage();\n            }\n            if (isPromise(innerArgv) &&\n                !yargs.getInternalMethods().hasParseCallback()) {\n                innerArgv.catch(error => {\n                    try {\n                        yargs.getInternalMethods().getUsageInstance().fail(null, error);\n                    }\n                    catch (_err) {\n                    }\n                });\n            }\n        }\n        if (!isDefaultCommand) {\n            currentContext.commands.pop();\n            currentContext.fullCommands.pop();\n        }\n        return innerArgv;\n    }\n    applyMiddlewareAndGetResult(isDefaultCommand, commandHandler, innerArgv, currentContext, helpOnly, aliases, yargs) {\n        let positionalMap = {};\n        if (helpOnly)\n            return innerArgv;\n        if (!yargs.getInternalMethods().getHasOutput()) {\n            positionalMap = this.populatePositionals(commandHandler, innerArgv, currentContext, yargs);\n        }\n        const middlewares = this.globalMiddleware\n            .getMiddleware()\n            .slice(0)\n            .concat(commandHandler.middlewares);\n        const maybePromiseArgv = applyMiddleware(innerArgv, yargs, middlewares, true);\n        return isPromise(maybePromiseArgv)\n            ? maybePromiseArgv.then(resolvedInnerArgv => this.handleValidationAndGetResult(isDefaultCommand, commandHandler, resolvedInnerArgv, currentContext, aliases, yargs, middlewares, positionalMap))\n            : this.handleValidationAndGetResult(isDefaultCommand, commandHandler, maybePromiseArgv, currentContext, aliases, yargs, middlewares, positionalMap);\n    }\n    populatePositionals(commandHandler, argv, context, yargs) {\n        argv._ = argv._.slice(context.commands.length);\n        const demanded = commandHandler.demanded.slice(0);\n        const optional = commandHandler.optional.slice(0);\n        const positionalMap = {};\n        this.validation.positionalCount(demanded.length, argv._.length);\n        while (demanded.length) {\n            const demand = demanded.shift();\n            this.populatePositional(demand, argv, positionalMap);\n        }\n        while (optional.length) {\n            const maybe = optional.shift();\n            this.populatePositional(maybe, argv, positionalMap);\n        }\n        argv._ = context.commands.concat(argv._.map(a => '' + a));\n        this.postProcessPositionals(argv, positionalMap, this.cmdToParseOptions(commandHandler.original), yargs);\n        return positionalMap;\n    }\n    populatePositional(positional, argv, positionalMap) {\n        const cmd = positional.cmd[0];\n        if (positional.variadic) {\n            positionalMap[cmd] = argv._.splice(0).map(String);\n        }\n        else {\n            if (argv._.length)\n                positionalMap[cmd] = [String(argv._.shift())];\n        }\n    }\n    cmdToParseOptions(cmdString) {\n        const parseOptions = {\n            array: [],\n            default: {},\n            alias: {},\n            demand: {},\n        };\n        const parsed = parseCommand(cmdString);\n        parsed.demanded.forEach(d => {\n            const [cmd, ...aliases] = d.cmd;\n            if (d.variadic) {\n                parseOptions.array.push(cmd);\n                parseOptions.default[cmd] = [];\n            }\n            parseOptions.alias[cmd] = aliases;\n            parseOptions.demand[cmd] = true;\n        });\n        parsed.optional.forEach(o => {\n            const [cmd, ...aliases] = o.cmd;\n            if (o.variadic) {\n                parseOptions.array.push(cmd);\n                parseOptions.default[cmd] = [];\n            }\n            parseOptions.alias[cmd] = aliases;\n        });\n        return parseOptions;\n    }\n    postProcessPositionals(argv, positionalMap, parseOptions, yargs) {\n        const options = Object.assign({}, yargs.getOptions());\n        options.default = Object.assign(parseOptions.default, options.default);\n        for (const key of Object.keys(parseOptions.alias)) {\n            options.alias[key] = (options.alias[key] || []).concat(parseOptions.alias[key]);\n        }\n        options.array = options.array.concat(parseOptions.array);\n        options.config = {};\n        const unparsed = [];\n        Object.keys(positionalMap).forEach(key => {\n            positionalMap[key].map(value => {\n                if (options.configuration['unknown-options-as-args'])\n                    options.key[key] = true;\n                unparsed.push(`--${key}`);\n                unparsed.push(value);\n            });\n        });\n        if (!unparsed.length)\n            return;\n        const config = Object.assign({}, options.configuration, {\n            'populate--': false,\n        });\n        const parsed = this.shim.Parser.detailed(unparsed, Object.assign({}, options, {\n            configuration: config,\n        }));\n        if (parsed.error) {\n            yargs\n                .getInternalMethods()\n                .getUsageInstance()\n                .fail(parsed.error.message, parsed.error);\n        }\n        else {\n            const positionalKeys = Object.keys(positionalMap);\n            Object.keys(positionalMap).forEach(key => {\n                positionalKeys.push(...parsed.aliases[key]);\n            });\n            Object.keys(parsed.argv).forEach(key => {\n                if (positionalKeys.includes(key)) {\n                    if (!positionalMap[key])\n                        positionalMap[key] = parsed.argv[key];\n                    if (!this.isInConfigs(yargs, key) &&\n                        !this.isDefaulted(yargs, key) &&\n                        Object.prototype.hasOwnProperty.call(argv, key) &&\n                        Object.prototype.hasOwnProperty.call(parsed.argv, key) &&\n                        (Array.isArray(argv[key]) || Array.isArray(parsed.argv[key]))) {\n                        argv[key] = [].concat(argv[key], parsed.argv[key]);\n                    }\n                    else {\n                        argv[key] = parsed.argv[key];\n                    }\n                }\n            });\n        }\n    }\n    isDefaulted(yargs, key) {\n        const { default: defaults } = yargs.getOptions();\n        return (Object.prototype.hasOwnProperty.call(defaults, key) ||\n            Object.prototype.hasOwnProperty.call(defaults, this.shim.Parser.camelCase(key)));\n    }\n    isInConfigs(yargs, key) {\n        const { configObjects } = yargs.getOptions();\n        return (configObjects.some(c => Object.prototype.hasOwnProperty.call(c, key)) ||\n            configObjects.some(c => Object.prototype.hasOwnProperty.call(c, this.shim.Parser.camelCase(key))));\n    }\n    runDefaultBuilderOn(yargs) {\n        if (!this.defaultCommand)\n            return;\n        if (this.shouldUpdateUsage(yargs)) {\n            const commandString = DEFAULT_MARKER.test(this.defaultCommand.original)\n                ? this.defaultCommand.original\n                : this.defaultCommand.original.replace(/^[^[\\]<>]*/, '$0 ');\n            yargs\n                .getInternalMethods()\n                .getUsageInstance()\n                .usage(commandString, this.defaultCommand.description);\n        }\n        const builder = this.defaultCommand.builder;\n        if (isCommandBuilderCallback(builder)) {\n            return builder(yargs, true);\n        }\n        else if (!isCommandBuilderDefinition(builder)) {\n            Object.keys(builder).forEach(key => {\n                yargs.option(key, builder[key]);\n            });\n        }\n        return undefined;\n    }\n    moduleName(obj) {\n        const mod = whichModule(obj);\n        if (!mod)\n            throw new Error(`No command name given for module: ${this.shim.inspect(obj)}`);\n        return this.commandFromFilename(mod.filename);\n    }\n    commandFromFilename(filename) {\n        return this.shim.path.basename(filename, this.shim.path.extname(filename));\n    }\n    extractDesc({ describe, description, desc }) {\n        for (const test of [describe, description, desc]) {\n            if (typeof test === 'string' || test === false)\n                return test;\n            assertNotStrictEqual(test, true, this.shim);\n        }\n        return false;\n    }\n    freeze() {\n        this.frozens.push({\n            handlers: this.handlers,\n            aliasMap: this.aliasMap,\n            defaultCommand: this.defaultCommand,\n        });\n    }\n    unfreeze() {\n        const frozen = this.frozens.pop();\n        assertNotStrictEqual(frozen, undefined, this.shim);\n        ({\n            handlers: this.handlers,\n            aliasMap: this.aliasMap,\n            defaultCommand: this.defaultCommand,\n        } = frozen);\n    }\n    reset() {\n        this.handlers = {};\n        this.aliasMap = {};\n        this.defaultCommand = undefined;\n        this.requireCache = new Set();\n        return this;\n    }\n}\nexport function command(usage, validation, globalMiddleware, shim) {\n    return new CommandInstance(usage, validation, globalMiddleware, shim);\n}\nexport function isCommandBuilderDefinition(builder) {\n    return (typeof builder === 'object' &&\n        !!builder.builder &&\n        typeof builder.handler === 'function');\n}\nfunction isCommandAndAliases(cmd) {\n    return cmd.every(c => typeof c === 'string');\n}\nexport function isCommandBuilderCallback(builder) {\n    return typeof builder === 'function';\n}\nfunction isCommandBuilderOptionDefinitions(builder) {\n    return typeof builder === 'object';\n}\nexport function isCommandHandlerDefinition(cmd) {\n    return typeof cmd === 'object' && !Array.isArray(cmd);\n}\n","import { objectKeys } from '../typings/common-types.js';\nexport function objFilter(original = {}, filter = () => true) {\n    const obj = {};\n    objectKeys(original).forEach(key => {\n        if (filter(key, original[key])) {\n            obj[key] = original[key];\n        }\n    });\n    return obj;\n}\n","export default function setBlocking(blocking) {\n    if (typeof process === 'undefined')\n        return;\n    [process.stdout, process.stderr].forEach(_stream => {\n        const stream = _stream;\n        if (stream._handle &&\n            stream.isTTY &&\n            typeof stream._handle.setBlocking === 'function') {\n            stream._handle.setBlocking(blocking);\n        }\n    });\n}\n","import { objFilter } from './utils/obj-filter.js';\nimport { YError } from './yerror.js';\nimport setBlocking from './utils/set-blocking.js';\nfunction isBoolean(fail) {\n    return typeof fail === 'boolean';\n}\nexport function usage(yargs, shim) {\n    const __ = shim.y18n.__;\n    const self = {};\n    const fails = [];\n    self.failFn = function failFn(f) {\n        fails.push(f);\n    };\n    let failMessage = null;\n    let globalFailMessage = null;\n    let showHelpOnFail = true;\n    self.showHelpOnFail = function showHelpOnFailFn(arg1 = true, arg2) {\n        const [enabled, message] = typeof arg1 === 'string' ? [true, arg1] : [arg1, arg2];\n        if (yargs.getInternalMethods().isGlobalContext()) {\n            globalFailMessage = message;\n        }\n        failMessage = message;\n        showHelpOnFail = enabled;\n        return self;\n    };\n    let failureOutput = false;\n    self.fail = function fail(msg, err) {\n        const logger = yargs.getInternalMethods().getLoggerInstance();\n        if (fails.length) {\n            for (let i = fails.length - 1; i >= 0; --i) {\n                const fail = fails[i];\n                if (isBoolean(fail)) {\n                    if (err)\n                        throw err;\n                    else if (msg)\n                        throw Error(msg);\n                }\n                else {\n                    fail(msg, err, self);\n                }\n            }\n        }\n        else {\n            if (yargs.getExitProcess())\n                setBlocking(true);\n            if (!failureOutput) {\n                failureOutput = true;\n                if (showHelpOnFail) {\n                    yargs.showHelp('error');\n                    logger.error();\n                }\n                if (msg || err)\n                    logger.error(msg || err);\n                const globalOrCommandFailMessage = failMessage || globalFailMessage;\n                if (globalOrCommandFailMessage) {\n                    if (msg || err)\n                        logger.error('');\n                    logger.error(globalOrCommandFailMessage);\n                }\n            }\n            err = err || new YError(msg);\n            if (yargs.getExitProcess()) {\n                return yargs.exit(1);\n            }\n            else if (yargs.getInternalMethods().hasParseCallback()) {\n                return yargs.exit(1, err);\n            }\n            else {\n                throw err;\n            }\n        }\n    };\n    let usages = [];\n    let usageDisabled = false;\n    self.usage = (msg, description) => {\n        if (msg === null) {\n            usageDisabled = true;\n            usages = [];\n            return self;\n        }\n        usageDisabled = false;\n        usages.push([msg, description || '']);\n        return self;\n    };\n    self.getUsage = () => {\n        return usages;\n    };\n    self.getUsageDisabled = () => {\n        return usageDisabled;\n    };\n    self.getPositionalGroupName = () => {\n        return __('Positionals:');\n    };\n    let examples = [];\n    self.example = (cmd, description) => {\n        examples.push([cmd, description || '']);\n    };\n    let commands = [];\n    self.command = function command(cmd, description, isDefault, aliases, deprecated = false) {\n        if (isDefault) {\n            commands = commands.map(cmdArray => {\n                cmdArray[2] = false;\n                return cmdArray;\n            });\n        }\n        commands.push([cmd, description || '', isDefault, aliases, deprecated]);\n    };\n    self.getCommands = () => commands;\n    let descriptions = {};\n    self.describe = function describe(keyOrKeys, desc) {\n        if (Array.isArray(keyOrKeys)) {\n            keyOrKeys.forEach(k => {\n                self.describe(k, desc);\n            });\n        }\n        else if (typeof keyOrKeys === 'object') {\n            Object.keys(keyOrKeys).forEach(k => {\n                self.describe(k, keyOrKeys[k]);\n            });\n        }\n        else {\n            descriptions[keyOrKeys] = desc;\n        }\n    };\n    self.getDescriptions = () => descriptions;\n    let epilogs = [];\n    self.epilog = msg => {\n        epilogs.push(msg);\n    };\n    let wrapSet = false;\n    let wrap;\n    self.wrap = cols => {\n        wrapSet = true;\n        wrap = cols;\n    };\n    self.getWrap = () => {\n        if (shim.getEnv('YARGS_DISABLE_WRAP')) {\n            return null;\n        }\n        if (!wrapSet) {\n            wrap = windowWidth();\n            wrapSet = true;\n        }\n        return wrap;\n    };\n    const deferY18nLookupPrefix = '__yargsString__:';\n    self.deferY18nLookup = str => deferY18nLookupPrefix + str;\n    self.help = function help() {\n        if (cachedHelpMessage)\n            return cachedHelpMessage;\n        normalizeAliases();\n        const base$0 = yargs.customScriptName\n            ? yargs.$0\n            : shim.path.basename(yargs.$0);\n        const demandedOptions = yargs.getDemandedOptions();\n        const demandedCommands = yargs.getDemandedCommands();\n        const deprecatedOptions = yargs.getDeprecatedOptions();\n        const groups = yargs.getGroups();\n        const options = yargs.getOptions();\n        let keys = [];\n        keys = keys.concat(Object.keys(descriptions));\n        keys = keys.concat(Object.keys(demandedOptions));\n        keys = keys.concat(Object.keys(demandedCommands));\n        keys = keys.concat(Object.keys(options.default));\n        keys = keys.filter(filterHiddenOptions);\n        keys = Object.keys(keys.reduce((acc, key) => {\n            if (key !== '_')\n                acc[key] = true;\n            return acc;\n        }, {}));\n        const theWrap = self.getWrap();\n        const ui = shim.cliui({\n            width: theWrap,\n            wrap: !!theWrap,\n        });\n        if (!usageDisabled) {\n            if (usages.length) {\n                usages.forEach(usage => {\n                    ui.div({ text: `${usage[0].replace(/\\$0/g, base$0)}` });\n                    if (usage[1]) {\n                        ui.div({ text: `${usage[1]}`, padding: [1, 0, 0, 0] });\n                    }\n                });\n                ui.div();\n            }\n            else if (commands.length) {\n                let u = null;\n                if (demandedCommands._) {\n                    u = `${base$0} <${__('command')}>\\n`;\n                }\n                else {\n                    u = `${base$0} [${__('command')}]\\n`;\n                }\n                ui.div(`${u}`);\n            }\n        }\n        if (commands.length > 1 || (commands.length === 1 && !commands[0][2])) {\n            ui.div(__('Commands:'));\n            const context = yargs.getInternalMethods().getContext();\n            const parentCommands = context.commands.length\n                ? `${context.commands.join(' ')} `\n                : '';\n            if (yargs.getInternalMethods().getParserConfiguration()['sort-commands'] ===\n                true) {\n                commands = commands.sort((a, b) => a[0].localeCompare(b[0]));\n            }\n            const prefix = base$0 ? `${base$0} ` : '';\n            commands.forEach(command => {\n                const commandString = `${prefix}${parentCommands}${command[0].replace(/^\\$0 ?/, '')}`;\n                ui.span({\n                    text: commandString,\n                    padding: [0, 2, 0, 2],\n                    width: maxWidth(commands, theWrap, `${base$0}${parentCommands}`) + 4,\n                }, { text: command[1] });\n                const hints = [];\n                if (command[2])\n                    hints.push(`[${__('default')}]`);\n                if (command[3] && command[3].length) {\n                    hints.push(`[${__('aliases:')} ${command[3].join(', ')}]`);\n                }\n                if (command[4]) {\n                    if (typeof command[4] === 'string') {\n                        hints.push(`[${__('deprecated: %s', command[4])}]`);\n                    }\n                    else {\n                        hints.push(`[${__('deprecated')}]`);\n                    }\n                }\n                if (hints.length) {\n                    ui.div({\n                        text: hints.join(' '),\n                        padding: [0, 0, 0, 2],\n                        align: 'right',\n                    });\n                }\n                else {\n                    ui.div();\n                }\n            });\n            ui.div();\n        }\n        const aliasKeys = (Object.keys(options.alias) || []).concat(Object.keys(yargs.parsed.newAliases) || []);\n        keys = keys.filter(key => !yargs.parsed.newAliases[key] &&\n            aliasKeys.every(alias => (options.alias[alias] || []).indexOf(key) === -1));\n        const defaultGroup = __('Options:');\n        if (!groups[defaultGroup])\n            groups[defaultGroup] = [];\n        addUngroupedKeys(keys, options.alias, groups, defaultGroup);\n        const isLongSwitch = (sw) => /^--/.test(getText(sw));\n        const displayedGroups = Object.keys(groups)\n            .filter(groupName => groups[groupName].length > 0)\n            .map(groupName => {\n            const normalizedKeys = groups[groupName]\n                .filter(filterHiddenOptions)\n                .map(key => {\n                if (aliasKeys.includes(key))\n                    return key;\n                for (let i = 0, aliasKey; (aliasKey = aliasKeys[i]) !== undefined; i++) {\n                    if ((options.alias[aliasKey] || []).includes(key))\n                        return aliasKey;\n                }\n                return key;\n            });\n            return { groupName, normalizedKeys };\n        })\n            .filter(({ normalizedKeys }) => normalizedKeys.length > 0)\n            .map(({ groupName, normalizedKeys }) => {\n            const switches = normalizedKeys.reduce((acc, key) => {\n                acc[key] = [key]\n                    .concat(options.alias[key] || [])\n                    .map(sw => {\n                    if (groupName === self.getPositionalGroupName())\n                        return sw;\n                    else {\n                        return ((/^[0-9]$/.test(sw)\n                            ? options.boolean.includes(key)\n                                ? '-'\n                                : '--'\n                            : sw.length > 1\n                                ? '--'\n                                : '-') + sw);\n                    }\n                })\n                    .sort((sw1, sw2) => isLongSwitch(sw1) === isLongSwitch(sw2)\n                    ? 0\n                    : isLongSwitch(sw1)\n                        ? 1\n                        : -1)\n                    .join(', ');\n                return acc;\n            }, {});\n            return { groupName, normalizedKeys, switches };\n        });\n        const shortSwitchesUsed = displayedGroups\n            .filter(({ groupName }) => groupName !== self.getPositionalGroupName())\n            .some(({ normalizedKeys, switches }) => !normalizedKeys.every(key => isLongSwitch(switches[key])));\n        if (shortSwitchesUsed) {\n            displayedGroups\n                .filter(({ groupName }) => groupName !== self.getPositionalGroupName())\n                .forEach(({ normalizedKeys, switches }) => {\n                normalizedKeys.forEach(key => {\n                    if (isLongSwitch(switches[key])) {\n                        switches[key] = addIndentation(switches[key], '-x, '.length);\n                    }\n                });\n            });\n        }\n        displayedGroups.forEach(({ groupName, normalizedKeys, switches }) => {\n            ui.div(groupName);\n            normalizedKeys.forEach(key => {\n                const kswitch = switches[key];\n                let desc = descriptions[key] || '';\n                let type = null;\n                if (desc.includes(deferY18nLookupPrefix))\n                    desc = __(desc.substring(deferY18nLookupPrefix.length));\n                if (options.boolean.includes(key))\n                    type = `[${__('boolean')}]`;\n                if (options.count.includes(key))\n                    type = `[${__('count')}]`;\n                if (options.string.includes(key))\n                    type = `[${__('string')}]`;\n                if (options.normalize.includes(key))\n                    type = `[${__('string')}]`;\n                if (options.array.includes(key))\n                    type = `[${__('array')}]`;\n                if (options.number.includes(key))\n                    type = `[${__('number')}]`;\n                const deprecatedExtra = (deprecated) => typeof deprecated === 'string'\n                    ? `[${__('deprecated: %s', deprecated)}]`\n                    : `[${__('deprecated')}]`;\n                const extra = [\n                    key in deprecatedOptions\n                        ? deprecatedExtra(deprecatedOptions[key])\n                        : null,\n                    type,\n                    key in demandedOptions ? `[${__('required')}]` : null,\n                    options.choices && options.choices[key]\n                        ? `[${__('choices:')} ${self.stringifiedValues(options.choices[key])}]`\n                        : null,\n                    defaultString(options.default[key], options.defaultDescription[key]),\n                ]\n                    .filter(Boolean)\n                    .join(' ');\n                ui.span({\n                    text: getText(kswitch),\n                    padding: [0, 2, 0, 2 + getIndentation(kswitch)],\n                    width: maxWidth(switches, theWrap) + 4,\n                }, desc);\n                if (extra)\n                    ui.div({ text: extra, padding: [0, 0, 0, 2], align: 'right' });\n                else\n                    ui.div();\n            });\n            ui.div();\n        });\n        if (examples.length) {\n            ui.div(__('Examples:'));\n            examples.forEach(example => {\n                example[0] = example[0].replace(/\\$0/g, base$0);\n            });\n            examples.forEach(example => {\n                if (example[1] === '') {\n                    ui.div({\n                        text: example[0],\n                        padding: [0, 2, 0, 2],\n                    });\n                }\n                else {\n                    ui.div({\n                        text: example[0],\n                        padding: [0, 2, 0, 2],\n                        width: maxWidth(examples, theWrap) + 4,\n                    }, {\n                        text: example[1],\n                    });\n                }\n            });\n            ui.div();\n        }\n        if (epilogs.length > 0) {\n            const e = epilogs\n                .map(epilog => epilog.replace(/\\$0/g, base$0))\n                .join('\\n');\n            ui.div(`${e}\\n`);\n        }\n        return ui.toString().replace(/\\s*$/, '');\n    };\n    function maxWidth(table, theWrap, modifier) {\n        let width = 0;\n        if (!Array.isArray(table)) {\n            table = Object.values(table).map(v => [v]);\n        }\n        table.forEach(v => {\n            width = Math.max(shim.stringWidth(modifier ? `${modifier} ${getText(v[0])}` : getText(v[0])) + getIndentation(v[0]), width);\n        });\n        if (theWrap)\n            width = Math.min(width, parseInt((theWrap * 0.5).toString(), 10));\n        return width;\n    }\n    function normalizeAliases() {\n        const demandedOptions = yargs.getDemandedOptions();\n        const options = yargs.getOptions();\n        (Object.keys(options.alias) || []).forEach(key => {\n            options.alias[key].forEach(alias => {\n                if (descriptions[alias])\n                    self.describe(key, descriptions[alias]);\n                if (alias in demandedOptions)\n                    yargs.demandOption(key, demandedOptions[alias]);\n                if (options.boolean.includes(alias))\n                    yargs.boolean(key);\n                if (options.count.includes(alias))\n                    yargs.count(key);\n                if (options.string.includes(alias))\n                    yargs.string(key);\n                if (options.normalize.includes(alias))\n                    yargs.normalize(key);\n                if (options.array.includes(alias))\n                    yargs.array(key);\n                if (options.number.includes(alias))\n                    yargs.number(key);\n            });\n        });\n    }\n    let cachedHelpMessage;\n    self.cacheHelpMessage = function () {\n        cachedHelpMessage = this.help();\n    };\n    self.clearCachedHelpMessage = function () {\n        cachedHelpMessage = undefined;\n    };\n    self.hasCachedHelpMessage = function () {\n        return !!cachedHelpMessage;\n    };\n    function addUngroupedKeys(keys, aliases, groups, defaultGroup) {\n        let groupedKeys = [];\n        let toCheck = null;\n        Object.keys(groups).forEach(group => {\n            groupedKeys = groupedKeys.concat(groups[group]);\n        });\n        keys.forEach(key => {\n            toCheck = [key].concat(aliases[key]);\n            if (!toCheck.some(k => groupedKeys.indexOf(k) !== -1)) {\n                groups[defaultGroup].push(key);\n            }\n        });\n        return groupedKeys;\n    }\n    function filterHiddenOptions(key) {\n        return (yargs.getOptions().hiddenOptions.indexOf(key) < 0 ||\n            yargs.parsed.argv[yargs.getOptions().showHiddenOpt]);\n    }\n    self.showHelp = (level) => {\n        const logger = yargs.getInternalMethods().getLoggerInstance();\n        if (!level)\n            level = 'error';\n        const emit = typeof level === 'function' ? level : logger[level];\n        emit(self.help());\n    };\n    self.functionDescription = fn => {\n        const description = fn.name\n            ? shim.Parser.decamelize(fn.name, '-')\n            : __('generated-value');\n        return ['(', description, ')'].join('');\n    };\n    self.stringifiedValues = function stringifiedValues(values, separator) {\n        let string = '';\n        const sep = separator || ', ';\n        const array = [].concat(values);\n        if (!values || !array.length)\n            return string;\n        array.forEach(value => {\n            if (string.length)\n                string += sep;\n            string += JSON.stringify(value);\n        });\n        return string;\n    };\n    function defaultString(value, defaultDescription) {\n        let string = `[${__('default:')} `;\n        if (value === undefined && !defaultDescription)\n            return null;\n        if (defaultDescription) {\n            string += defaultDescription;\n        }\n        else {\n            switch (typeof value) {\n                case 'string':\n                    string += `\"${value}\"`;\n                    break;\n                case 'object':\n                    string += JSON.stringify(value);\n                    break;\n                default:\n                    string += value;\n            }\n        }\n        return `${string}]`;\n    }\n    function windowWidth() {\n        const maxWidth = 80;\n        if (shim.process.stdColumns) {\n            return Math.min(maxWidth, shim.process.stdColumns);\n        }\n        else {\n            return maxWidth;\n        }\n    }\n    let version = null;\n    self.version = ver => {\n        version = ver;\n    };\n    self.showVersion = level => {\n        const logger = yargs.getInternalMethods().getLoggerInstance();\n        if (!level)\n            level = 'error';\n        const emit = typeof level === 'function' ? level : logger[level];\n        emit(version);\n    };\n    self.reset = function reset(localLookup) {\n        failMessage = null;\n        failureOutput = false;\n        usages = [];\n        usageDisabled = false;\n        epilogs = [];\n        examples = [];\n        commands = [];\n        descriptions = objFilter(descriptions, k => !localLookup[k]);\n        return self;\n    };\n    const frozens = [];\n    self.freeze = function freeze() {\n        frozens.push({\n            failMessage,\n            failureOutput,\n            usages,\n            usageDisabled,\n            epilogs,\n            examples,\n            commands,\n            descriptions,\n        });\n    };\n    self.unfreeze = function unfreeze(defaultCommand = false) {\n        const frozen = frozens.pop();\n        if (!frozen)\n            return;\n        if (defaultCommand) {\n            descriptions = { ...frozen.descriptions, ...descriptions };\n            commands = [...frozen.commands, ...commands];\n            usages = [...frozen.usages, ...usages];\n            examples = [...frozen.examples, ...examples];\n            epilogs = [...frozen.epilogs, ...epilogs];\n        }\n        else {\n            ({\n                failMessage,\n                failureOutput,\n                usages,\n                usageDisabled,\n                epilogs,\n                examples,\n                commands,\n                descriptions,\n            } = frozen);\n        }\n    };\n    return self;\n}\nfunction isIndentedText(text) {\n    return typeof text === 'object';\n}\nfunction addIndentation(text, indent) {\n    return isIndentedText(text)\n        ? { text: text.text, indentation: text.indentation + indent }\n        : { text, indentation: indent };\n}\nfunction getIndentation(text) {\n    return isIndentedText(text) ? text.indentation : 0;\n}\nfunction getText(text) {\n    return isIndentedText(text) ? text.text : text;\n}\n","export const completionShTemplate = `###-begin-{{app_name}}-completions-###\n#\n# yargs command completion script\n#\n# Installation: {{app_path}} {{completion_command}} >> ~/.bashrc\n#    or {{app_path}} {{completion_command}} >> ~/.bash_profile on OSX.\n#\n_{{app_name}}_yargs_completions()\n{\n    local cur_word args type_list\n\n    cur_word=\"\\${COMP_WORDS[COMP_CWORD]}\"\n    args=(\"\\${COMP_WORDS[@]}\")\n\n    # ask yargs to generate completions.\n    type_list=$({{app_path}} --get-yargs-completions \"\\${args[@]}\")\n\n    COMPREPLY=( $(compgen -W \"\\${type_list}\" -- \\${cur_word}) )\n\n    # if no match was found, fall back to filename completion\n    if [ \\${#COMPREPLY[@]} -eq 0 ]; then\n      COMPREPLY=()\n    fi\n\n    return 0\n}\ncomplete -o bashdefault -o default -F _{{app_name}}_yargs_completions {{app_name}}\n###-end-{{app_name}}-completions-###\n`;\nexport const completionZshTemplate = `#compdef {{app_name}}\n###-begin-{{app_name}}-completions-###\n#\n# yargs command completion script\n#\n# Installation: {{app_path}} {{completion_command}} >> ~/.zshrc\n#    or {{app_path}} {{completion_command}} >> ~/.zprofile on OSX.\n#\n_{{app_name}}_yargs_completions()\n{\n  local reply\n  local si=$IFS\n  IFS=$'\\n' reply=($(COMP_CWORD=\"$((CURRENT-1))\" COMP_LINE=\"$BUFFER\" COMP_POINT=\"$CURSOR\" {{app_path}} --get-yargs-completions \"\\${words[@]}\"))\n  IFS=$si\n  _describe 'values' reply\n}\ncompdef _{{app_name}}_yargs_completions {{app_name}}\n###-end-{{app_name}}-completions-###\n`;\n","import { isCommandBuilderCallback } from './command.js';\nimport { assertNotStrictEqual } from './typings/common-types.js';\nimport * as templates from './completion-templates.js';\nimport { isPromise } from './utils/is-promise.js';\nimport { parseCommand } from './parse-command.js';\nexport class Completion {\n    constructor(yargs, usage, command, shim) {\n        var _a, _b, _c;\n        this.yargs = yargs;\n        this.usage = usage;\n        this.command = command;\n        this.shim = shim;\n        this.completionKey = 'get-yargs-completions';\n        this.aliases = null;\n        this.customCompletionFunction = null;\n        this.indexAfterLastReset = 0;\n        this.zshShell =\n            (_c = (((_a = this.shim.getEnv('SHELL')) === null || _a === void 0 ? void 0 : _a.includes('zsh')) ||\n                ((_b = this.shim.getEnv('ZSH_NAME')) === null || _b === void 0 ? void 0 : _b.includes('zsh')))) !== null && _c !== void 0 ? _c : false;\n    }\n    defaultCompletion(args, argv, current, done) {\n        const handlers = this.command.getCommandHandlers();\n        for (let i = 0, ii = args.length; i < ii; ++i) {\n            if (handlers[args[i]] && handlers[args[i]].builder) {\n                const builder = handlers[args[i]].builder;\n                if (isCommandBuilderCallback(builder)) {\n                    this.indexAfterLastReset = i + 1;\n                    const y = this.yargs.getInternalMethods().reset();\n                    builder(y, true);\n                    return y.argv;\n                }\n            }\n        }\n        const completions = [];\n        this.commandCompletions(completions, args, current);\n        this.optionCompletions(completions, args, argv, current);\n        this.choicesFromOptionsCompletions(completions, args, argv, current);\n        this.choicesFromPositionalsCompletions(completions, args, argv, current);\n        done(null, completions);\n    }\n    commandCompletions(completions, args, current) {\n        const parentCommands = this.yargs\n            .getInternalMethods()\n            .getContext().commands;\n        if (!current.match(/^-/) &&\n            parentCommands[parentCommands.length - 1] !== current &&\n            !this.previousArgHasChoices(args)) {\n            this.usage.getCommands().forEach(usageCommand => {\n                const commandName = parseCommand(usageCommand[0]).cmd;\n                if (args.indexOf(commandName) === -1) {\n                    if (!this.zshShell) {\n                        completions.push(commandName);\n                    }\n                    else {\n                        const desc = usageCommand[1] || '';\n                        completions.push(commandName.replace(/:/g, '\\\\:') + ':' + desc);\n                    }\n                }\n            });\n        }\n    }\n    optionCompletions(completions, args, argv, current) {\n        if ((current.match(/^-/) || (current === '' && completions.length === 0)) &&\n            !this.previousArgHasChoices(args)) {\n            const options = this.yargs.getOptions();\n            const positionalKeys = this.yargs.getGroups()[this.usage.getPositionalGroupName()] || [];\n            Object.keys(options.key).forEach(key => {\n                const negable = !!options.configuration['boolean-negation'] &&\n                    options.boolean.includes(key);\n                const isPositionalKey = positionalKeys.includes(key);\n                if (!isPositionalKey &&\n                    !options.hiddenOptions.includes(key) &&\n                    !this.argsContainKey(args, key, negable)) {\n                    this.completeOptionKey(key, completions, current);\n                    if (negable && !!options.default[key])\n                        this.completeOptionKey(`no-${key}`, completions, current);\n                }\n            });\n        }\n    }\n    choicesFromOptionsCompletions(completions, args, argv, current) {\n        if (this.previousArgHasChoices(args)) {\n            const choices = this.getPreviousArgChoices(args);\n            if (choices && choices.length > 0) {\n                completions.push(...choices.map(c => c.replace(/:/g, '\\\\:')));\n            }\n        }\n    }\n    choicesFromPositionalsCompletions(completions, args, argv, current) {\n        if (current === '' &&\n            completions.length > 0 &&\n            this.previousArgHasChoices(args)) {\n            return;\n        }\n        const positionalKeys = this.yargs.getGroups()[this.usage.getPositionalGroupName()] || [];\n        const offset = Math.max(this.indexAfterLastReset, this.yargs.getInternalMethods().getContext().commands.length +\n            1);\n        const positionalKey = positionalKeys[argv._.length - offset - 1];\n        if (!positionalKey) {\n            return;\n        }\n        const choices = this.yargs.getOptions().choices[positionalKey] || [];\n        for (const choice of choices) {\n            if (choice.startsWith(current)) {\n                completions.push(choice.replace(/:/g, '\\\\:'));\n            }\n        }\n    }\n    getPreviousArgChoices(args) {\n        if (args.length < 1)\n            return;\n        let previousArg = args[args.length - 1];\n        let filter = '';\n        if (!previousArg.startsWith('-') && args.length > 1) {\n            filter = previousArg;\n            previousArg = args[args.length - 2];\n        }\n        if (!previousArg.startsWith('-'))\n            return;\n        const previousArgKey = previousArg.replace(/^-+/, '');\n        const options = this.yargs.getOptions();\n        const possibleAliases = [\n            previousArgKey,\n            ...(this.yargs.getAliases()[previousArgKey] || []),\n        ];\n        let choices;\n        for (const possibleAlias of possibleAliases) {\n            if (Object.prototype.hasOwnProperty.call(options.key, possibleAlias) &&\n                Array.isArray(options.choices[possibleAlias])) {\n                choices = options.choices[possibleAlias];\n                break;\n            }\n        }\n        if (choices) {\n            return choices.filter(choice => !filter || choice.startsWith(filter));\n        }\n    }\n    previousArgHasChoices(args) {\n        const choices = this.getPreviousArgChoices(args);\n        return choices !== undefined && choices.length > 0;\n    }\n    argsContainKey(args, key, negable) {\n        const argsContains = (s) => args.indexOf((/^[^0-9]$/.test(s) ? '-' : '--') + s) !== -1;\n        if (argsContains(key))\n            return true;\n        if (negable && argsContains(`no-${key}`))\n            return true;\n        if (this.aliases) {\n            for (const alias of this.aliases[key]) {\n                if (argsContains(alias))\n                    return true;\n            }\n        }\n        return false;\n    }\n    completeOptionKey(key, completions, current) {\n        const descs = this.usage.getDescriptions();\n        const startsByTwoDashes = (s) => /^--/.test(s);\n        const isShortOption = (s) => /^[^0-9]$/.test(s);\n        const dashes = !startsByTwoDashes(current) && isShortOption(key) ? '-' : '--';\n        if (!this.zshShell) {\n            completions.push(dashes + key);\n        }\n        else {\n            const desc = descs[key] || '';\n            completions.push(dashes +\n                `${key.replace(/:/g, '\\\\:')}:${desc.replace('__yargsString__:', '')}`);\n        }\n    }\n    customCompletion(args, argv, current, done) {\n        assertNotStrictEqual(this.customCompletionFunction, null, this.shim);\n        if (isSyncCompletionFunction(this.customCompletionFunction)) {\n            const result = this.customCompletionFunction(current, argv);\n            if (isPromise(result)) {\n                return result\n                    .then(list => {\n                    this.shim.process.nextTick(() => {\n                        done(null, list);\n                    });\n                })\n                    .catch(err => {\n                    this.shim.process.nextTick(() => {\n                        done(err, undefined);\n                    });\n                });\n            }\n            return done(null, result);\n        }\n        else if (isFallbackCompletionFunction(this.customCompletionFunction)) {\n            return this.customCompletionFunction(current, argv, (onCompleted = done) => this.defaultCompletion(args, argv, current, onCompleted), completions => {\n                done(null, completions);\n            });\n        }\n        else {\n            return this.customCompletionFunction(current, argv, completions => {\n                done(null, completions);\n            });\n        }\n    }\n    getCompletion(args, done) {\n        const current = args.length ? args[args.length - 1] : '';\n        const argv = this.yargs.parse(args, true);\n        const completionFunction = this.customCompletionFunction\n            ? (argv) => this.customCompletion(args, argv, current, done)\n            : (argv) => this.defaultCompletion(args, argv, current, done);\n        return isPromise(argv)\n            ? argv.then(completionFunction)\n            : completionFunction(argv);\n    }\n    generateCompletionScript($0, cmd) {\n        let script = this.zshShell\n            ? templates.completionZshTemplate\n            : templates.completionShTemplate;\n        const name = this.shim.path.basename($0);\n        if ($0.match(/\\.js$/))\n            $0 = `./${$0}`;\n        script = script.replace(/{{app_name}}/g, name);\n        script = script.replace(/{{completion_command}}/g, cmd);\n        return script.replace(/{{app_path}}/g, $0);\n    }\n    registerFunction(fn) {\n        this.customCompletionFunction = fn;\n    }\n    setParsed(parsed) {\n        this.aliases = parsed.aliases;\n    }\n}\nexport function completion(yargs, usage, command, shim) {\n    return new Completion(yargs, usage, command, shim);\n}\nfunction isSyncCompletionFunction(completionFunction) {\n    return completionFunction.length < 3;\n}\nfunction isFallbackCompletionFunction(completionFunction) {\n    return completionFunction.length > 3;\n}\n","export function levenshtein(a, b) {\n    if (a.length === 0)\n        return b.length;\n    if (b.length === 0)\n        return a.length;\n    const matrix = [];\n    let i;\n    for (i = 0; i <= b.length; i++) {\n        matrix[i] = [i];\n    }\n    let j;\n    for (j = 0; j <= a.length; j++) {\n        matrix[0][j] = j;\n    }\n    for (i = 1; i <= b.length; i++) {\n        for (j = 1; j <= a.length; j++) {\n            if (b.charAt(i - 1) === a.charAt(j - 1)) {\n                matrix[i][j] = matrix[i - 1][j - 1];\n            }\n            else {\n                if (i > 1 &&\n                    j > 1 &&\n                    b.charAt(i - 2) === a.charAt(j - 1) &&\n                    b.charAt(i - 1) === a.charAt(j - 2)) {\n                    matrix[i][j] = matrix[i - 2][j - 2] + 1;\n                }\n                else {\n                    matrix[i][j] = Math.min(matrix[i - 1][j - 1] + 1, Math.min(matrix[i][j - 1] + 1, matrix[i - 1][j] + 1));\n                }\n            }\n        }\n    }\n    return matrix[b.length][a.length];\n}\n","import { argsert } from './argsert.js';\nimport { assertNotStrictEqual, } from './typings/common-types.js';\nimport { levenshtein as distance } from './utils/levenshtein.js';\nimport { objFilter } from './utils/obj-filter.js';\nconst specialKeys = ['$0', '--', '_'];\nexport function validation(yargs, usage, shim) {\n    const __ = shim.y18n.__;\n    const __n = shim.y18n.__n;\n    const self = {};\n    self.nonOptionCount = function nonOptionCount(argv) {\n        const demandedCommands = yargs.getDemandedCommands();\n        const positionalCount = argv._.length + (argv['--'] ? argv['--'].length : 0);\n        const _s = positionalCount - yargs.getInternalMethods().getContext().commands.length;\n        if (demandedCommands._ &&\n            (_s < demandedCommands._.min || _s > demandedCommands._.max)) {\n            if (_s < demandedCommands._.min) {\n                if (demandedCommands._.minMsg !== undefined) {\n                    usage.fail(demandedCommands._.minMsg\n                        ? demandedCommands._.minMsg\n                            .replace(/\\$0/g, _s.toString())\n                            .replace(/\\$1/, demandedCommands._.min.toString())\n                        : null);\n                }\n                else {\n                    usage.fail(__n('Not enough non-option arguments: got %s, need at least %s', 'Not enough non-option arguments: got %s, need at least %s', _s, _s.toString(), demandedCommands._.min.toString()));\n                }\n            }\n            else if (_s > demandedCommands._.max) {\n                if (demandedCommands._.maxMsg !== undefined) {\n                    usage.fail(demandedCommands._.maxMsg\n                        ? demandedCommands._.maxMsg\n                            .replace(/\\$0/g, _s.toString())\n                            .replace(/\\$1/, demandedCommands._.max.toString())\n                        : null);\n                }\n                else {\n                    usage.fail(__n('Too many non-option arguments: got %s, maximum of %s', 'Too many non-option arguments: got %s, maximum of %s', _s, _s.toString(), demandedCommands._.max.toString()));\n                }\n            }\n        }\n    };\n    self.positionalCount = function positionalCount(required, observed) {\n        if (observed < required) {\n            usage.fail(__n('Not enough non-option arguments: got %s, need at least %s', 'Not enough non-option arguments: got %s, need at least %s', observed, observed + '', required + ''));\n        }\n    };\n    self.requiredArguments = function requiredArguments(argv, demandedOptions) {\n        let missing = null;\n        for (const key of Object.keys(demandedOptions)) {\n            if (!Object.prototype.hasOwnProperty.call(argv, key) ||\n                typeof argv[key] === 'undefined') {\n                missing = missing || {};\n                missing[key] = demandedOptions[key];\n            }\n        }\n        if (missing) {\n            const customMsgs = [];\n            for (const key of Object.keys(missing)) {\n                const msg = missing[key];\n                if (msg && customMsgs.indexOf(msg) < 0) {\n                    customMsgs.push(msg);\n                }\n            }\n            const customMsg = customMsgs.length ? `\\n${customMsgs.join('\\n')}` : '';\n            usage.fail(__n('Missing required argument: %s', 'Missing required arguments: %s', Object.keys(missing).length, Object.keys(missing).join(', ') + customMsg));\n        }\n    };\n    self.unknownArguments = function unknownArguments(argv, aliases, positionalMap, isDefaultCommand, checkPositionals = true) {\n        var _a;\n        const commandKeys = yargs\n            .getInternalMethods()\n            .getCommandInstance()\n            .getCommands();\n        const unknown = [];\n        const currentContext = yargs.getInternalMethods().getContext();\n        Object.keys(argv).forEach(key => {\n            if (!specialKeys.includes(key) &&\n                !Object.prototype.hasOwnProperty.call(positionalMap, key) &&\n                !Object.prototype.hasOwnProperty.call(yargs.getInternalMethods().getParseContext(), key) &&\n                !self.isValidAndSomeAliasIsNotNew(key, aliases)) {\n                unknown.push(key);\n            }\n        });\n        if (checkPositionals &&\n            (currentContext.commands.length > 0 ||\n                commandKeys.length > 0 ||\n                isDefaultCommand)) {\n            argv._.slice(currentContext.commands.length).forEach(key => {\n                if (!commandKeys.includes('' + key)) {\n                    unknown.push('' + key);\n                }\n            });\n        }\n        if (checkPositionals) {\n            const demandedCommands = yargs.getDemandedCommands();\n            const maxNonOptDemanded = ((_a = demandedCommands._) === null || _a === void 0 ? void 0 : _a.max) || 0;\n            const expected = currentContext.commands.length + maxNonOptDemanded;\n            if (expected < argv._.length) {\n                argv._.slice(expected).forEach(key => {\n                    key = String(key);\n                    if (!currentContext.commands.includes(key) &&\n                        !unknown.includes(key)) {\n                        unknown.push(key);\n                    }\n                });\n            }\n        }\n        if (unknown.length) {\n            usage.fail(__n('Unknown argument: %s', 'Unknown arguments: %s', unknown.length, unknown.map(s => (s.trim() ? s : `\"${s}\"`)).join(', ')));\n        }\n    };\n    self.unknownCommands = function unknownCommands(argv) {\n        const commandKeys = yargs\n            .getInternalMethods()\n            .getCommandInstance()\n            .getCommands();\n        const unknown = [];\n        const currentContext = yargs.getInternalMethods().getContext();\n        if (currentContext.commands.length > 0 || commandKeys.length > 0) {\n            argv._.slice(currentContext.commands.length).forEach(key => {\n                if (!commandKeys.includes('' + key)) {\n                    unknown.push('' + key);\n                }\n            });\n        }\n        if (unknown.length > 0) {\n            usage.fail(__n('Unknown command: %s', 'Unknown commands: %s', unknown.length, unknown.join(', ')));\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    self.isValidAndSomeAliasIsNotNew = function isValidAndSomeAliasIsNotNew(key, aliases) {\n        if (!Object.prototype.hasOwnProperty.call(aliases, key)) {\n            return false;\n        }\n        const newAliases = yargs.parsed.newAliases;\n        return [key, ...aliases[key]].some(a => !Object.prototype.hasOwnProperty.call(newAliases, a) || !newAliases[key]);\n    };\n    self.limitedChoices = function limitedChoices(argv) {\n        const options = yargs.getOptions();\n        const invalid = {};\n        if (!Object.keys(options.choices).length)\n            return;\n        Object.keys(argv).forEach(key => {\n            if (specialKeys.indexOf(key) === -1 &&\n                Object.prototype.hasOwnProperty.call(options.choices, key)) {\n                [].concat(argv[key]).forEach(value => {\n                    if (options.choices[key].indexOf(value) === -1 &&\n                        value !== undefined) {\n                        invalid[key] = (invalid[key] || []).concat(value);\n                    }\n                });\n            }\n        });\n        const invalidKeys = Object.keys(invalid);\n        if (!invalidKeys.length)\n            return;\n        let msg = __('Invalid values:');\n        invalidKeys.forEach(key => {\n            msg += `\\n  ${__('Argument: %s, Given: %s, Choices: %s', key, usage.stringifiedValues(invalid[key]), usage.stringifiedValues(options.choices[key]))}`;\n        });\n        usage.fail(msg);\n    };\n    let implied = {};\n    self.implies = function implies(key, value) {\n        argsert('<string|object> [array|number|string]', [key, value], arguments.length);\n        if (typeof key === 'object') {\n            Object.keys(key).forEach(k => {\n                self.implies(k, key[k]);\n            });\n        }\n        else {\n            yargs.global(key);\n            if (!implied[key]) {\n                implied[key] = [];\n            }\n            if (Array.isArray(value)) {\n                value.forEach(i => self.implies(key, i));\n            }\n            else {\n                assertNotStrictEqual(value, undefined, shim);\n                implied[key].push(value);\n            }\n        }\n    };\n    self.getImplied = function getImplied() {\n        return implied;\n    };\n    function keyExists(argv, val) {\n        const num = Number(val);\n        val = isNaN(num) ? val : num;\n        if (typeof val === 'number') {\n            val = argv._.length >= val;\n        }\n        else if (val.match(/^--no-.+/)) {\n            val = val.match(/^--no-(.+)/)[1];\n            val = !Object.prototype.hasOwnProperty.call(argv, val);\n        }\n        else {\n            val = Object.prototype.hasOwnProperty.call(argv, val);\n        }\n        return val;\n    }\n    self.implications = function implications(argv) {\n        const implyFail = [];\n        Object.keys(implied).forEach(key => {\n            const origKey = key;\n            (implied[key] || []).forEach(value => {\n                let key = origKey;\n                const origValue = value;\n                key = keyExists(argv, key);\n                value = keyExists(argv, value);\n                if (key && !value) {\n                    implyFail.push(` ${origKey} -> ${origValue}`);\n                }\n            });\n        });\n        if (implyFail.length) {\n            let msg = `${__('Implications failed:')}\\n`;\n            implyFail.forEach(value => {\n                msg += value;\n            });\n            usage.fail(msg);\n        }\n    };\n    let conflicting = {};\n    self.conflicts = function conflicts(key, value) {\n        argsert('<string|object> [array|string]', [key, value], arguments.length);\n        if (typeof key === 'object') {\n            Object.keys(key).forEach(k => {\n                self.conflicts(k, key[k]);\n            });\n        }\n        else {\n            yargs.global(key);\n            if (!conflicting[key]) {\n                conflicting[key] = [];\n            }\n            if (Array.isArray(value)) {\n                value.forEach(i => self.conflicts(key, i));\n            }\n            else {\n                conflicting[key].push(value);\n            }\n        }\n    };\n    self.getConflicting = () => conflicting;\n    self.conflicting = function conflictingFn(argv) {\n        Object.keys(argv).forEach(key => {\n            if (conflicting[key]) {\n                conflicting[key].forEach(value => {\n                    if (value && argv[key] !== undefined && argv[value] !== undefined) {\n                        usage.fail(__('Arguments %s and %s are mutually exclusive', key, value));\n                    }\n                });\n            }\n        });\n        if (yargs.getInternalMethods().getParserConfiguration()['strip-dashed']) {\n            Object.keys(conflicting).forEach(key => {\n                conflicting[key].forEach(value => {\n                    if (value &&\n                        argv[shim.Parser.camelCase(key)] !== undefined &&\n                        argv[shim.Parser.camelCase(value)] !== undefined) {\n                        usage.fail(__('Arguments %s and %s are mutually exclusive', key, value));\n                    }\n                });\n            });\n        }\n    };\n    self.recommendCommands = function recommendCommands(cmd, potentialCommands) {\n        const threshold = 3;\n        potentialCommands = potentialCommands.sort((a, b) => b.length - a.length);\n        let recommended = null;\n        let bestDistance = Infinity;\n        for (let i = 0, candidate; (candidate = potentialCommands[i]) !== undefined; i++) {\n            const d = distance(cmd, candidate);\n            if (d <= threshold && d < bestDistance) {\n                bestDistance = d;\n                recommended = candidate;\n            }\n        }\n        if (recommended)\n            usage.fail(__('Did you mean %s?', recommended));\n    };\n    self.reset = function reset(localLookup) {\n        implied = objFilter(implied, k => !localLookup[k]);\n        conflicting = objFilter(conflicting, k => !localLookup[k]);\n        return self;\n    };\n    const frozens = [];\n    self.freeze = function freeze() {\n        frozens.push({\n            implied,\n            conflicting,\n        });\n    };\n    self.unfreeze = function unfreeze() {\n        const frozen = frozens.pop();\n        assertNotStrictEqual(frozen, undefined, shim);\n        ({ implied, conflicting } = frozen);\n    };\n    return self;\n}\n","import { YError } from '../yerror.js';\nlet previouslyVisitedConfigs = [];\nlet shim;\nexport function applyExtends(config, cwd, mergeExtends, _shim) {\n    shim = _shim;\n    let defaultConfig = {};\n    if (Object.prototype.hasOwnProperty.call(config, 'extends')) {\n        if (typeof config.extends !== 'string')\n            return defaultConfig;\n        const isPath = /\\.json|\\..*rc$/.test(config.extends);\n        let pathToDefault = null;\n        if (!isPath) {\n            try {\n                pathToDefault = require.resolve(config.extends);\n            }\n            catch (_err) {\n                return config;\n            }\n        }\n        else {\n            pathToDefault = getPathToDefaultConfig(cwd, config.extends);\n        }\n        checkForCircularExtends(pathToDefault);\n        previouslyVisitedConfigs.push(pathToDefault);\n        defaultConfig = isPath\n            ? JSON.parse(shim.readFileSync(pathToDefault, 'utf8'))\n            : require(config.extends);\n        delete config.extends;\n        defaultConfig = applyExtends(defaultConfig, shim.path.dirname(pathToDefault), mergeExtends, shim);\n    }\n    previouslyVisitedConfigs = [];\n    return mergeExtends\n        ? mergeDeep(defaultConfig, config)\n        : Object.assign({}, defaultConfig, config);\n}\nfunction checkForCircularExtends(cfgPath) {\n    if (previouslyVisitedConfigs.indexOf(cfgPath) > -1) {\n        throw new YError(`Circular extended configurations: '${cfgPath}'.`);\n    }\n}\nfunction getPathToDefaultConfig(cwd, pathToExtend) {\n    return shim.path.resolve(cwd, pathToExtend);\n}\nfunction mergeDeep(config1, config2) {\n    const target = {};\n    function isObject(obj) {\n        return obj && typeof obj === 'object' && !Array.isArray(obj);\n    }\n    Object.assign(target, config1);\n    for (const key of Object.keys(config2)) {\n        if (isObject(config2[key]) && isObject(target[key])) {\n            target[key] = mergeDeep(config1[key], config2[key]);\n        }\n        else {\n            target[key] = config2[key];\n        }\n    }\n    return target;\n}\n","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _YargsInstance_command, _YargsInstance_cwd, _YargsInstance_context, _YargsInstance_completion, _YargsInstance_completionCommand, _YargsInstance_defaultShowHiddenOpt, _YargsInstance_exitError, _YargsInstance_detectLocale, _YargsInstance_emittedWarnings, _YargsInstance_exitProcess, _YargsInstance_frozens, _YargsInstance_globalMiddleware, _YargsInstance_groups, _YargsInstance_hasOutput, _YargsInstance_helpOpt, _YargsInstance_isGlobalContext, _YargsInstance_logger, _YargsInstance_output, _YargsInstance_options, _YargsInstance_parentRequire, _YargsInstance_parserConfig, _YargsInstance_parseFn, _YargsInstance_parseContext, _YargsInstance_pkgs, _YargsInstance_preservedGroups, _YargsInstance_processArgs, _YargsInstance_recommendCommands, _YargsInstance_shim, _YargsInstance_strict, _YargsInstance_strictCommands, _YargsInstance_strictOptions, _YargsInstance_usage, _YargsInstance_versionOpt, _YargsInstance_validation;\nimport { command as Command, } from './command.js';\nimport { assertNotStrictEqual, assertSingleKey, objectKeys, } from './typings/common-types.js';\nimport { YError } from './yerror.js';\nimport { usage as Usage } from './usage.js';\nimport { argsert } from './argsert.js';\nimport { completion as Completion, } from './completion.js';\nimport { validation as Validation, } from './validation.js';\nimport { objFilter } from './utils/obj-filter.js';\nimport { applyExtends } from './utils/apply-extends.js';\nimport { applyMiddleware, GlobalMiddleware, } from './middleware.js';\nimport { isPromise } from './utils/is-promise.js';\nimport { maybeAsyncResult } from './utils/maybe-async-result.js';\nimport setBlocking from './utils/set-blocking.js';\nexport function YargsFactory(_shim) {\n    return (processArgs = [], cwd = _shim.process.cwd(), parentRequire) => {\n        const yargs = new YargsInstance(processArgs, cwd, parentRequire, _shim);\n        Object.defineProperty(yargs, 'argv', {\n            get: () => {\n                return yargs.parse();\n            },\n            enumerable: true,\n        });\n        yargs.help();\n        yargs.version();\n        return yargs;\n    };\n}\nconst kCopyDoubleDash = Symbol('copyDoubleDash');\nconst kCreateLogger = Symbol('copyDoubleDash');\nconst kDeleteFromParserHintObject = Symbol('deleteFromParserHintObject');\nconst kEmitWarning = Symbol('emitWarning');\nconst kFreeze = Symbol('freeze');\nconst kGetDollarZero = Symbol('getDollarZero');\nconst kGetParserConfiguration = Symbol('getParserConfiguration');\nconst kGuessLocale = Symbol('guessLocale');\nconst kGuessVersion = Symbol('guessVersion');\nconst kParsePositionalNumbers = Symbol('parsePositionalNumbers');\nconst kPkgUp = Symbol('pkgUp');\nconst kPopulateParserHintArray = Symbol('populateParserHintArray');\nconst kPopulateParserHintSingleValueDictionary = Symbol('populateParserHintSingleValueDictionary');\nconst kPopulateParserHintArrayDictionary = Symbol('populateParserHintArrayDictionary');\nconst kPopulateParserHintDictionary = Symbol('populateParserHintDictionary');\nconst kSanitizeKey = Symbol('sanitizeKey');\nconst kSetKey = Symbol('setKey');\nconst kUnfreeze = Symbol('unfreeze');\nconst kValidateAsync = Symbol('validateAsync');\nconst kGetCommandInstance = Symbol('getCommandInstance');\nconst kGetContext = Symbol('getContext');\nconst kGetHasOutput = Symbol('getHasOutput');\nconst kGetLoggerInstance = Symbol('getLoggerInstance');\nconst kGetParseContext = Symbol('getParseContext');\nconst kGetUsageInstance = Symbol('getUsageInstance');\nconst kGetValidationInstance = Symbol('getValidationInstance');\nconst kHasParseCallback = Symbol('hasParseCallback');\nconst kIsGlobalContext = Symbol('isGlobalContext');\nconst kPostProcess = Symbol('postProcess');\nconst kRebase = Symbol('rebase');\nconst kReset = Symbol('reset');\nconst kRunYargsParserAndExecuteCommands = Symbol('runYargsParserAndExecuteCommands');\nconst kRunValidation = Symbol('runValidation');\nconst kSetHasOutput = Symbol('setHasOutput');\nconst kTrackManuallySetKeys = Symbol('kTrackManuallySetKeys');\nexport class YargsInstance {\n    constructor(processArgs = [], cwd, parentRequire, shim) {\n        this.customScriptName = false;\n        this.parsed = false;\n        _YargsInstance_command.set(this, void 0);\n        _YargsInstance_cwd.set(this, void 0);\n        _YargsInstance_context.set(this, { commands: [], fullCommands: [] });\n        _YargsInstance_completion.set(this, null);\n        _YargsInstance_completionCommand.set(this, null);\n        _YargsInstance_defaultShowHiddenOpt.set(this, 'show-hidden');\n        _YargsInstance_exitError.set(this, null);\n        _YargsInstance_detectLocale.set(this, true);\n        _YargsInstance_emittedWarnings.set(this, {});\n        _YargsInstance_exitProcess.set(this, true);\n        _YargsInstance_frozens.set(this, []);\n        _YargsInstance_globalMiddleware.set(this, void 0);\n        _YargsInstance_groups.set(this, {});\n        _YargsInstance_hasOutput.set(this, false);\n        _YargsInstance_helpOpt.set(this, null);\n        _YargsInstance_isGlobalContext.set(this, true);\n        _YargsInstance_logger.set(this, void 0);\n        _YargsInstance_output.set(this, '');\n        _YargsInstance_options.set(this, void 0);\n        _YargsInstance_parentRequire.set(this, void 0);\n        _YargsInstance_parserConfig.set(this, {});\n        _YargsInstance_parseFn.set(this, null);\n        _YargsInstance_parseContext.set(this, null);\n        _YargsInstance_pkgs.set(this, {});\n        _YargsInstance_preservedGroups.set(this, {});\n        _YargsInstance_processArgs.set(this, void 0);\n        _YargsInstance_recommendCommands.set(this, false);\n        _YargsInstance_shim.set(this, void 0);\n        _YargsInstance_strict.set(this, false);\n        _YargsInstance_strictCommands.set(this, false);\n        _YargsInstance_strictOptions.set(this, false);\n        _YargsInstance_usage.set(this, void 0);\n        _YargsInstance_versionOpt.set(this, null);\n        _YargsInstance_validation.set(this, void 0);\n        __classPrivateFieldSet(this, _YargsInstance_shim, shim, \"f\");\n        __classPrivateFieldSet(this, _YargsInstance_processArgs, processArgs, \"f\");\n        __classPrivateFieldSet(this, _YargsInstance_cwd, cwd, \"f\");\n        __classPrivateFieldSet(this, _YargsInstance_parentRequire, parentRequire, \"f\");\n        __classPrivateFieldSet(this, _YargsInstance_globalMiddleware, new GlobalMiddleware(this), \"f\");\n        this.$0 = this[kGetDollarZero]();\n        this[kReset]();\n        __classPrivateFieldSet(this, _YargsInstance_command, __classPrivateFieldGet(this, _YargsInstance_command, \"f\"), \"f\");\n        __classPrivateFieldSet(this, _YargsInstance_usage, __classPrivateFieldGet(this, _YargsInstance_usage, \"f\"), \"f\");\n        __classPrivateFieldSet(this, _YargsInstance_validation, __classPrivateFieldGet(this, _YargsInstance_validation, \"f\"), \"f\");\n        __classPrivateFieldSet(this, _YargsInstance_options, __classPrivateFieldGet(this, _YargsInstance_options, \"f\"), \"f\");\n        __classPrivateFieldGet(this, _YargsInstance_options, \"f\").showHiddenOpt = __classPrivateFieldGet(this, _YargsInstance_defaultShowHiddenOpt, \"f\");\n        __classPrivateFieldSet(this, _YargsInstance_logger, this[kCreateLogger](), \"f\");\n    }\n    addHelpOpt(opt, msg) {\n        const defaultHelpOpt = 'help';\n        argsert('[string|boolean] [string]', [opt, msg], arguments.length);\n        if (__classPrivateFieldGet(this, _YargsInstance_helpOpt, \"f\")) {\n            this[kDeleteFromParserHintObject](__classPrivateFieldGet(this, _YargsInstance_helpOpt, \"f\"));\n            __classPrivateFieldSet(this, _YargsInstance_helpOpt, null, \"f\");\n        }\n        if (opt === false && msg === undefined)\n            return this;\n        __classPrivateFieldSet(this, _YargsInstance_helpOpt, typeof opt === 'string' ? opt : defaultHelpOpt, \"f\");\n        this.boolean(__classPrivateFieldGet(this, _YargsInstance_helpOpt, \"f\"));\n        this.describe(__classPrivateFieldGet(this, _YargsInstance_helpOpt, \"f\"), msg || __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").deferY18nLookup('Show help'));\n        return this;\n    }\n    help(opt, msg) {\n        return this.addHelpOpt(opt, msg);\n    }\n    addShowHiddenOpt(opt, msg) {\n        argsert('[string|boolean] [string]', [opt, msg], arguments.length);\n        if (opt === false && msg === undefined)\n            return this;\n        const showHiddenOpt = typeof opt === 'string' ? opt : __classPrivateFieldGet(this, _YargsInstance_defaultShowHiddenOpt, \"f\");\n        this.boolean(showHiddenOpt);\n        this.describe(showHiddenOpt, msg || __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").deferY18nLookup('Show hidden options'));\n        __classPrivateFieldGet(this, _YargsInstance_options, \"f\").showHiddenOpt = showHiddenOpt;\n        return this;\n    }\n    showHidden(opt, msg) {\n        return this.addShowHiddenOpt(opt, msg);\n    }\n    alias(key, value) {\n        argsert('<object|string|array> [string|array]', [key, value], arguments.length);\n        this[kPopulateParserHintArrayDictionary](this.alias.bind(this), 'alias', key, value);\n        return this;\n    }\n    array(keys) {\n        argsert('<array|string>', [keys], arguments.length);\n        this[kPopulateParserHintArray]('array', keys);\n        this[kTrackManuallySetKeys](keys);\n        return this;\n    }\n    boolean(keys) {\n        argsert('<array|string>', [keys], arguments.length);\n        this[kPopulateParserHintArray]('boolean', keys);\n        this[kTrackManuallySetKeys](keys);\n        return this;\n    }\n    check(f, global) {\n        argsert('<function> [boolean]', [f, global], arguments.length);\n        this.middleware((argv, _yargs) => {\n            return maybeAsyncResult(() => {\n                return f(argv, _yargs.getOptions());\n            }, (result) => {\n                if (!result) {\n                    __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").fail(__classPrivateFieldGet(this, _YargsInstance_shim, \"f\").y18n.__('Argument check failed: %s', f.toString()));\n                }\n                else if (typeof result === 'string' || result instanceof Error) {\n                    __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").fail(result.toString(), result);\n                }\n                return argv;\n            }, (err) => {\n                __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").fail(err.message ? err.message : err.toString(), err);\n                return argv;\n            });\n        }, false, global);\n        return this;\n    }\n    choices(key, value) {\n        argsert('<object|string|array> [string|array]', [key, value], arguments.length);\n        this[kPopulateParserHintArrayDictionary](this.choices.bind(this), 'choices', key, value);\n        return this;\n    }\n    coerce(keys, value) {\n        argsert('<object|string|array> [function]', [keys, value], arguments.length);\n        if (Array.isArray(keys)) {\n            if (!value) {\n                throw new YError('coerce callback must be provided');\n            }\n            for (const key of keys) {\n                this.coerce(key, value);\n            }\n            return this;\n        }\n        else if (typeof keys === 'object') {\n            for (const key of Object.keys(keys)) {\n                this.coerce(key, keys[key]);\n            }\n            return this;\n        }\n        if (!value) {\n            throw new YError('coerce callback must be provided');\n        }\n        __classPrivateFieldGet(this, _YargsInstance_options, \"f\").key[keys] = true;\n        __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, \"f\").addCoerceMiddleware((argv, yargs) => {\n            let aliases;\n            const shouldCoerce = Object.prototype.hasOwnProperty.call(argv, keys);\n            if (!shouldCoerce) {\n                return argv;\n            }\n            return maybeAsyncResult(() => {\n                aliases = yargs.getAliases();\n                return value(argv[keys]);\n            }, (result) => {\n                argv[keys] = result;\n                const stripAliased = yargs\n                    .getInternalMethods()\n                    .getParserConfiguration()['strip-aliased'];\n                if (aliases[keys] && stripAliased !== true) {\n                    for (const alias of aliases[keys]) {\n                        argv[alias] = result;\n                    }\n                }\n                return argv;\n            }, (err) => {\n                throw new YError(err.message);\n            });\n        }, keys);\n        return this;\n    }\n    conflicts(key1, key2) {\n        argsert('<string|object> [string|array]', [key1, key2], arguments.length);\n        __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").conflicts(key1, key2);\n        return this;\n    }\n    config(key = 'config', msg, parseFn) {\n        argsert('[object|string] [string|function] [function]', [key, msg, parseFn], arguments.length);\n        if (typeof key === 'object' && !Array.isArray(key)) {\n            key = applyExtends(key, __classPrivateFieldGet(this, _YargsInstance_cwd, \"f\"), this[kGetParserConfiguration]()['deep-merge-config'] || false, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\"));\n            __classPrivateFieldGet(this, _YargsInstance_options, \"f\").configObjects = (__classPrivateFieldGet(this, _YargsInstance_options, \"f\").configObjects || []).concat(key);\n            return this;\n        }\n        if (typeof msg === 'function') {\n            parseFn = msg;\n            msg = undefined;\n        }\n        this.describe(key, msg || __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").deferY18nLookup('Path to JSON config file'));\n        (Array.isArray(key) ? key : [key]).forEach(k => {\n            __classPrivateFieldGet(this, _YargsInstance_options, \"f\").config[k] = parseFn || true;\n        });\n        return this;\n    }\n    completion(cmd, desc, fn) {\n        argsert('[string] [string|boolean|function] [function]', [cmd, desc, fn], arguments.length);\n        if (typeof desc === 'function') {\n            fn = desc;\n            desc = undefined;\n        }\n        __classPrivateFieldSet(this, _YargsInstance_completionCommand, cmd || __classPrivateFieldGet(this, _YargsInstance_completionCommand, \"f\") || 'completion', \"f\");\n        if (!desc && desc !== false) {\n            desc = 'generate completion script';\n        }\n        this.command(__classPrivateFieldGet(this, _YargsInstance_completionCommand, \"f\"), desc);\n        if (fn)\n            __classPrivateFieldGet(this, _YargsInstance_completion, \"f\").registerFunction(fn);\n        return this;\n    }\n    command(cmd, description, builder, handler, middlewares, deprecated) {\n        argsert('<string|array|object> [string|boolean] [function|object] [function] [array] [boolean|string]', [cmd, description, builder, handler, middlewares, deprecated], arguments.length);\n        __classPrivateFieldGet(this, _YargsInstance_command, \"f\").addHandler(cmd, description, builder, handler, middlewares, deprecated);\n        return this;\n    }\n    commands(cmd, description, builder, handler, middlewares, deprecated) {\n        return this.command(cmd, description, builder, handler, middlewares, deprecated);\n    }\n    commandDir(dir, opts) {\n        argsert('<string> [object]', [dir, opts], arguments.length);\n        const req = __classPrivateFieldGet(this, _YargsInstance_parentRequire, \"f\") || __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").require;\n        __classPrivateFieldGet(this, _YargsInstance_command, \"f\").addDirectory(dir, req, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").getCallerFile(), opts);\n        return this;\n    }\n    count(keys) {\n        argsert('<array|string>', [keys], arguments.length);\n        this[kPopulateParserHintArray]('count', keys);\n        this[kTrackManuallySetKeys](keys);\n        return this;\n    }\n    default(key, value, defaultDescription) {\n        argsert('<object|string|array> [*] [string]', [key, value, defaultDescription], arguments.length);\n        if (defaultDescription) {\n            assertSingleKey(key, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\"));\n            __classPrivateFieldGet(this, _YargsInstance_options, \"f\").defaultDescription[key] = defaultDescription;\n        }\n        if (typeof value === 'function') {\n            assertSingleKey(key, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\"));\n            if (!__classPrivateFieldGet(this, _YargsInstance_options, \"f\").defaultDescription[key])\n                __classPrivateFieldGet(this, _YargsInstance_options, \"f\").defaultDescription[key] =\n                    __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").functionDescription(value);\n            value = value.call();\n        }\n        this[kPopulateParserHintSingleValueDictionary](this.default.bind(this), 'default', key, value);\n        return this;\n    }\n    defaults(key, value, defaultDescription) {\n        return this.default(key, value, defaultDescription);\n    }\n    demandCommand(min = 1, max, minMsg, maxMsg) {\n        argsert('[number] [number|string] [string|null|undefined] [string|null|undefined]', [min, max, minMsg, maxMsg], arguments.length);\n        if (typeof max !== 'number') {\n            minMsg = max;\n            max = Infinity;\n        }\n        this.global('_', false);\n        __classPrivateFieldGet(this, _YargsInstance_options, \"f\").demandedCommands._ = {\n            min,\n            max,\n            minMsg,\n            maxMsg,\n        };\n        return this;\n    }\n    demand(keys, max, msg) {\n        if (Array.isArray(max)) {\n            max.forEach(key => {\n                assertNotStrictEqual(msg, true, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\"));\n                this.demandOption(key, msg);\n            });\n            max = Infinity;\n        }\n        else if (typeof max !== 'number') {\n            msg = max;\n            max = Infinity;\n        }\n        if (typeof keys === 'number') {\n            assertNotStrictEqual(msg, true, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\"));\n            this.demandCommand(keys, max, msg, msg);\n        }\n        else if (Array.isArray(keys)) {\n            keys.forEach(key => {\n                assertNotStrictEqual(msg, true, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\"));\n                this.demandOption(key, msg);\n            });\n        }\n        else {\n            if (typeof msg === 'string') {\n                this.demandOption(keys, msg);\n            }\n            else if (msg === true || typeof msg === 'undefined') {\n                this.demandOption(keys);\n            }\n        }\n        return this;\n    }\n    demandOption(keys, msg) {\n        argsert('<object|string|array> [string]', [keys, msg], arguments.length);\n        this[kPopulateParserHintSingleValueDictionary](this.demandOption.bind(this), 'demandedOptions', keys, msg);\n        return this;\n    }\n    deprecateOption(option, message) {\n        argsert('<string> [string|boolean]', [option, message], arguments.length);\n        __classPrivateFieldGet(this, _YargsInstance_options, \"f\").deprecatedOptions[option] = message;\n        return this;\n    }\n    describe(keys, description) {\n        argsert('<object|string|array> [string]', [keys, description], arguments.length);\n        this[kSetKey](keys, true);\n        __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").describe(keys, description);\n        return this;\n    }\n    detectLocale(detect) {\n        argsert('<boolean>', [detect], arguments.length);\n        __classPrivateFieldSet(this, _YargsInstance_detectLocale, detect, \"f\");\n        return this;\n    }\n    env(prefix) {\n        argsert('[string|boolean]', [prefix], arguments.length);\n        if (prefix === false)\n            delete __classPrivateFieldGet(this, _YargsInstance_options, \"f\").envPrefix;\n        else\n            __classPrivateFieldGet(this, _YargsInstance_options, \"f\").envPrefix = prefix || '';\n        return this;\n    }\n    epilogue(msg) {\n        argsert('<string>', [msg], arguments.length);\n        __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").epilog(msg);\n        return this;\n    }\n    epilog(msg) {\n        return this.epilogue(msg);\n    }\n    example(cmd, description) {\n        argsert('<string|array> [string]', [cmd, description], arguments.length);\n        if (Array.isArray(cmd)) {\n            cmd.forEach(exampleParams => this.example(...exampleParams));\n        }\n        else {\n            __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").example(cmd, description);\n        }\n        return this;\n    }\n    exit(code, err) {\n        __classPrivateFieldSet(this, _YargsInstance_hasOutput, true, \"f\");\n        __classPrivateFieldSet(this, _YargsInstance_exitError, err, \"f\");\n        if (__classPrivateFieldGet(this, _YargsInstance_exitProcess, \"f\"))\n            __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").process.exit(code);\n    }\n    exitProcess(enabled = true) {\n        argsert('[boolean]', [enabled], arguments.length);\n        __classPrivateFieldSet(this, _YargsInstance_exitProcess, enabled, \"f\");\n        return this;\n    }\n    fail(f) {\n        argsert('<function|boolean>', [f], arguments.length);\n        if (typeof f === 'boolean' && f !== false) {\n            throw new YError(\"Invalid first argument. Expected function or boolean 'false'\");\n        }\n        __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").failFn(f);\n        return this;\n    }\n    getAliases() {\n        return this.parsed ? this.parsed.aliases : {};\n    }\n    async getCompletion(args, done) {\n        argsert('<array> [function]', [args, done], arguments.length);\n        if (!done) {\n            return new Promise((resolve, reject) => {\n                __classPrivateFieldGet(this, _YargsInstance_completion, \"f\").getCompletion(args, (err, completions) => {\n                    if (err)\n                        reject(err);\n                    else\n                        resolve(completions);\n                });\n            });\n        }\n        else {\n            return __classPrivateFieldGet(this, _YargsInstance_completion, \"f\").getCompletion(args, done);\n        }\n    }\n    getDemandedOptions() {\n        argsert([], 0);\n        return __classPrivateFieldGet(this, _YargsInstance_options, \"f\").demandedOptions;\n    }\n    getDemandedCommands() {\n        argsert([], 0);\n        return __classPrivateFieldGet(this, _YargsInstance_options, \"f\").demandedCommands;\n    }\n    getDeprecatedOptions() {\n        argsert([], 0);\n        return __classPrivateFieldGet(this, _YargsInstance_options, \"f\").deprecatedOptions;\n    }\n    getDetectLocale() {\n        return __classPrivateFieldGet(this, _YargsInstance_detectLocale, \"f\");\n    }\n    getExitProcess() {\n        return __classPrivateFieldGet(this, _YargsInstance_exitProcess, \"f\");\n    }\n    getGroups() {\n        return Object.assign({}, __classPrivateFieldGet(this, _YargsInstance_groups, \"f\"), __classPrivateFieldGet(this, _YargsInstance_preservedGroups, \"f\"));\n    }\n    getHelp() {\n        __classPrivateFieldSet(this, _YargsInstance_hasOutput, true, \"f\");\n        if (!__classPrivateFieldGet(this, _YargsInstance_usage, \"f\").hasCachedHelpMessage()) {\n            if (!this.parsed) {\n                const parse = this[kRunYargsParserAndExecuteCommands](__classPrivateFieldGet(this, _YargsInstance_processArgs, \"f\"), undefined, undefined, 0, true);\n                if (isPromise(parse)) {\n                    return parse.then(() => {\n                        return __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").help();\n                    });\n                }\n            }\n            const builderResponse = __classPrivateFieldGet(this, _YargsInstance_command, \"f\").runDefaultBuilderOn(this);\n            if (isPromise(builderResponse)) {\n                return builderResponse.then(() => {\n                    return __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").help();\n                });\n            }\n        }\n        return Promise.resolve(__classPrivateFieldGet(this, _YargsInstance_usage, \"f\").help());\n    }\n    getOptions() {\n        return __classPrivateFieldGet(this, _YargsInstance_options, \"f\");\n    }\n    getStrict() {\n        return __classPrivateFieldGet(this, _YargsInstance_strict, \"f\");\n    }\n    getStrictCommands() {\n        return __classPrivateFieldGet(this, _YargsInstance_strictCommands, \"f\");\n    }\n    getStrictOptions() {\n        return __classPrivateFieldGet(this, _YargsInstance_strictOptions, \"f\");\n    }\n    global(globals, global) {\n        argsert('<string|array> [boolean]', [globals, global], arguments.length);\n        globals = [].concat(globals);\n        if (global !== false) {\n            __classPrivateFieldGet(this, _YargsInstance_options, \"f\").local = __classPrivateFieldGet(this, _YargsInstance_options, \"f\").local.filter(l => globals.indexOf(l) === -1);\n        }\n        else {\n            globals.forEach(g => {\n                if (!__classPrivateFieldGet(this, _YargsInstance_options, \"f\").local.includes(g))\n                    __classPrivateFieldGet(this, _YargsInstance_options, \"f\").local.push(g);\n            });\n        }\n        return this;\n    }\n    group(opts, groupName) {\n        argsert('<string|array> <string>', [opts, groupName], arguments.length);\n        const existing = __classPrivateFieldGet(this, _YargsInstance_preservedGroups, \"f\")[groupName] || __classPrivateFieldGet(this, _YargsInstance_groups, \"f\")[groupName];\n        if (__classPrivateFieldGet(this, _YargsInstance_preservedGroups, \"f\")[groupName]) {\n            delete __classPrivateFieldGet(this, _YargsInstance_preservedGroups, \"f\")[groupName];\n        }\n        const seen = {};\n        __classPrivateFieldGet(this, _YargsInstance_groups, \"f\")[groupName] = (existing || []).concat(opts).filter(key => {\n            if (seen[key])\n                return false;\n            return (seen[key] = true);\n        });\n        return this;\n    }\n    hide(key) {\n        argsert('<string>', [key], arguments.length);\n        __classPrivateFieldGet(this, _YargsInstance_options, \"f\").hiddenOptions.push(key);\n        return this;\n    }\n    implies(key, value) {\n        argsert('<string|object> [number|string|array]', [key, value], arguments.length);\n        __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").implies(key, value);\n        return this;\n    }\n    locale(locale) {\n        argsert('[string]', [locale], arguments.length);\n        if (locale === undefined) {\n            this[kGuessLocale]();\n            return __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").y18n.getLocale();\n        }\n        __classPrivateFieldSet(this, _YargsInstance_detectLocale, false, \"f\");\n        __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").y18n.setLocale(locale);\n        return this;\n    }\n    middleware(callback, applyBeforeValidation, global) {\n        return __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, \"f\").addMiddleware(callback, !!applyBeforeValidation, global);\n    }\n    nargs(key, value) {\n        argsert('<string|object|array> [number]', [key, value], arguments.length);\n        this[kPopulateParserHintSingleValueDictionary](this.nargs.bind(this), 'narg', key, value);\n        return this;\n    }\n    normalize(keys) {\n        argsert('<array|string>', [keys], arguments.length);\n        this[kPopulateParserHintArray]('normalize', keys);\n        return this;\n    }\n    number(keys) {\n        argsert('<array|string>', [keys], arguments.length);\n        this[kPopulateParserHintArray]('number', keys);\n        this[kTrackManuallySetKeys](keys);\n        return this;\n    }\n    option(key, opt) {\n        argsert('<string|object> [object]', [key, opt], arguments.length);\n        if (typeof key === 'object') {\n            Object.keys(key).forEach(k => {\n                this.options(k, key[k]);\n            });\n        }\n        else {\n            if (typeof opt !== 'object') {\n                opt = {};\n            }\n            this[kTrackManuallySetKeys](key);\n            if (__classPrivateFieldGet(this, _YargsInstance_versionOpt, \"f\") && (key === 'version' || (opt === null || opt === void 0 ? void 0 : opt.alias) === 'version')) {\n                this[kEmitWarning]([\n                    '\"version\" is a reserved word.',\n                    'Please do one of the following:',\n                    '- Disable version with `yargs.version(false)` if using \"version\" as an option',\n                    '- Use the built-in `yargs.version` method instead (if applicable)',\n                    '- Use a different option key',\n                    'https://yargs.js.org/docs/#api-reference-version',\n                ].join('\\n'), undefined, 'versionWarning');\n            }\n            __classPrivateFieldGet(this, _YargsInstance_options, \"f\").key[key] = true;\n            if (opt.alias)\n                this.alias(key, opt.alias);\n            const deprecate = opt.deprecate || opt.deprecated;\n            if (deprecate) {\n                this.deprecateOption(key, deprecate);\n            }\n            const demand = opt.demand || opt.required || opt.require;\n            if (demand) {\n                this.demand(key, demand);\n            }\n            if (opt.demandOption) {\n                this.demandOption(key, typeof opt.demandOption === 'string' ? opt.demandOption : undefined);\n            }\n            if (opt.conflicts) {\n                this.conflicts(key, opt.conflicts);\n            }\n            if ('default' in opt) {\n                this.default(key, opt.default);\n            }\n            if (opt.implies !== undefined) {\n                this.implies(key, opt.implies);\n            }\n            if (opt.nargs !== undefined) {\n                this.nargs(key, opt.nargs);\n            }\n            if (opt.config) {\n                this.config(key, opt.configParser);\n            }\n            if (opt.normalize) {\n                this.normalize(key);\n            }\n            if (opt.choices) {\n                this.choices(key, opt.choices);\n            }\n            if (opt.coerce) {\n                this.coerce(key, opt.coerce);\n            }\n            if (opt.group) {\n                this.group(key, opt.group);\n            }\n            if (opt.boolean || opt.type === 'boolean') {\n                this.boolean(key);\n                if (opt.alias)\n                    this.boolean(opt.alias);\n            }\n            if (opt.array || opt.type === 'array') {\n                this.array(key);\n                if (opt.alias)\n                    this.array(opt.alias);\n            }\n            if (opt.number || opt.type === 'number') {\n                this.number(key);\n                if (opt.alias)\n                    this.number(opt.alias);\n            }\n            if (opt.string || opt.type === 'string') {\n                this.string(key);\n                if (opt.alias)\n                    this.string(opt.alias);\n            }\n            if (opt.count || opt.type === 'count') {\n                this.count(key);\n            }\n            if (typeof opt.global === 'boolean') {\n                this.global(key, opt.global);\n            }\n            if (opt.defaultDescription) {\n                __classPrivateFieldGet(this, _YargsInstance_options, \"f\").defaultDescription[key] = opt.defaultDescription;\n            }\n            if (opt.skipValidation) {\n                this.skipValidation(key);\n            }\n            const desc = opt.describe || opt.description || opt.desc;\n            const descriptions = __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").getDescriptions();\n            if (!Object.prototype.hasOwnProperty.call(descriptions, key) ||\n                typeof desc === 'string') {\n                this.describe(key, desc);\n            }\n            if (opt.hidden) {\n                this.hide(key);\n            }\n            if (opt.requiresArg) {\n                this.requiresArg(key);\n            }\n        }\n        return this;\n    }\n    options(key, opt) {\n        return this.option(key, opt);\n    }\n    parse(args, shortCircuit, _parseFn) {\n        argsert('[string|array] [function|boolean|object] [function]', [args, shortCircuit, _parseFn], arguments.length);\n        this[kFreeze]();\n        if (typeof args === 'undefined') {\n            args = __classPrivateFieldGet(this, _YargsInstance_processArgs, \"f\");\n        }\n        if (typeof shortCircuit === 'object') {\n            __classPrivateFieldSet(this, _YargsInstance_parseContext, shortCircuit, \"f\");\n            shortCircuit = _parseFn;\n        }\n        if (typeof shortCircuit === 'function') {\n            __classPrivateFieldSet(this, _YargsInstance_parseFn, shortCircuit, \"f\");\n            shortCircuit = false;\n        }\n        if (!shortCircuit)\n            __classPrivateFieldSet(this, _YargsInstance_processArgs, args, \"f\");\n        if (__classPrivateFieldGet(this, _YargsInstance_parseFn, \"f\"))\n            __classPrivateFieldSet(this, _YargsInstance_exitProcess, false, \"f\");\n        const parsed = this[kRunYargsParserAndExecuteCommands](args, !!shortCircuit);\n        const tmpParsed = this.parsed;\n        __classPrivateFieldGet(this, _YargsInstance_completion, \"f\").setParsed(this.parsed);\n        if (isPromise(parsed)) {\n            return parsed\n                .then(argv => {\n                if (__classPrivateFieldGet(this, _YargsInstance_parseFn, \"f\"))\n                    __classPrivateFieldGet(this, _YargsInstance_parseFn, \"f\").call(this, __classPrivateFieldGet(this, _YargsInstance_exitError, \"f\"), argv, __classPrivateFieldGet(this, _YargsInstance_output, \"f\"));\n                return argv;\n            })\n                .catch(err => {\n                if (__classPrivateFieldGet(this, _YargsInstance_parseFn, \"f\")) {\n                    __classPrivateFieldGet(this, _YargsInstance_parseFn, \"f\")(err, this.parsed.argv, __classPrivateFieldGet(this, _YargsInstance_output, \"f\"));\n                }\n                throw err;\n            })\n                .finally(() => {\n                this[kUnfreeze]();\n                this.parsed = tmpParsed;\n            });\n        }\n        else {\n            if (__classPrivateFieldGet(this, _YargsInstance_parseFn, \"f\"))\n                __classPrivateFieldGet(this, _YargsInstance_parseFn, \"f\").call(this, __classPrivateFieldGet(this, _YargsInstance_exitError, \"f\"), parsed, __classPrivateFieldGet(this, _YargsInstance_output, \"f\"));\n            this[kUnfreeze]();\n            this.parsed = tmpParsed;\n        }\n        return parsed;\n    }\n    parseAsync(args, shortCircuit, _parseFn) {\n        const maybePromise = this.parse(args, shortCircuit, _parseFn);\n        return !isPromise(maybePromise)\n            ? Promise.resolve(maybePromise)\n            : maybePromise;\n    }\n    parseSync(args, shortCircuit, _parseFn) {\n        const maybePromise = this.parse(args, shortCircuit, _parseFn);\n        if (isPromise(maybePromise)) {\n            throw new YError('.parseSync() must not be used with asynchronous builders, handlers, or middleware');\n        }\n        return maybePromise;\n    }\n    parserConfiguration(config) {\n        argsert('<object>', [config], arguments.length);\n        __classPrivateFieldSet(this, _YargsInstance_parserConfig, config, \"f\");\n        return this;\n    }\n    pkgConf(key, rootPath) {\n        argsert('<string> [string]', [key, rootPath], arguments.length);\n        let conf = null;\n        const obj = this[kPkgUp](rootPath || __classPrivateFieldGet(this, _YargsInstance_cwd, \"f\"));\n        if (obj[key] && typeof obj[key] === 'object') {\n            conf = applyExtends(obj[key], rootPath || __classPrivateFieldGet(this, _YargsInstance_cwd, \"f\"), this[kGetParserConfiguration]()['deep-merge-config'] || false, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\"));\n            __classPrivateFieldGet(this, _YargsInstance_options, \"f\").configObjects = (__classPrivateFieldGet(this, _YargsInstance_options, \"f\").configObjects || []).concat(conf);\n        }\n        return this;\n    }\n    positional(key, opts) {\n        argsert('<string> <object>', [key, opts], arguments.length);\n        const supportedOpts = [\n            'default',\n            'defaultDescription',\n            'implies',\n            'normalize',\n            'choices',\n            'conflicts',\n            'coerce',\n            'type',\n            'describe',\n            'desc',\n            'description',\n            'alias',\n        ];\n        opts = objFilter(opts, (k, v) => {\n            if (k === 'type' && !['string', 'number', 'boolean'].includes(v))\n                return false;\n            return supportedOpts.includes(k);\n        });\n        const fullCommand = __classPrivateFieldGet(this, _YargsInstance_context, \"f\").fullCommands[__classPrivateFieldGet(this, _YargsInstance_context, \"f\").fullCommands.length - 1];\n        const parseOptions = fullCommand\n            ? __classPrivateFieldGet(this, _YargsInstance_command, \"f\").cmdToParseOptions(fullCommand)\n            : {\n                array: [],\n                alias: {},\n                default: {},\n                demand: {},\n            };\n        objectKeys(parseOptions).forEach(pk => {\n            const parseOption = parseOptions[pk];\n            if (Array.isArray(parseOption)) {\n                if (parseOption.indexOf(key) !== -1)\n                    opts[pk] = true;\n            }\n            else {\n                if (parseOption[key] && !(pk in opts))\n                    opts[pk] = parseOption[key];\n            }\n        });\n        this.group(key, __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").getPositionalGroupName());\n        return this.option(key, opts);\n    }\n    recommendCommands(recommend = true) {\n        argsert('[boolean]', [recommend], arguments.length);\n        __classPrivateFieldSet(this, _YargsInstance_recommendCommands, recommend, \"f\");\n        return this;\n    }\n    required(keys, max, msg) {\n        return this.demand(keys, max, msg);\n    }\n    require(keys, max, msg) {\n        return this.demand(keys, max, msg);\n    }\n    requiresArg(keys) {\n        argsert('<array|string|object> [number]', [keys], arguments.length);\n        if (typeof keys === 'string' && __classPrivateFieldGet(this, _YargsInstance_options, \"f\").narg[keys]) {\n            return this;\n        }\n        else {\n            this[kPopulateParserHintSingleValueDictionary](this.requiresArg.bind(this), 'narg', keys, NaN);\n        }\n        return this;\n    }\n    showCompletionScript($0, cmd) {\n        argsert('[string] [string]', [$0, cmd], arguments.length);\n        $0 = $0 || this.$0;\n        __classPrivateFieldGet(this, _YargsInstance_logger, \"f\").log(__classPrivateFieldGet(this, _YargsInstance_completion, \"f\").generateCompletionScript($0, cmd || __classPrivateFieldGet(this, _YargsInstance_completionCommand, \"f\") || 'completion'));\n        return this;\n    }\n    showHelp(level) {\n        argsert('[string|function]', [level], arguments.length);\n        __classPrivateFieldSet(this, _YargsInstance_hasOutput, true, \"f\");\n        if (!__classPrivateFieldGet(this, _YargsInstance_usage, \"f\").hasCachedHelpMessage()) {\n            if (!this.parsed) {\n                const parse = this[kRunYargsParserAndExecuteCommands](__classPrivateFieldGet(this, _YargsInstance_processArgs, \"f\"), undefined, undefined, 0, true);\n                if (isPromise(parse)) {\n                    parse.then(() => {\n                        __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").showHelp(level);\n                    });\n                    return this;\n                }\n            }\n            const builderResponse = __classPrivateFieldGet(this, _YargsInstance_command, \"f\").runDefaultBuilderOn(this);\n            if (isPromise(builderResponse)) {\n                builderResponse.then(() => {\n                    __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").showHelp(level);\n                });\n                return this;\n            }\n        }\n        __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").showHelp(level);\n        return this;\n    }\n    scriptName(scriptName) {\n        this.customScriptName = true;\n        this.$0 = scriptName;\n        return this;\n    }\n    showHelpOnFail(enabled, message) {\n        argsert('[boolean|string] [string]', [enabled, message], arguments.length);\n        __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").showHelpOnFail(enabled, message);\n        return this;\n    }\n    showVersion(level) {\n        argsert('[string|function]', [level], arguments.length);\n        __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").showVersion(level);\n        return this;\n    }\n    skipValidation(keys) {\n        argsert('<array|string>', [keys], arguments.length);\n        this[kPopulateParserHintArray]('skipValidation', keys);\n        return this;\n    }\n    strict(enabled) {\n        argsert('[boolean]', [enabled], arguments.length);\n        __classPrivateFieldSet(this, _YargsInstance_strict, enabled !== false, \"f\");\n        return this;\n    }\n    strictCommands(enabled) {\n        argsert('[boolean]', [enabled], arguments.length);\n        __classPrivateFieldSet(this, _YargsInstance_strictCommands, enabled !== false, \"f\");\n        return this;\n    }\n    strictOptions(enabled) {\n        argsert('[boolean]', [enabled], arguments.length);\n        __classPrivateFieldSet(this, _YargsInstance_strictOptions, enabled !== false, \"f\");\n        return this;\n    }\n    string(keys) {\n        argsert('<array|string>', [keys], arguments.length);\n        this[kPopulateParserHintArray]('string', keys);\n        this[kTrackManuallySetKeys](keys);\n        return this;\n    }\n    terminalWidth() {\n        argsert([], 0);\n        return __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").process.stdColumns;\n    }\n    updateLocale(obj) {\n        return this.updateStrings(obj);\n    }\n    updateStrings(obj) {\n        argsert('<object>', [obj], arguments.length);\n        __classPrivateFieldSet(this, _YargsInstance_detectLocale, false, \"f\");\n        __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").y18n.updateLocale(obj);\n        return this;\n    }\n    usage(msg, description, builder, handler) {\n        argsert('<string|null|undefined> [string|boolean] [function|object] [function]', [msg, description, builder, handler], arguments.length);\n        if (description !== undefined) {\n            assertNotStrictEqual(msg, null, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\"));\n            if ((msg || '').match(/^\\$0( |$)/)) {\n                return this.command(msg, description, builder, handler);\n            }\n            else {\n                throw new YError('.usage() description must start with $0 if being used as alias for .command()');\n            }\n        }\n        else {\n            __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").usage(msg);\n            return this;\n        }\n    }\n    version(opt, msg, ver) {\n        const defaultVersionOpt = 'version';\n        argsert('[boolean|string] [string] [string]', [opt, msg, ver], arguments.length);\n        if (__classPrivateFieldGet(this, _YargsInstance_versionOpt, \"f\")) {\n            this[kDeleteFromParserHintObject](__classPrivateFieldGet(this, _YargsInstance_versionOpt, \"f\"));\n            __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").version(undefined);\n            __classPrivateFieldSet(this, _YargsInstance_versionOpt, null, \"f\");\n        }\n        if (arguments.length === 0) {\n            ver = this[kGuessVersion]();\n            opt = defaultVersionOpt;\n        }\n        else if (arguments.length === 1) {\n            if (opt === false) {\n                return this;\n            }\n            ver = opt;\n            opt = defaultVersionOpt;\n        }\n        else if (arguments.length === 2) {\n            ver = msg;\n            msg = undefined;\n        }\n        __classPrivateFieldSet(this, _YargsInstance_versionOpt, typeof opt === 'string' ? opt : defaultVersionOpt, \"f\");\n        msg = msg || __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").deferY18nLookup('Show version number');\n        __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").version(ver || undefined);\n        this.boolean(__classPrivateFieldGet(this, _YargsInstance_versionOpt, \"f\"));\n        this.describe(__classPrivateFieldGet(this, _YargsInstance_versionOpt, \"f\"), msg);\n        return this;\n    }\n    wrap(cols) {\n        argsert('<number|null|undefined>', [cols], arguments.length);\n        __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").wrap(cols);\n        return this;\n    }\n    [(_YargsInstance_command = new WeakMap(), _YargsInstance_cwd = new WeakMap(), _YargsInstance_context = new WeakMap(), _YargsInstance_completion = new WeakMap(), _YargsInstance_completionCommand = new WeakMap(), _YargsInstance_defaultShowHiddenOpt = new WeakMap(), _YargsInstance_exitError = new WeakMap(), _YargsInstance_detectLocale = new WeakMap(), _YargsInstance_emittedWarnings = new WeakMap(), _YargsInstance_exitProcess = new WeakMap(), _YargsInstance_frozens = new WeakMap(), _YargsInstance_globalMiddleware = new WeakMap(), _YargsInstance_groups = new WeakMap(), _YargsInstance_hasOutput = new WeakMap(), _YargsInstance_helpOpt = new WeakMap(), _YargsInstance_isGlobalContext = new WeakMap(), _YargsInstance_logger = new WeakMap(), _YargsInstance_output = new WeakMap(), _YargsInstance_options = new WeakMap(), _YargsInstance_parentRequire = new WeakMap(), _YargsInstance_parserConfig = new WeakMap(), _YargsInstance_parseFn = new WeakMap(), _YargsInstance_parseContext = new WeakMap(), _YargsInstance_pkgs = new WeakMap(), _YargsInstance_preservedGroups = new WeakMap(), _YargsInstance_processArgs = new WeakMap(), _YargsInstance_recommendCommands = new WeakMap(), _YargsInstance_shim = new WeakMap(), _YargsInstance_strict = new WeakMap(), _YargsInstance_strictCommands = new WeakMap(), _YargsInstance_strictOptions = new WeakMap(), _YargsInstance_usage = new WeakMap(), _YargsInstance_versionOpt = new WeakMap(), _YargsInstance_validation = new WeakMap(), kCopyDoubleDash)](argv) {\n        if (!argv._ || !argv['--'])\n            return argv;\n        argv._.push.apply(argv._, argv['--']);\n        try {\n            delete argv['--'];\n        }\n        catch (_err) { }\n        return argv;\n    }\n    [kCreateLogger]() {\n        return {\n            log: (...args) => {\n                if (!this[kHasParseCallback]())\n                    console.log(...args);\n                __classPrivateFieldSet(this, _YargsInstance_hasOutput, true, \"f\");\n                if (__classPrivateFieldGet(this, _YargsInstance_output, \"f\").length)\n                    __classPrivateFieldSet(this, _YargsInstance_output, __classPrivateFieldGet(this, _YargsInstance_output, \"f\") + '\\n', \"f\");\n                __classPrivateFieldSet(this, _YargsInstance_output, __classPrivateFieldGet(this, _YargsInstance_output, \"f\") + args.join(' '), \"f\");\n            },\n            error: (...args) => {\n                if (!this[kHasParseCallback]())\n                    console.error(...args);\n                __classPrivateFieldSet(this, _YargsInstance_hasOutput, true, \"f\");\n                if (__classPrivateFieldGet(this, _YargsInstance_output, \"f\").length)\n                    __classPrivateFieldSet(this, _YargsInstance_output, __classPrivateFieldGet(this, _YargsInstance_output, \"f\") + '\\n', \"f\");\n                __classPrivateFieldSet(this, _YargsInstance_output, __classPrivateFieldGet(this, _YargsInstance_output, \"f\") + args.join(' '), \"f\");\n            },\n        };\n    }\n    [kDeleteFromParserHintObject](optionKey) {\n        objectKeys(__classPrivateFieldGet(this, _YargsInstance_options, \"f\")).forEach((hintKey) => {\n            if (((key) => key === 'configObjects')(hintKey))\n                return;\n            const hint = __classPrivateFieldGet(this, _YargsInstance_options, \"f\")[hintKey];\n            if (Array.isArray(hint)) {\n                if (hint.includes(optionKey))\n                    hint.splice(hint.indexOf(optionKey), 1);\n            }\n            else if (typeof hint === 'object') {\n                delete hint[optionKey];\n            }\n        });\n        delete __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").getDescriptions()[optionKey];\n    }\n    [kEmitWarning](warning, type, deduplicationId) {\n        if (!__classPrivateFieldGet(this, _YargsInstance_emittedWarnings, \"f\")[deduplicationId]) {\n            __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").process.emitWarning(warning, type);\n            __classPrivateFieldGet(this, _YargsInstance_emittedWarnings, \"f\")[deduplicationId] = true;\n        }\n    }\n    [kFreeze]() {\n        __classPrivateFieldGet(this, _YargsInstance_frozens, \"f\").push({\n            options: __classPrivateFieldGet(this, _YargsInstance_options, \"f\"),\n            configObjects: __classPrivateFieldGet(this, _YargsInstance_options, \"f\").configObjects.slice(0),\n            exitProcess: __classPrivateFieldGet(this, _YargsInstance_exitProcess, \"f\"),\n            groups: __classPrivateFieldGet(this, _YargsInstance_groups, \"f\"),\n            strict: __classPrivateFieldGet(this, _YargsInstance_strict, \"f\"),\n            strictCommands: __classPrivateFieldGet(this, _YargsInstance_strictCommands, \"f\"),\n            strictOptions: __classPrivateFieldGet(this, _YargsInstance_strictOptions, \"f\"),\n            completionCommand: __classPrivateFieldGet(this, _YargsInstance_completionCommand, \"f\"),\n            output: __classPrivateFieldGet(this, _YargsInstance_output, \"f\"),\n            exitError: __classPrivateFieldGet(this, _YargsInstance_exitError, \"f\"),\n            hasOutput: __classPrivateFieldGet(this, _YargsInstance_hasOutput, \"f\"),\n            parsed: this.parsed,\n            parseFn: __classPrivateFieldGet(this, _YargsInstance_parseFn, \"f\"),\n            parseContext: __classPrivateFieldGet(this, _YargsInstance_parseContext, \"f\"),\n        });\n        __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").freeze();\n        __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").freeze();\n        __classPrivateFieldGet(this, _YargsInstance_command, \"f\").freeze();\n        __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, \"f\").freeze();\n    }\n    [kGetDollarZero]() {\n        let $0 = '';\n        let default$0;\n        if (/\\b(node|iojs|electron)(\\.exe)?$/.test(__classPrivateFieldGet(this, _YargsInstance_shim, \"f\").process.argv()[0])) {\n            default$0 = __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").process.argv().slice(1, 2);\n        }\n        else {\n            default$0 = __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").process.argv().slice(0, 1);\n        }\n        $0 = default$0\n            .map(x => {\n            const b = this[kRebase](__classPrivateFieldGet(this, _YargsInstance_cwd, \"f\"), x);\n            return x.match(/^(\\/|([a-zA-Z]:)?\\\\)/) && b.length < x.length ? b : x;\n        })\n            .join(' ')\n            .trim();\n        if (__classPrivateFieldGet(this, _YargsInstance_shim, \"f\").getEnv('_') &&\n            __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").getProcessArgvBin() === __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").getEnv('_')) {\n            $0 = __classPrivateFieldGet(this, _YargsInstance_shim, \"f\")\n                .getEnv('_')\n                .replace(`${__classPrivateFieldGet(this, _YargsInstance_shim, \"f\").path.dirname(__classPrivateFieldGet(this, _YargsInstance_shim, \"f\").process.execPath())}/`, '');\n        }\n        return $0;\n    }\n    [kGetParserConfiguration]() {\n        return __classPrivateFieldGet(this, _YargsInstance_parserConfig, \"f\");\n    }\n    [kGuessLocale]() {\n        if (!__classPrivateFieldGet(this, _YargsInstance_detectLocale, \"f\"))\n            return;\n        const locale = __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").getEnv('LC_ALL') ||\n            __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").getEnv('LC_MESSAGES') ||\n            __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").getEnv('LANG') ||\n            __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").getEnv('LANGUAGE') ||\n            'en_US';\n        this.locale(locale.replace(/[.:].*/, ''));\n    }\n    [kGuessVersion]() {\n        const obj = this[kPkgUp]();\n        return obj.version || 'unknown';\n    }\n    [kParsePositionalNumbers](argv) {\n        const args = argv['--'] ? argv['--'] : argv._;\n        for (let i = 0, arg; (arg = args[i]) !== undefined; i++) {\n            if (__classPrivateFieldGet(this, _YargsInstance_shim, \"f\").Parser.looksLikeNumber(arg) &&\n                Number.isSafeInteger(Math.floor(parseFloat(`${arg}`)))) {\n                args[i] = Number(arg);\n            }\n        }\n        return argv;\n    }\n    [kPkgUp](rootPath) {\n        const npath = rootPath || '*';\n        if (__classPrivateFieldGet(this, _YargsInstance_pkgs, \"f\")[npath])\n            return __classPrivateFieldGet(this, _YargsInstance_pkgs, \"f\")[npath];\n        let obj = {};\n        try {\n            let startDir = rootPath || __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").mainFilename;\n            if (!rootPath && __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").path.extname(startDir)) {\n                startDir = __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").path.dirname(startDir);\n            }\n            const pkgJsonPath = __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").findUp(startDir, (dir, names) => {\n                if (names.includes('package.json')) {\n                    return 'package.json';\n                }\n                else {\n                    return undefined;\n                }\n            });\n            assertNotStrictEqual(pkgJsonPath, undefined, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\"));\n            obj = JSON.parse(__classPrivateFieldGet(this, _YargsInstance_shim, \"f\").readFileSync(pkgJsonPath, 'utf8'));\n        }\n        catch (_noop) { }\n        __classPrivateFieldGet(this, _YargsInstance_pkgs, \"f\")[npath] = obj || {};\n        return __classPrivateFieldGet(this, _YargsInstance_pkgs, \"f\")[npath];\n    }\n    [kPopulateParserHintArray](type, keys) {\n        keys = [].concat(keys);\n        keys.forEach(key => {\n            key = this[kSanitizeKey](key);\n            __classPrivateFieldGet(this, _YargsInstance_options, \"f\")[type].push(key);\n        });\n    }\n    [kPopulateParserHintSingleValueDictionary](builder, type, key, value) {\n        this[kPopulateParserHintDictionary](builder, type, key, value, (type, key, value) => {\n            __classPrivateFieldGet(this, _YargsInstance_options, \"f\")[type][key] = value;\n        });\n    }\n    [kPopulateParserHintArrayDictionary](builder, type, key, value) {\n        this[kPopulateParserHintDictionary](builder, type, key, value, (type, key, value) => {\n            __classPrivateFieldGet(this, _YargsInstance_options, \"f\")[type][key] = (__classPrivateFieldGet(this, _YargsInstance_options, \"f\")[type][key] || []).concat(value);\n        });\n    }\n    [kPopulateParserHintDictionary](builder, type, key, value, singleKeyHandler) {\n        if (Array.isArray(key)) {\n            key.forEach(k => {\n                builder(k, value);\n            });\n        }\n        else if (((key) => typeof key === 'object')(key)) {\n            for (const k of objectKeys(key)) {\n                builder(k, key[k]);\n            }\n        }\n        else {\n            singleKeyHandler(type, this[kSanitizeKey](key), value);\n        }\n    }\n    [kSanitizeKey](key) {\n        if (key === '__proto__')\n            return '___proto___';\n        return key;\n    }\n    [kSetKey](key, set) {\n        this[kPopulateParserHintSingleValueDictionary](this[kSetKey].bind(this), 'key', key, set);\n        return this;\n    }\n    [kUnfreeze]() {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n        const frozen = __classPrivateFieldGet(this, _YargsInstance_frozens, \"f\").pop();\n        assertNotStrictEqual(frozen, undefined, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\"));\n        let configObjects;\n        (_a = this, _b = this, _c = this, _d = this, _e = this, _f = this, _g = this, _h = this, _j = this, _k = this, _l = this, _m = this, {\n            options: ({ set value(_o) { __classPrivateFieldSet(_a, _YargsInstance_options, _o, \"f\"); } }).value,\n            configObjects,\n            exitProcess: ({ set value(_o) { __classPrivateFieldSet(_b, _YargsInstance_exitProcess, _o, \"f\"); } }).value,\n            groups: ({ set value(_o) { __classPrivateFieldSet(_c, _YargsInstance_groups, _o, \"f\"); } }).value,\n            output: ({ set value(_o) { __classPrivateFieldSet(_d, _YargsInstance_output, _o, \"f\"); } }).value,\n            exitError: ({ set value(_o) { __classPrivateFieldSet(_e, _YargsInstance_exitError, _o, \"f\"); } }).value,\n            hasOutput: ({ set value(_o) { __classPrivateFieldSet(_f, _YargsInstance_hasOutput, _o, \"f\"); } }).value,\n            parsed: this.parsed,\n            strict: ({ set value(_o) { __classPrivateFieldSet(_g, _YargsInstance_strict, _o, \"f\"); } }).value,\n            strictCommands: ({ set value(_o) { __classPrivateFieldSet(_h, _YargsInstance_strictCommands, _o, \"f\"); } }).value,\n            strictOptions: ({ set value(_o) { __classPrivateFieldSet(_j, _YargsInstance_strictOptions, _o, \"f\"); } }).value,\n            completionCommand: ({ set value(_o) { __classPrivateFieldSet(_k, _YargsInstance_completionCommand, _o, \"f\"); } }).value,\n            parseFn: ({ set value(_o) { __classPrivateFieldSet(_l, _YargsInstance_parseFn, _o, \"f\"); } }).value,\n            parseContext: ({ set value(_o) { __classPrivateFieldSet(_m, _YargsInstance_parseContext, _o, \"f\"); } }).value,\n        } = frozen);\n        __classPrivateFieldGet(this, _YargsInstance_options, \"f\").configObjects = configObjects;\n        __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").unfreeze();\n        __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").unfreeze();\n        __classPrivateFieldGet(this, _YargsInstance_command, \"f\").unfreeze();\n        __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, \"f\").unfreeze();\n    }\n    [kValidateAsync](validation, argv) {\n        return maybeAsyncResult(argv, result => {\n            validation(result);\n            return result;\n        });\n    }\n    getInternalMethods() {\n        return {\n            getCommandInstance: this[kGetCommandInstance].bind(this),\n            getContext: this[kGetContext].bind(this),\n            getHasOutput: this[kGetHasOutput].bind(this),\n            getLoggerInstance: this[kGetLoggerInstance].bind(this),\n            getParseContext: this[kGetParseContext].bind(this),\n            getParserConfiguration: this[kGetParserConfiguration].bind(this),\n            getUsageInstance: this[kGetUsageInstance].bind(this),\n            getValidationInstance: this[kGetValidationInstance].bind(this),\n            hasParseCallback: this[kHasParseCallback].bind(this),\n            isGlobalContext: this[kIsGlobalContext].bind(this),\n            postProcess: this[kPostProcess].bind(this),\n            reset: this[kReset].bind(this),\n            runValidation: this[kRunValidation].bind(this),\n            runYargsParserAndExecuteCommands: this[kRunYargsParserAndExecuteCommands].bind(this),\n            setHasOutput: this[kSetHasOutput].bind(this),\n        };\n    }\n    [kGetCommandInstance]() {\n        return __classPrivateFieldGet(this, _YargsInstance_command, \"f\");\n    }\n    [kGetContext]() {\n        return __classPrivateFieldGet(this, _YargsInstance_context, \"f\");\n    }\n    [kGetHasOutput]() {\n        return __classPrivateFieldGet(this, _YargsInstance_hasOutput, \"f\");\n    }\n    [kGetLoggerInstance]() {\n        return __classPrivateFieldGet(this, _YargsInstance_logger, \"f\");\n    }\n    [kGetParseContext]() {\n        return __classPrivateFieldGet(this, _YargsInstance_parseContext, \"f\") || {};\n    }\n    [kGetUsageInstance]() {\n        return __classPrivateFieldGet(this, _YargsInstance_usage, \"f\");\n    }\n    [kGetValidationInstance]() {\n        return __classPrivateFieldGet(this, _YargsInstance_validation, \"f\");\n    }\n    [kHasParseCallback]() {\n        return !!__classPrivateFieldGet(this, _YargsInstance_parseFn, \"f\");\n    }\n    [kIsGlobalContext]() {\n        return __classPrivateFieldGet(this, _YargsInstance_isGlobalContext, \"f\");\n    }\n    [kPostProcess](argv, populateDoubleDash, calledFromCommand, runGlobalMiddleware) {\n        if (calledFromCommand)\n            return argv;\n        if (isPromise(argv))\n            return argv;\n        if (!populateDoubleDash) {\n            argv = this[kCopyDoubleDash](argv);\n        }\n        const parsePositionalNumbers = this[kGetParserConfiguration]()['parse-positional-numbers'] ||\n            this[kGetParserConfiguration]()['parse-positional-numbers'] === undefined;\n        if (parsePositionalNumbers) {\n            argv = this[kParsePositionalNumbers](argv);\n        }\n        if (runGlobalMiddleware) {\n            argv = applyMiddleware(argv, this, __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, \"f\").getMiddleware(), false);\n        }\n        return argv;\n    }\n    [kReset](aliases = {}) {\n        __classPrivateFieldSet(this, _YargsInstance_options, __classPrivateFieldGet(this, _YargsInstance_options, \"f\") || {}, \"f\");\n        const tmpOptions = {};\n        tmpOptions.local = __classPrivateFieldGet(this, _YargsInstance_options, \"f\").local || [];\n        tmpOptions.configObjects = __classPrivateFieldGet(this, _YargsInstance_options, \"f\").configObjects || [];\n        const localLookup = {};\n        tmpOptions.local.forEach(l => {\n            localLookup[l] = true;\n            (aliases[l] || []).forEach(a => {\n                localLookup[a] = true;\n            });\n        });\n        Object.assign(__classPrivateFieldGet(this, _YargsInstance_preservedGroups, \"f\"), Object.keys(__classPrivateFieldGet(this, _YargsInstance_groups, \"f\")).reduce((acc, groupName) => {\n            const keys = __classPrivateFieldGet(this, _YargsInstance_groups, \"f\")[groupName].filter(key => !(key in localLookup));\n            if (keys.length > 0) {\n                acc[groupName] = keys;\n            }\n            return acc;\n        }, {}));\n        __classPrivateFieldSet(this, _YargsInstance_groups, {}, \"f\");\n        const arrayOptions = [\n            'array',\n            'boolean',\n            'string',\n            'skipValidation',\n            'count',\n            'normalize',\n            'number',\n            'hiddenOptions',\n        ];\n        const objectOptions = [\n            'narg',\n            'key',\n            'alias',\n            'default',\n            'defaultDescription',\n            'config',\n            'choices',\n            'demandedOptions',\n            'demandedCommands',\n            'deprecatedOptions',\n        ];\n        arrayOptions.forEach(k => {\n            tmpOptions[k] = (__classPrivateFieldGet(this, _YargsInstance_options, \"f\")[k] || []).filter((k) => !localLookup[k]);\n        });\n        objectOptions.forEach((k) => {\n            tmpOptions[k] = objFilter(__classPrivateFieldGet(this, _YargsInstance_options, \"f\")[k], k => !localLookup[k]);\n        });\n        tmpOptions.envPrefix = __classPrivateFieldGet(this, _YargsInstance_options, \"f\").envPrefix;\n        __classPrivateFieldSet(this, _YargsInstance_options, tmpOptions, \"f\");\n        __classPrivateFieldSet(this, _YargsInstance_usage, __classPrivateFieldGet(this, _YargsInstance_usage, \"f\")\n            ? __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").reset(localLookup)\n            : Usage(this, __classPrivateFieldGet(this, _YargsInstance_shim, \"f\")), \"f\");\n        __classPrivateFieldSet(this, _YargsInstance_validation, __classPrivateFieldGet(this, _YargsInstance_validation, \"f\")\n            ? __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").reset(localLookup)\n            : Validation(this, __classPrivateFieldGet(this, _YargsInstance_usage, \"f\"), __classPrivateFieldGet(this, _YargsInstance_shim, \"f\")), \"f\");\n        __classPrivateFieldSet(this, _YargsInstance_command, __classPrivateFieldGet(this, _YargsInstance_command, \"f\")\n            ? __classPrivateFieldGet(this, _YargsInstance_command, \"f\").reset()\n            : Command(__classPrivateFieldGet(this, _YargsInstance_usage, \"f\"), __classPrivateFieldGet(this, _YargsInstance_validation, \"f\"), __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, \"f\"), __classPrivateFieldGet(this, _YargsInstance_shim, \"f\")), \"f\");\n        if (!__classPrivateFieldGet(this, _YargsInstance_completion, \"f\"))\n            __classPrivateFieldSet(this, _YargsInstance_completion, Completion(this, __classPrivateFieldGet(this, _YargsInstance_usage, \"f\"), __classPrivateFieldGet(this, _YargsInstance_command, \"f\"), __classPrivateFieldGet(this, _YargsInstance_shim, \"f\")), \"f\");\n        __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, \"f\").reset();\n        __classPrivateFieldSet(this, _YargsInstance_completionCommand, null, \"f\");\n        __classPrivateFieldSet(this, _YargsInstance_output, '', \"f\");\n        __classPrivateFieldSet(this, _YargsInstance_exitError, null, \"f\");\n        __classPrivateFieldSet(this, _YargsInstance_hasOutput, false, \"f\");\n        this.parsed = false;\n        return this;\n    }\n    [kRebase](base, dir) {\n        return __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").path.relative(base, dir);\n    }\n    [kRunYargsParserAndExecuteCommands](args, shortCircuit, calledFromCommand, commandIndex = 0, helpOnly = false) {\n        let skipValidation = !!calledFromCommand || helpOnly;\n        args = args || __classPrivateFieldGet(this, _YargsInstance_processArgs, \"f\");\n        __classPrivateFieldGet(this, _YargsInstance_options, \"f\").__ = __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").y18n.__;\n        __classPrivateFieldGet(this, _YargsInstance_options, \"f\").configuration = this[kGetParserConfiguration]();\n        const populateDoubleDash = !!__classPrivateFieldGet(this, _YargsInstance_options, \"f\").configuration['populate--'];\n        const config = Object.assign({}, __classPrivateFieldGet(this, _YargsInstance_options, \"f\").configuration, {\n            'populate--': true,\n        });\n        const parsed = __classPrivateFieldGet(this, _YargsInstance_shim, \"f\").Parser.detailed(args, Object.assign({}, __classPrivateFieldGet(this, _YargsInstance_options, \"f\"), {\n            configuration: { 'parse-positional-numbers': false, ...config },\n        }));\n        const argv = Object.assign(parsed.argv, __classPrivateFieldGet(this, _YargsInstance_parseContext, \"f\"));\n        let argvPromise = undefined;\n        const aliases = parsed.aliases;\n        let helpOptSet = false;\n        let versionOptSet = false;\n        Object.keys(argv).forEach(key => {\n            if (key === __classPrivateFieldGet(this, _YargsInstance_helpOpt, \"f\") && argv[key]) {\n                helpOptSet = true;\n            }\n            else if (key === __classPrivateFieldGet(this, _YargsInstance_versionOpt, \"f\") && argv[key]) {\n                versionOptSet = true;\n            }\n        });\n        argv.$0 = this.$0;\n        this.parsed = parsed;\n        if (commandIndex === 0) {\n            __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").clearCachedHelpMessage();\n        }\n        try {\n            this[kGuessLocale]();\n            if (shortCircuit) {\n                return this[kPostProcess](argv, populateDoubleDash, !!calledFromCommand, false);\n            }\n            if (__classPrivateFieldGet(this, _YargsInstance_helpOpt, \"f\")) {\n                const helpCmds = [__classPrivateFieldGet(this, _YargsInstance_helpOpt, \"f\")]\n                    .concat(aliases[__classPrivateFieldGet(this, _YargsInstance_helpOpt, \"f\")] || [])\n                    .filter(k => k.length > 1);\n                if (helpCmds.includes('' + argv._[argv._.length - 1])) {\n                    argv._.pop();\n                    helpOptSet = true;\n                }\n            }\n            __classPrivateFieldSet(this, _YargsInstance_isGlobalContext, false, \"f\");\n            const handlerKeys = __classPrivateFieldGet(this, _YargsInstance_command, \"f\").getCommands();\n            const requestCompletions = __classPrivateFieldGet(this, _YargsInstance_completion, \"f\").completionKey in argv;\n            const skipRecommendation = helpOptSet || requestCompletions || helpOnly;\n            if (argv._.length) {\n                if (handlerKeys.length) {\n                    let firstUnknownCommand;\n                    for (let i = commandIndex || 0, cmd; argv._[i] !== undefined; i++) {\n                        cmd = String(argv._[i]);\n                        if (handlerKeys.includes(cmd) && cmd !== __classPrivateFieldGet(this, _YargsInstance_completionCommand, \"f\")) {\n                            const innerArgv = __classPrivateFieldGet(this, _YargsInstance_command, \"f\").runCommand(cmd, this, parsed, i + 1, helpOnly, helpOptSet || versionOptSet || helpOnly);\n                            return this[kPostProcess](innerArgv, populateDoubleDash, !!calledFromCommand, false);\n                        }\n                        else if (!firstUnknownCommand &&\n                            cmd !== __classPrivateFieldGet(this, _YargsInstance_completionCommand, \"f\")) {\n                            firstUnknownCommand = cmd;\n                            break;\n                        }\n                    }\n                    if (!__classPrivateFieldGet(this, _YargsInstance_command, \"f\").hasDefaultCommand() &&\n                        __classPrivateFieldGet(this, _YargsInstance_recommendCommands, \"f\") &&\n                        firstUnknownCommand &&\n                        !skipRecommendation) {\n                        __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").recommendCommands(firstUnknownCommand, handlerKeys);\n                    }\n                }\n                if (__classPrivateFieldGet(this, _YargsInstance_completionCommand, \"f\") &&\n                    argv._.includes(__classPrivateFieldGet(this, _YargsInstance_completionCommand, \"f\")) &&\n                    !requestCompletions) {\n                    if (__classPrivateFieldGet(this, _YargsInstance_exitProcess, \"f\"))\n                        setBlocking(true);\n                    this.showCompletionScript();\n                    this.exit(0);\n                }\n            }\n            if (__classPrivateFieldGet(this, _YargsInstance_command, \"f\").hasDefaultCommand() && !skipRecommendation) {\n                const innerArgv = __classPrivateFieldGet(this, _YargsInstance_command, \"f\").runCommand(null, this, parsed, 0, helpOnly, helpOptSet || versionOptSet || helpOnly);\n                return this[kPostProcess](innerArgv, populateDoubleDash, !!calledFromCommand, false);\n            }\n            if (requestCompletions) {\n                if (__classPrivateFieldGet(this, _YargsInstance_exitProcess, \"f\"))\n                    setBlocking(true);\n                args = [].concat(args);\n                const completionArgs = args.slice(args.indexOf(`--${__classPrivateFieldGet(this, _YargsInstance_completion, \"f\").completionKey}`) + 1);\n                __classPrivateFieldGet(this, _YargsInstance_completion, \"f\").getCompletion(completionArgs, (err, completions) => {\n                    if (err)\n                        throw new YError(err.message);\n                    (completions || []).forEach(completion => {\n                        __classPrivateFieldGet(this, _YargsInstance_logger, \"f\").log(completion);\n                    });\n                    this.exit(0);\n                });\n                return this[kPostProcess](argv, !populateDoubleDash, !!calledFromCommand, false);\n            }\n            if (!__classPrivateFieldGet(this, _YargsInstance_hasOutput, \"f\")) {\n                if (helpOptSet) {\n                    if (__classPrivateFieldGet(this, _YargsInstance_exitProcess, \"f\"))\n                        setBlocking(true);\n                    skipValidation = true;\n                    this.showHelp('log');\n                    this.exit(0);\n                }\n                else if (versionOptSet) {\n                    if (__classPrivateFieldGet(this, _YargsInstance_exitProcess, \"f\"))\n                        setBlocking(true);\n                    skipValidation = true;\n                    __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").showVersion('log');\n                    this.exit(0);\n                }\n            }\n            if (!skipValidation && __classPrivateFieldGet(this, _YargsInstance_options, \"f\").skipValidation.length > 0) {\n                skipValidation = Object.keys(argv).some(key => __classPrivateFieldGet(this, _YargsInstance_options, \"f\").skipValidation.indexOf(key) >= 0 && argv[key] === true);\n            }\n            if (!skipValidation) {\n                if (parsed.error)\n                    throw new YError(parsed.error.message);\n                if (!requestCompletions) {\n                    const validation = this[kRunValidation](aliases, {}, parsed.error);\n                    if (!calledFromCommand) {\n                        argvPromise = applyMiddleware(argv, this, __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, \"f\").getMiddleware(), true);\n                    }\n                    argvPromise = this[kValidateAsync](validation, argvPromise !== null && argvPromise !== void 0 ? argvPromise : argv);\n                    if (isPromise(argvPromise) && !calledFromCommand) {\n                        argvPromise = argvPromise.then(() => {\n                            return applyMiddleware(argv, this, __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, \"f\").getMiddleware(), false);\n                        });\n                    }\n                }\n            }\n        }\n        catch (err) {\n            if (err instanceof YError)\n                __classPrivateFieldGet(this, _YargsInstance_usage, \"f\").fail(err.message, err);\n            else\n                throw err;\n        }\n        return this[kPostProcess](argvPromise !== null && argvPromise !== void 0 ? argvPromise : argv, populateDoubleDash, !!calledFromCommand, true);\n    }\n    [kRunValidation](aliases, positionalMap, parseErrors, isDefaultCommand) {\n        const demandedOptions = { ...this.getDemandedOptions() };\n        return (argv) => {\n            if (parseErrors)\n                throw new YError(parseErrors.message);\n            __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").nonOptionCount(argv);\n            __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").requiredArguments(argv, demandedOptions);\n            let failedStrictCommands = false;\n            if (__classPrivateFieldGet(this, _YargsInstance_strictCommands, \"f\")) {\n                failedStrictCommands = __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").unknownCommands(argv);\n            }\n            if (__classPrivateFieldGet(this, _YargsInstance_strict, \"f\") && !failedStrictCommands) {\n                __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").unknownArguments(argv, aliases, positionalMap, !!isDefaultCommand);\n            }\n            else if (__classPrivateFieldGet(this, _YargsInstance_strictOptions, \"f\")) {\n                __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").unknownArguments(argv, aliases, {}, false, false);\n            }\n            __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").limitedChoices(argv);\n            __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").implications(argv);\n            __classPrivateFieldGet(this, _YargsInstance_validation, \"f\").conflicting(argv);\n        };\n    }\n    [kSetHasOutput]() {\n        __classPrivateFieldSet(this, _YargsInstance_hasOutput, true, \"f\");\n    }\n    [kTrackManuallySetKeys](keys) {\n        if (typeof keys === 'string') {\n            __classPrivateFieldGet(this, _YargsInstance_options, \"f\").key[keys] = true;\n        }\n        else {\n            for (const k of keys) {\n                __classPrivateFieldGet(this, _YargsInstance_options, \"f\").key[k] = true;\n            }\n        }\n    }\n}\nexport function isYargsInstance(y) {\n    return !!y && typeof y.getInternalMethods === 'function';\n}\n","'use strict';\n\n// Bootstraps yargs for ESM:\nimport esmPlatformShim from './lib/platform-shims/esm.mjs';\nimport {YargsFactory} from './build/lib/yargs-factory.js';\n\nconst Yargs = YargsFactory(esmPlatformShim);\nexport default Yargs;\n","#!/usr/bin/env node\nimport { getVirtualFilesystemModuleFromDirPath } from \"./index\"\nimport yargs from \"yargs\"\nimport { hideBin } from \"yargs/helpers\"\nimport * as fs from \"fs/promises\"\nimport mkdirp from \"mkdirp\"\nimport path from \"path\"\n\nconst argv = yargs(hideBin(process.argv))\n  .option(\"dir\", {\n    type: \"string\",\n    description: \"The directory to load files from\",\n  })\n  .option(\"extensions\", {\n    type: \"string\",\n    description: \"Valid extensions to write into vfs module\",\n  })\n  .option(\"outfile\", {\n    type: \"string\",\n    description: \"The output vfs module file e.g. vfs.ts or migrations.ts\",\n  })\n  .option(\"no-import-ext\", {\n    type: \"boolean\",\n    description: \"Do not add the extension to the import path\",\n  })\n  .option(\"content-format\", {\n    type: \"string\",\n    choices: [\n      \"buffer\",\n      \"string\",\n      \"import-star\",\n      \"import-default\",\n      \"require\",\n      \"export-pathlist\",\n    ],\n    default: \"buffer\",\n    description: \"The format to store files in the vfs module.\",\n  })\n  .option(\"verbose\", {\n    type: \"boolean\",\n    default: false,\n  })\n  .example(\n    \"make-vfs ./migrations --extensions sql --content-format=string ./migrations.ts\",\n    \"Put all your migrations into a typescript module\"\n  )\n  .example(\n    \"make-vfs ./routes --extensions ts,js ./routes.generated.ts --content-format=import-default --no-import-ext\",\n    \"Put all your filesystem routes into a typescript module\"\n  ).argv as any\n\nasync function main() {\n  let dir: string = argv.dir ?? argv._[0]\n  let outfile: string = argv.outfile ?? argv._[1]\n\n  if (!dir || !outfile) {\n    console.log(\"Missing dir and/or outfile, use --help for usage\")\n    process.exit(1)\n  }\n\n  let extensions: string[] | undefined = undefined\n  if (argv.extensions) extensions = argv.extensions.split(\",\")\n\n  const opts = {\n    dirPath: dir,\n    extensions,\n    contentFormat: argv.contentFormat,\n    targetPath: outfile,\n    noImportExt: !argv.importExt,\n  }\n  if (argv.verbose) {\n    console.log(opts)\n  }\n\n  await mkdirp(path.dirname(outfile))\n  await fs.writeFile(outfile, await getVirtualFilesystemModuleFromDirPath(opts))\n}\n\nmain()\n"],"mappings":"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","names":["fs","normalize","err","base","module","fs","module","module","left","right","module","module","path","set","module","module","fs","path","m","module","path","module","cb","module","module","module","glob","path","er","stat","module","glob","resolve","module","fs","module","resolve","path","module","dirname","path","module","dirname","path","made","module","dirname","path","module","fs","module","mkdirp","path","glob","path","fs","_a","import_path","import_util","import_fs","import_path","DefaultValuesForTypeKey","mixin","key","argv","args","value","val","env","aliases","defaults","guessType","import_fs","path","import_path","argv","import_fs","import_util","import_path","y18n","y18n","shim","cmd","argv","result","usage","validation","shim","command","argv","c","shim","fail","command","wrap","ui","usage","maxWidth","usage","command","shim","_a","_b","_c","argv","usage","shim","argv","_a","key","shim","shim","argv","resolve","type","key","value","_a","_b","_c","validation","k","completion","fs","import_path","mkdirp","path"]}