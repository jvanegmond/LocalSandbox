"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/lib/get-route-matcher-func.ts
var get_route_matcher_func_exports = {};
__export(get_route_matcher_func_exports, {
  getRouteMatcherFunc: () => getRouteMatcherFunc
});
module.exports = __toCommonJS(get_route_matcher_func_exports);
function getRouteMatcherFunc(routeRegex) {
  const { re, groups } = routeRegex;
  return (pathname) => {
    const routeMatch = re.exec(pathname);
    if (!routeMatch) {
      return false;
    }
    const decode = (param) => {
      try {
        return decodeURIComponent(param);
      } catch (_) {
        throw new Error("failed to decode param");
      }
    };
    const params = {};
    Object.keys(groups).forEach((slugName) => {
      const g = groups[slugName];
      const m = routeMatch[g.pos];
      if (m !== void 0) {
        params[slugName] = ~m.indexOf("/") ? m.split("/").map((entry) => decode(entry)) : g.repeat ? [decode(m)] : decode(m);
      }
    });
    return params;
  };
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getRouteMatcherFunc
});
