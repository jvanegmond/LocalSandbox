import { z } from "zod";
export interface HttpException {
    status: number;
    message?: string;
    _isHttpException: true;
}
export declare abstract class EdgeSpecMiddlewareError extends Error implements HttpException {
    message: string;
    status: number;
    _isHttpException: true;
    constructor(message: string, status?: number);
}
export declare class MethodNotAllowedError extends EdgeSpecMiddlewareError {
    constructor(allowedMethods: readonly string[]);
}
export declare class NotFoundError extends EdgeSpecMiddlewareError {
    constructor(message: string);
}
export declare abstract class BadRequestError extends EdgeSpecMiddlewareError {
    constructor(message: string);
}
export declare class InvalidQueryParamsError extends BadRequestError {
    constructor(message: string);
}
export declare class InvalidContentTypeError extends BadRequestError {
    constructor(message: string);
}
export declare class InputParsingError extends BadRequestError {
    constructor(message: string);
}
export declare class InputValidationError extends BadRequestError {
    constructor(error: z.ZodError<any>);
}
export declare class ResponseValidationError extends EdgeSpecMiddlewareError {
    constructor(error: z.ZodError<any>);
}
