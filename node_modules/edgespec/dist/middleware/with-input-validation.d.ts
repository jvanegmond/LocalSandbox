import { z } from "zod";
import type { QueryArrayFormats } from "../types/global-spec.js";
import { Middleware } from "../middleware/index.js";
export interface RequestInput<JsonBody extends z.ZodTypeAny, QueryParams extends z.ZodTypeAny, CommonParams extends z.ZodTypeAny, FormData extends z.ZodTypeAny, UrlEncodedFormData extends z.ZodTypeAny, RouteParams extends z.ZodTypeAny> {
    jsonBody?: JsonBody;
    queryParams?: QueryParams;
    commonParams?: CommonParams;
    formData?: FormData;
    routeParams?: RouteParams;
    urlEncodedFormData?: UrlEncodedFormData;
    supportedArrayFormats: QueryArrayFormats;
}
export declare const withInputValidation: <JsonBody extends z.ZodTypeAny, QueryParams extends z.ZodTypeAny, CommonParams extends z.ZodTypeAny, FormData_1 extends z.ZodTypeAny, UrlEncodedFormData extends z.ZodTypeAny, RouteParams extends z.ZodTypeAny>(input: RequestInput<JsonBody, QueryParams, CommonParams, FormData_1, UrlEncodedFormData, RouteParams>) => Middleware<{}, {}, {
    jsonBody: z.output<JsonBody>;
    multiPartFormData: z.output<FormData_1>;
    query: z.output<QueryParams>;
    commonParams: z.output<CommonParams>;
    urlEncodedFormData: z.output<UrlEncodedFormData>;
}>;
